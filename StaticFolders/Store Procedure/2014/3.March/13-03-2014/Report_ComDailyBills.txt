
ALTER procedure [dbo].[Report_ComDailyBills]
@date varchar(30),
@ClientsID varchar(max),
@branch varchar(max),
@segment varchar(20),
@Companyid varchar(30),
@Finyear varchar(15),
@grpbranch varchar(10),
@CalType varchar(10),
@MasterSegment varchar(10)

AS
BEGIN
set nocount on
	declare @SQL varchar(max),@TradeCurrency varchar(3)
	
	Select @TradeCurrency = (Case when @MasterSegment in ('10','18','21','22','23') then '2' Else '1' End)
	
	create table #TEMP (customerid varchar(50),clientname varchar(200),
	ucc varchar(50),OpeningBal numeric(28,2),Premium numeric(28,2),MTM numeric(28,2),
	FutureSettlement numeric(28,2),ASNEXCFINSET numeric(28,2),Charges numeric(28,2),
	ServTax numeric(28,2),NetObligation numeric(28,2),NetAdj numeric(28,2),ClosingBal numeric(28,2),
	CashMarnDeposit numeric(28,2),ColeteralVal numeric(28,2),EffecTiveDeposit numeric(28,2),
	ApplMargin numeric(28,2),ExcessShortage numeric(28,2),Exposure numeric(28,2),
	GrpId varchar(50),GrpName varchar(500),FinalDeposit numeric(28,2),

    Grand_OpeningBal numeric(28,2),Grand_Premium numeric(28,2),Grand_MTM numeric(28,2),
	Grand_FutureSettlement numeric(28,2),Grand_ASNEXCFINSET numeric(28,2),Grand_Charges numeric(28,2),
	Grand_ServTax numeric(28,2),Grand_NetObligation numeric(28,2),Grand_NetAdj numeric(28,2),Grand_ClosingBal numeric(28,2),
	Grand_CashMarnDeposit numeric(28,2),Grand_ColeteralVal numeric(28,2),Grand_EffecTiveDeposit numeric(28,2),
	Grand_ApplMargin numeric(28,2),Grand_ExcessShortage numeric(28,2),Grand_Exposure numeric(28,2),

    Branch_OpeningBal numeric(28,2),Branch_Premium numeric(28,2),Branch_MTM numeric(28,2),
	Branch_FutureSettlement numeric(28,2),Branch_ASNEXCFINSET numeric(28,2),Branch_Charges numeric(28,2),
	Branch_ServTax numeric(28,2),Branch_NetObligation numeric(28,2),Branch_NetAdj numeric(28,2),Branch_ClosingBal numeric(28,2),
	Branch_CashMarnDeposit numeric(28,2),Branch_ColeteralVal numeric(28,2),Branch_EffecTiveDeposit numeric(28,2),
	Branch_ApplMargin numeric(28,2),Branch_ExcessShortage numeric(28,2),Branch_Exposure numeric(28,2))

	CREATE TABLE #MARGINSTOCKS(Clientid varchar(50),Stocksresult numeric(28,6),Quantity numeric(28,6),
			productid varchar(500),closeprice  numeric(28,6),varmargin numeric(28,6))

	create table  #TEMPMARGINSTOCKS (TEMPMARGIN_ColeteralVal numeric(28,2),TEMPMARGIN_customerid varchar(50))


				select @SQL='select 
				CASE WHEN CustomerExchangeID_MRGN IS NULL THEN customerid ELSE CustomerExchangeID_MRGN END AS customerid,
				CASE WHEN GrpId_MRGN IS NULL THEN GrpId ELSE GrpId_MRGN END AS GrpId,
				CASE WHEN GrpName_MRGN IS NULL THEN GrpName ELSE GrpName_MRGN END AS GrpName,
				CASE WHEN clientname_MRGN IS NULL THEN clientname ELSE clientname_MRGN END AS clientname,
				CASE WHEN ucc_MRGN IS NULL THEN ucc ELSE ucc_MRGN END AS ucc,
				OpeningBal,Premium,MTM,
				FutureSettlement,ASNEXCFINSET,Charges,ServTax,NetObligation,
				cast(0.0 as varchar(50)) as NetAdj,
				cast(0.0 as varchar(50)) as ClosingBal,
				cast(0.0 as varchar(50)) as CashMarnDeposit,
				cast(0.0 as varchar(50)) as ColeteralVal,
				cast(0.0 as varchar(50)) as EffecTiveDeposit,
				ISNULL(ApplMargin,0) AS ApplMargin,
				cast(0.0 as varchar(50)) as ExcessShortage,
				Exposure
				FROM
				(select distinct ComPositionSummary_CustomerExchangeID as customerid,'



			if(@grpbranch='BRANCH')
				BEGIN
					Select @SQL=@SQL+'branch_id as GrpId,isnull(rtrim(branch_description),'+char(39)+''+char(39)+')+'' [''+isnull(rtrim(branch_code),'+char(39)+''+char(39)+')+'']'' as GrpName,'
				END
				ELSE 
				BEGIN
					Select @SQL=@SQL+'gpm_id as GrpId,isnull(rtrim(GPM_DESCRIPTION),'+char(39)+''+char(39)+')+'' [''+isnull(rtrim(GPM_CODE),'+char(39)+''+char(39)+')+'']'' as GrpName,'
				END

				Select @SQL=@SQL+'(isnull(rtrim(cnt_firstName),'+char(39)+' '+char(39)+') +'
									+char(39)+' '+char(39)+ '+isnull(rtrim(cnt_middleName),'+char(39)+''+char(39)+')+'
									+char(39)+' '+char(39)+ '+isnull(rtrim(cnt_lastName),'+char(39)+''+char(39)+'))as clientname,
									rtrim(cnt_UCC) AS ucc,
					

				cast(0.0 as varchar(50)) as OpeningBal,
				cast(ComPositionSummary_Premium as varchar) as Premium,
				cast(ComPositionSummary_MTMPL as varchar) as MTM,
				cast(ComPositionSummary_FutureFinalSettlement as varchar) as FutureSettlement,
				cast(ComPositionSummary_ExcAsnDlvMarkedValue as varchar) as ASNEXCFINSET,

				cast(isnull(ComPositionSummary_TranCharges,0)+isnull(COMPositionSummary_ClearingCharge,0)+isnull(ComPositionSummary_StampDuty,0)+
				isnull(ComPositionSummary_OtherCharges,0)+isnull(ComPositionSummary_SebiFee,0) as varchar)as Charges,

				cast(isnull(ComPositionSummary_TotalServiceTax,0)+isnull(ComPositionSummary_TotalEduCess,0)+isnull(ComPositionSummary_TotalHgrEduCess,0) as varchar) as ServTax,
				cast(isnull(ComPositionSummary_NetBillAmount,0) as varchar) as NetObligation,
				cast(0.0 as varchar(50)) as NetAdj,
				cast(0.0 as varchar(50)) as ClosingBal,
				cast(0.0 as varchar(50)) as CashMarnDeposit,
				cast(0.0 as varchar(50)) as ColeteralVal,
				cast(0.0 as varchar(50)) as EffecTiveDeposit,
				cast(0.0 as varchar(50)) as ExcessShortage,

				(select  cast(sum(abs(isnull(ComPosition_PostExcAsnDlvShortValue,0))+
				abs(isnull(ComPosition_PostExcAsnDlvLongValue,0))) as varchar(50))  
				from Trans_ComPosition 
				where ComPosition_CustomerExchangeID=ComPositionSummary_CustomerExchangeID 
				and ComPosition_SegmentID='''+@segment+'''
				and cast(DATEADD(dd, 0, DATEDIFF(dd, 0,ComPosition_Date)) as datetime)=
				cast(DATEADD(dd, 0, DATEDIFF(dd, 0,'''+@date+''')) as datetime)
				and ComPosition_CompanyID='''+@Companyid+'''
				group by ComPosition_CustomerExchangeID)as Exposure

				from Trans_Compositionsummary,tbl_master_contact,'
	            if(@grpbranch='BRANCH')
							BEGIN
								Select @SQL=@SQL+'tbl_master_branch 
								where cnt_branchid=branch_id
								and ComPositionSummary_CustomerExchangeID=CNT_INTERNALID'
							END
						ELSE
							BEGIN
								Select @SQL=@SQL+'tbl_master_groupmaster,tbl_trans_group
								where grp_contactid=ComPositionSummary_CustomerExchangeID
								and cnt_internalid=grp_contactid
								AND gpm_type='''+@grpbranch+'''
								AND grp_groupmaster=gpm_id
								AND GRP_GROUPTYPE='''+@grpbranch+''''
							END

				Select @SQL=@SQL+' and 
				cnt_internalid=ComPositionSummary_CustomerExchangeID
				and cnt_branchid=ComPositionSummary_BranchID
				and ComPositionSummary_CustomerExchangeID like ''CL%''
				and ComPositionSummary_Date='''+@date+'''
				and ComPositionSummary_CustomerExchangeID in('+@ClientsID+')
				and ComPositionSummary_BranchID in('+@branch+')
				and ComPositionSummary_SegmentID='''+@segment+'''
				and ComPositionSummary_CompanyID='''+@Companyid+''') as kk

				FULL OUTER JOIN
				(select ComMarginSummary_CustomerID AS CustomerExchangeID_MRGN,'
				if(@grpbranch='BRANCH')
				BEGIN
					Select @SQL=@SQL+'branch_id as GrpId_MRGN,isnull(rtrim(branch_description),'+char(39)+''+char(39)+')+'' [''+isnull(rtrim(branch_code),'+char(39)+''+char(39)+')+'']''as GrpName_MRGN,'
					
				END
				ELSE 
				BEGIN
					Select @SQL=@SQL+'gpm_id GrpId_MRGN,isnull(rtrim(GPM_DESCRIPTION),'+char(39)+''+char(39)+')+'' [''+isnull(rtrim(GPM_CODE),'+char(39)+''+char(39)+')+'']''as GrpName_MRGN,'
				END

				Select @SQL=@SQL+'(isnull(rtrim(cnt_firstName),'+char(39)+' '+char(39)+') +'
									+char(39)+' '+char(39)+ '+isnull(rtrim(cnt_middleName),'+char(39)+''+char(39)+')+'
									+char(39)+' '+char(39)+ '+isnull(rtrim(cnt_lastName),'+char(39)+''+char(39)+'))as clientname_MRGN,
									rtrim(cnt_UCC) ucc_MRGN,
									cast(sum(isnull(ComMarginSummary_TotalMargin,0.0)) as varchar)AS ApplMargin
									from Trans_ComMarginSummary ,tbl_master_contact,'
				  if(@grpbranch='BRANCH')
							BEGIN
								Select @SQL=@SQL+'tbl_master_branch 
								where cnt_branchid=branch_id
								and ComMarginSummary_CustomerID=CNT_INTERNALID'
							END
						ELSE
							BEGIN
								Select @SQL=@SQL+'tbl_master_groupmaster,tbl_trans_group
								where grp_contactid=ComMarginSummary_CustomerID
								and cnt_internalid=grp_contactid
								AND gpm_type='''+@grpbranch+'''
								AND grp_groupmaster=gpm_id
								AND GRP_GROUPTYPE='''+@grpbranch+''''
							END

				Select @SQL=@SQL+' and 
			    cnt_internalid=ComMarginSummary_CustomerID
				and ComMarginSummary_CalType='''+@CalType+''' 
				and cnt_branchid=ComMarginSummary_BranchID
				and ComMarginSummary_CustomerID like ''CL%''
				and ComMarginSummary_SegmentID='''+@segment+'''
				and ComMarginSummary_CustomerID in('+@ClientsID+')
				and cast(DATEADD(dd, 0, DATEDIFF(dd, 0,ComMarginSummary_Date)) as datetime)=
				cast(DATEADD(dd, 0, DATEDIFF(dd, 0,'''+@date+''')) as datetime)
				and ComMarginSummary_CompanyID='''+@Companyid+'''
				group by ComMarginSummary_TotalMargin,ComMarginSummary_CustomerID,'
				if(@grpbranch='BRANCH')
				BEGIN
					Select @SQL=@SQL+'branch_id,branch_description,branch_code,'
					
				END
				ELSE 
				BEGIN
					Select @SQL=@SQL+'gpm_id,GPM_DESCRIPTION,GPM_CODE,'
				END
				Select @SQL=@SQL+' cnt_ucc,cnt_firstName,cnt_middlename,cnt_lastname)AS BB
				ON (customerid=CustomerExchangeID_MRGN)'
Print (@SQL)
					insert into #TEMP(customerid,GrpId,GrpName,clientname,ucc,
					OpeningBal,Premium,MTM,FutureSettlement,ASNEXCFINSET,Charges,
					ServTax,NetObligation,NetAdj,ClosingBal,
					CashMarnDeposit,ColeteralVal,EffecTiveDeposit,
					ApplMargin,ExcessShortage,Exposure)
					exec(@SQL)

	
--select  * from #TEMP
-------------Closing Baln Fetch  Begin
Create Table #TEMP1(TEMP1_CustomerID varchar(100),TEMP1_MainAccountID varchar(100),TEMP1_closing varchar (100),TEMP1_clientname varchar(200),
TEMP1_ucc varchar(50),TEMP1_GrpId varchar(50),TEMP1_GrpName varchar(500))


 
   select @SQL=' select distinct ACCOUNTSLEDGER_SUBACCOUNTID,Amnt,accountsledger_mainaccountid,
					(isnull(rtrim(cnt_firstName),'+char(39)+' '+char(39)+') +'
									+char(39)+' '+char(39)+ '+isnull(rtrim(cnt_middleName),'+char(39)+''+char(39)+')+'
									+char(39)+' '+char(39)+ '+isnull(rtrim(cnt_lastName),'+char(39)+''+char(39)+'))as clientname,
									rtrim(cnt_UCC) AS ucc,'
						If(@grpbranch='BRANCH')
						BEGIN
							Select @SQL=@SQL+'branch_id as GrpId,isnull(rtrim(branch_description),'+char(39)+''+char(39)+')+'' [''+isnull(rtrim(branch_code),'+char(39)+''+char(39)+')+'']'' as GrpName'
						END
						ELSE 
						BEGIN
							Select @SQL=@SQL+'gpm_id as GrpId,isnull(rtrim(GPM_DESCRIPTION),'+char(39)+''+char(39)+')+'' [''+isnull(rtrim(GPM_CODE),'+char(39)+''+char(39)+')+'']'' as GrpName'
						END
						Select @SQL=@SQL+ ' from 
						(select ACCOUNTSLEDGER_SUBACCOUNTID,accountsledger_mainaccountid,
						SUM(isnull(ACCOUNTSLEDGER_AMOUNTCR,0)-isnull(ACCOUNTSLEDGER_AMOUNTDR,0)) as Amnt
						from trans_accountsledger,tbl_master_contact where
						accountsledger_finyear='''+@Finyear+''' and accountsledger_exchangesegmentid='''+@segment+'''
						and accountsledger_SubAccountID in ('+@ClientsID+')
						and accountsledger_mainaccountid in (''SYSTM00001'',''SYSTM00002'',''SYSTM00003'')
						AND ACCOUNTSLEDGER_TRANSACTIONDATE<=cast('''+@date+''' as datetime)
						AND ACCOUNTSLEDGER_SUBACCOUNTID = CNT_INTERNALID
						And Isnull(AccountsLedger_Currency,'+@TradeCurrency+')='+@TradeCurrency+'
						and AccountsLedger_CompanyID='''+@Companyid+'''
						GROUP BY cnt_INTERNALID,ACCOUNTSLEDGER_SUBACCOUNTID,accountsledger_mainaccountid
						HAVING SUM(isnull(ACCOUNTSLEDGER_AMOUNTCR,0)-isnull(ACCOUNTSLEDGER_AMOUNTDR,0))<>0.00) as kk,'

						if(@grpbranch='BRANCH')
							BEGIN
								Select @SQL=@SQL+'tbl_master_branch,tbl_master_contact 
								where cnt_branchid=branch_id
								and ACCOUNTSLEDGER_SUBACCOUNTID=CNT_INTERNALID'
							END
						ELSE
							BEGIN
								Select @SQL=@SQL+'tbl_master_groupmaster,tbl_trans_group,tbl_master_contact 
								where grp_contactid=ACCOUNTSLEDGER_SUBACCOUNTID
								and cnt_internalid=grp_contactid
								AND gpm_type='''+@grpbranch+'''
								AND grp_groupmaster=gpm_id
								AND GRP_GROUPTYPE='''+@grpbranch+''''
							END
--print (@SQL)
						insert Into #TEMP1(TEMP1_CustomerID,TEMP1_closing,TEMP1_MainAccountID,TEMP1_clientname,
										   TEMP1_ucc,TEMP1_GrpId,TEMP1_GrpName)exec(@SQL)

---------------Closing Baln Fetch  End

---------------Closing Baln and CashMargin Deposit Update In Main Temp Table  

insert into #TEMP(customerid,clientname,ucc,GrpId,GrpName)
SELECT distinct TEMP1_CustomerID,TEMP1_clientname,TEMP1_ucc,TEMP1_GrpId,TEMP1_GrpName 
from #TEMP1 where TEMP1_CustomerID NOT in (select distinct customerid from #TEMP)


Update #TEMP set ClosingBal=TEMP1_closing from  #TEMP1 where TEMP1_CustomerID=customerid and TEMP1_MainAccountID='SYSTM00001'
		
Select * into #CashMarnDeposit From
(Select TEMP1_CustomerID as CID,Sum(Cast(TEMP1_closing as Numeric(18,4))) as CMD from  #TEMP1 
where  TEMP1_MainAccountID IN ('SYSTM00002','SYSTM00003')
Group By TEMP1_CustomerID) as T1

Update #TEMP set CashMarnDeposit=CMD from #CashMarnDeposit
Where CustomerID=CID

Drop Table #CashMarnDeposit

--select * from #TEMp
------------------------------UPDATE COLETERAL
--select * into #ABC from

Create Table #ABC(QuantityS numeric(28,2),CustomerIDS varchar(100),ProductSeriesIDS varchar (100),
SegmentIDS varchar(200),SettlementNumberS varchar(50),SettlementNumberT varchar(50),SourceSegmentId varchar(50))

select @SQL=''

select @SQL='
			select isnull(DematTransactions_Quantity,0) as QuantityS,
			DematTransactions_CustomerID as CustomerIDS,
			DematTransactions_ProductSeriesID as ProductSeriesIDS,
			DematTransactions_SegmentID as SegmentIDS,
			DematTransactions_SettlementNumberS as SettlementNumberS,
			DematTransactions_SettlementNumberT as SettlementNumberT,
			DematTransactions_SourceSegmentId as SourceSegmentId
			from Trans_DematTransactions 
			where 
			DematTransactions_Date<='''+@date+'''
			and DematTransactions_FinYear='''+@Finyear+'''
			and DematTransactions_CustomerID in ('+@ClientsID+')
			and (DematTransactions_SegmentID='''+@segment+''' or DematTransactions_SourceSegmentId='''+@segment+''')
			and DematTransactions_CompanyID='''+@Companyid+''''

Insert Into #ABC
(QuantityS,CustomerIDS,ProductSeriesIDS,SegmentIDS,SettlementNumberS,SettlementNumberT,SourceSegmentId)

exec (@SQL)

print @SQL

--select * from #ABC 

select * into #t from 
(select * from #ABC where SourceSegmentId is not null) as tab 

delete from #ABC where SourceSegmentId is not null

insert into #ABC(QuantityS,CustomerIDS,ProductSeriesIDS,SegmentIDS,
SettlementNumberS,SettlementNumberT,SourceSegmentId)
select QuantityS,CustomerIDS,ProductSeriesIDS,SegmentIDS,null,
SettlementNumberT,null
from #t where SourceSegmentId<>SegmentIDS


insert into #ABC(QuantityS,CustomerIDS,ProductSeriesIDS,SegmentIDS,
SettlementNumberS,SettlementNumberT,SourceSegmentId)
select QuantityS,CustomerIDS,ProductSeriesIDS,SourceSegmentId,
SettlementNumberS,null,null
from #t where SourceSegmentId<>SegmentIDS

delete from #ABC where SegmentIDS<>@segment

------------------------------------MARGIN STOCKS
				--INSERT INTO #MARGINSTOCKS(Clientid,productid,Quantity)
				--select 
				--case when CustomerIDS is null then CustomerIDT else CustomerIDS end as Client,
				--case when ProductSeriesIDS is null then ProductSeriesIDT else ProductSeriesIDS end as product,
				--(ISNULL(Quantityt,0.0)-ISNULL(QuantityS,0.0)) AS QuantityTTEMP
				--from
				--(select  isnull(QuantityS,0) as QuantityS,
				--CustomerIDS as CustomerIDS,
				--ProductSeriesIDS as ProductSeriesIDS
				--from #ABC where rtrim(ltrim(SettlementNumberS))='Margin'
				--and SegmentIDS=@segment) as tabS
				
				--full outer join

				--(select  isnull(QuantityS,0) as QuantityT,
				--CustomerIDS as CustomerIDT,
				--ProductSeriesIDS as ProductSeriesIDT
				--from #ABC where rtrim(ltrim(SettlementNumberT))='Margin'
				--and SegmentIDS=@segment) as tabT
				
				--on(CustomerIDS=CustomerIDT
				--	and ProductSeriesIDS=ProductSeriesIDT)

			Insert into #MARGINSTOCKS (Clientid,productid)
			select distinct CustomerIDS,ProductSeriesIDS from #ABC
			
			Update #MARGINSTOCKS Set Quantity=Rslt.Qty
			From (select CustomerIDS as clnt,ProductSeriesIDS as Prd,sum(isnull(QuantityS,0)) as Qty 
				from #ABC where SettlementNumberT='Margin'
				Group by CustomerIDS,ProductSeriesIDS) As Rslt
				where Clientid=clnt and productid=Prd

			Update #MARGINSTOCKS Set Quantity=isnull(Quantity,0)-Rslt.Qty
			From (select CustomerIDS as clnt,ProductSeriesIDS as Prd,sum(isnull(QuantityS,0)) as Qty 
				from #ABC where SettlementNumberS='Margin'
				Group by CustomerIDS,ProductSeriesIDS) As Rslt
				where Clientid=clnt and productid=Prd

--------------------------------FETCH CLOSE PRICE				

	update #MARGINSTOCKS set closeprice=DailyStat_Close
					FROM Trans_DailyStatistics,
					(
						select max(DailyStat_DateTime) AS DATE,
							   DailyStat_ProductSeriesID AS PRID
						from Trans_DailyStatistics,#MARGINSTOCKS
						where DailyStat_DateTime<@date
						AND DailyStat_ProductSeriesID=productid
						group by DailyStat_ProductSeriesID
					) AS KK
					WHERE  DailyStat_ProductSeriesID=productid
					AND DailyStat_ProductSeriesID=PRID
					AND PRID=PRODUCTID
					AND DailyStat_DateTime=DATE
				

----------------------------------FETCH VARMARGIN

			
update #MARGINSTOCKS set varmargin=DailyVar_AppMargin
					FROM Trans_DailyVar,
					(
						select max(DailyVar_Date) AS DATE,
							   DailyVar_ProductSeriesID AS PRID
						from Trans_DailyVar,#MARGINSTOCKS
						where DailyVar_Date<@date
						AND DailyVar_ProductSeriesID=productid
						group by DailyVar_ProductSeriesID
					) AS KK
					WHERE  DailyVar_ProductSeriesID=productid
					AND DailyVar_ProductSeriesID=PRID
					AND PRID=PRODUCTID
					AND DailyVar_Date=DATE


			update #MARGINSTOCKS set Stocksresult=((Quantity*isnull(closeprice,0))*(100-isnull(varmargin,0))/100)

------------Collateral Value Insert

			insert Into  #TEMPMARGINSTOCKS (TEMPMARGIN_ColeteralVal,TEMPMARGIN_customerid)
			select sum(isnull(Stocksresult,0.0)) as Stocksresult,Clientid from	#MARGINSTOCKS 	
			group by Clientid having sum(isnull(Stocksresult,0.0))<>0	


--select * from #TEMPMARGINSTOCKS
--			update #TEMP set ColeteralVal=Stocksresult from 
--			(select sum(isnull(Stocksresult,0.0)) as Stocksresult,Clientid from	#MARGINSTOCKS 	
--			 group by Clientid) as tab where Clientid=customerid

delete from #MARGINSTOCKS
------------------------------------holdBack STOCKS
				INSERT INTO #MARGINSTOCKS(Clientid,productid,Quantity)
				select 
				case when CustomerIDS is null then CustomerIDT else CustomerIDS end as Client,
				case when ProductSeriesIDS is null then ProductSeriesIDT else ProductSeriesIDS end as product,
				(ISNULL(Quantityt,0.0)-ISNULL(QuantityS,0.0)) AS QuantityTTEMP
				from
				(select  isnull(QuantityS,0) as QuantityS,
				CustomerIDS as CustomerIDS,
				ProductSeriesIDS as ProductSeriesIDS
				from #ABC where
				rtrim(ltrim(SettlementNumberS))='HLDBK'
				and SegmentIDS=@segment) as tabS
				
				full outer join

				(select  isnull(QuantityS,0) as QuantityT,
				CustomerIDS as CustomerIDT,
				ProductSeriesIDS as ProductSeriesIDT
				from #ABC where
				rtrim(ltrim(SettlementNumberT))='HLDBK'
				and SegmentIDS=@segment) as tabT
				
				on(CustomerIDS=CustomerIDT
					and ProductSeriesIDS=ProductSeriesIDT)

		
----------------------------FETCH CLOSE PRICE				
update #MARGINSTOCKS set closeprice=DailyStat_Close
					FROM Trans_DailyStatistics,
					(
						select max(DailyStat_DateTime) AS DATE,
							   DailyStat_ProductSeriesID AS PRID
						from Trans_DailyStatistics,#MARGINSTOCKS
						where DailyStat_DateTime<@date
						AND DailyStat_ProductSeriesID=productid
						group by DailyStat_ProductSeriesID
					) AS KK
					WHERE  DailyStat_ProductSeriesID=productid
					AND DailyStat_ProductSeriesID=PRID
					AND PRID=PRODUCTID
					AND DailyStat_DateTime=DATE

--------------------------FETCH VARMARGIN
					update #MARGINSTOCKS set varmargin=DailyVar_AppMargin
					FROM Trans_DailyVar,
					(
						select max(DailyVar_Date) AS DATE,
							   DailyVar_ProductSeriesID AS PRID
						from Trans_DailyVar,#MARGINSTOCKS
						where DailyVar_Date<@date
						AND DailyVar_ProductSeriesID=productid
						group by DailyVar_ProductSeriesID
					) AS KK
					WHERE  DailyVar_ProductSeriesID=productid
					AND DailyVar_ProductSeriesID=PRID
					AND PRID=PRODUCTID
					AND DailyVar_Date=DATE

--select * from #MARGINSTOCKS
			update #MARGINSTOCKS set Stocksresult=((Quantity*isnull(closeprice,0))*(100-isnull(varmargin,0))/100)

			------------Collateral Value Update
			update #TEMPMARGINSTOCKS set TEMPMARGIN_ColeteralVal=TEMPMARGIN_ColeteralVal+Stocksresult from 
			(select sum(isnull(Stocksresult,0.0)) as Stocksresult,Clientid from	#MARGINSTOCKS 	
			 group by Clientid) as tab where Clientid=TEMPMARGIN_customerid


			------------Collateral Value Insert
			insert Into  #TEMPMARGINSTOCKS (TEMPMARGIN_ColeteralVal,TEMPMARGIN_customerid)
			select sum(isnull(Stocksresult,0.0)) as Stocksresult,Clientid from	#MARGINSTOCKS 
			group by Clientid having sum(isnull(Stocksresult,0.0))<>0
			and Clientid not in (select distinct TEMPMARGIN_customerid from #TEMPMARGINSTOCKS)


			----------------update Temp Table
			Update #TEMP set ColeteralVal=TEMPMARGIN_ColeteralVal from #TEMPMARGINSTOCKS where TEMPMARGIN_customerid=customerid

			--------------Insert into Temp from #TEMPMARGINSTOCKS

			insert Into  #TEMP (ColeteralVal,customerid)
			select TEMPMARGIN_ColeteralVal,TEMPMARGIN_customerid from #TEMPMARGINSTOCKS
			where TEMPMARGIN_customerid not in (select distinct customerid from #TEMP)




--			update #TEMP set ColeteralVal=ColeteralVal+Stocksresult from 
--			(select sum(isnull(Stocksresult,0.0)) as Stocksresult,Clientid from	#MARGINSTOCKS 	
--			 group by Clientid) as tab where Clientid=customerid


------------------------------Insert Net Adj in #TEMP
Update #TEMP set NetAdj=Amnt from 
(select SUM(isnull(ACCOUNTSLEDGER_AMOUNTCR,0)-isnull(ACCOUNTSLEDGER_AMOUNTDR,0)) as Amnt,
AccountsLedger_SubAccountID
from trans_accountsledger,#TEMP
where accountsledger_MainAccountID ='SYSTM00001'
and AccountsLedger_SubAccountID=customerid
and cast(DATEADD(dd, 0, DATEDIFF(dd, 0,AccountsLedger_TransactionDate)) as datetime)=cast(DATEADD(dd, 0, DATEDIFF(dd, 0,@date)) as datetime) 
and ltrim(rtrim(AccountsLedger_FinYear))=@Finyear
and AccountsLedger_ExchangeSegmentID =@segment
and Left(AccountsLedger_TransactionReferenceID,1) not in('X','Y','Z') 
and accountsledger_TransactionType<>'OpeningBalance' 
And Isnull(AccountsLedger_Currency,@TradeCurrency)=@TradeCurrency
and AccountsLedger_CompanyID=@Companyid GROUP BY AccountsLedger_SubAccountID) as jb
where AccountsLedger_SubAccountID=customerid

------------------------------insert Opening Balance in #TEMP
Update #TEMP set OpeningBal=Amnt from 
(select SUM(isnull(ACCOUNTSLEDGER_AMOUNTCR,0)-isnull(ACCOUNTSLEDGER_AMOUNTDR,0)) as Amnt,
AccountsLedger_SubAccountID
from trans_accountsledger,#TEMP
where accountsledger_MainAccountID ='SYSTM00001'
and AccountsLedger_SubAccountID=customerid
and AccountsLedger_TransactionDate<@date
and ltrim(rtrim(AccountsLedger_FinYear))=@Finyear
and AccountsLedger_ExchangeSegmentID =@segment
And Isnull(AccountsLedger_Currency,@TradeCurrency)=@TradeCurrency
and AccountsLedger_CompanyID=@Companyid GROUP BY AccountsLedger_SubAccountID) as jb
where AccountsLedger_SubAccountID=customerid

------------------------------insert Closing Balance in #TEMP
Update #TEMP set ClosingBal=Amnt from 
(select SUM(isnull(ACCOUNTSLEDGER_AMOUNTCR,0)-isnull(ACCOUNTSLEDGER_AMOUNTDR,0)) as Amnt,
AccountsLedger_SubAccountID
from trans_accountsledger,#TEMP
where accountsledger_MainAccountID ='SYSTM00001'
and AccountsLedger_SubAccountID=customerid
and AccountsLedger_TransactionDate<=@date
and ltrim(rtrim(AccountsLedger_FinYear))=@Finyear
and AccountsLedger_ExchangeSegmentID =@segment
And Isnull(AccountsLedger_Currency,@TradeCurrency)=@TradeCurrency
and AccountsLedger_CompanyID=@Companyid GROUP BY AccountsLedger_SubAccountID) as jb
where AccountsLedger_SubAccountID=customerid

-----------------------------------update EffecTiveDeposit------------------------------
update #TEMP set EffecTiveDeposit=isnull(ColeteralVal,0)+isnull(CashMarnDeposit,0)
-----------------------------------------------------------------------------------------
---------------------------update Final Deposit
Update #TEMP set FinalDeposit=isnull(EffecTiveDeposit,0)+isnull(ClosingBal,0)


------------------------Update Exxes Shortage

Update #TEMP set ExcessShortage= case when isnull(FinalDeposit,0) >=0 
									  then (isnull(FinalDeposit,0)-isnull(ApplMargin,0)) 
									  when ApplMargin is null then isnull(FinalDeposit,0)
									  when ApplMargin=0 then isnull(FinalDeposit,0)
								  else (-1)*(isnull(ApplMargin,0))end

---------- Exposure Figures were not correct as per the calculations above.For the time being we will calculate the exposure here and
---------- replace the previously generated figure------ 25th May 2012---- binay

update #TEMP set Exposure=0.00

create table #TmpExp (ClientID varchar(10),ProductID bigint,OptType varchar(10) null,strike numeric(18,4) null,expiry datetime,
NetQty numeric(18,0),ClosePrice numeric(18,4) null,
Exposure numeric(28,2))

insert into #TmpExp (ClientID,ProductID,OptType,strike,expiry,NetQty)
select ComCustomerTrades_CustomerID,ComCustomerTrades_ProductSeriesID,Commodity_TickerSeries,Commodity_StrikePrice,Commodity_ExpiryDate,
SUM(comcustomertrades_unitpricequantity) 
from Trans_ComCustomerTrades,Master_Commodity
where ComCustomerTrades_ExchangeSegment=@Segment
and ComCustomerTrades_TradeDate<=@Date
and Commodity_ExpiryDate>=@Date
and ComCustomerTrades_ProductSeriesID=Commodity_ProductSeriesID
group by ComCustomerTrades_CustomerID,ComCustomerTrades_ProductSeriesID,Commodity_TickerSeries,Commodity_StrikePrice,Commodity_ExpiryDate
having SUM(comcustomertrades_unitpricequantity)<>0



update #TmpExp set ClosePrice=
							case when isnull(ComDailyStat_AssetPrice,0)=0 then 
								case when ISNULL(comdailystat_spotprice,0)=0 then ComDailyStat_SettlementPrice 
									Else ComDailyStat_SpotPrice End
								Else ComDailyStat_AssetPrice End
							from Trans_ComDailyStat where
							ComDailyStat_DateTime=@Date and ComDailyStat_ProductSeriesID=ProductID


update #TmpExp set Exposure=
						case when isnull(strike,0)=0 then abs(NetQty)*isnull(ClosePrice,0)
						when strike>0 then
										case when NetQty>0 then abs(NetQty)*isnull(ClosePrice,0) else 0.00 end
						Else 0.00 end

Create table #TmpClExp (Client varchar(10) null,TotalExposure numeric(28,2) null)
Insert into #TmpClExp (Client,TotalExposure)
Select ClientID,SUM(isnull(exposure,0)) from #TmpExp
group by ClientID

update #TEMP set Exposure=TotalExposure from #TmpClExp
where client=customerid

update #TEMP set FutureSettlement=isnull(FutureSettlement,0)+isnull(ASNEXCFINSET,0)

------------------------------------------------------------------------------------------------------------------------------

------------------------------Group Total
update #TEMP set Branch_OpeningBal=Opening_Bal,
				Branch_Premium=Pre_mium,
				Branch_MTM=MT_M,
				Branch_FutureSettlement=Future_Settlement,
				Branch_ASNEXCFINSET=ASNEXC_FINSET,
				Branch_Charges=Char_ges,
				Branch_ServTax=Serv_Tax,
				Branch_NetObligation=Net_Obligation,
				Branch_NetAdj=Net_Adj,
				Branch_ClosingBal=Closing_Bal,
				Branch_CashMarnDeposit=CashMarn_Deposit,
				Branch_ColeteralVal=Coleteral_Val,
				Branch_EffecTiveDeposit=EffecTive_Deposit,
				Branch_ApplMargin=Appl_Margin,
				Branch_ExcessShortage=Excess_Shortage,
				Branch_Exposure=Expo_sure
		
	
				from (select  GrpId as SUM_GrpId, 
				SUM(ISNULL(OpeningBal,0)) As Opening_Bal,
				SUM(ISNULL(Premium,0))As Pre_mium,
				SUM(ISNULL(MTM,0)) as MT_M,
				SUM(ISNULL(FutureSettlement,0)) as Future_Settlement,
				SUM(ISNULL(ASNEXCFINSET,0)) as ASNEXC_FINSET,
				SUM(ISNULL(Charges,0)) as Char_ges,
				SUM(ISNULL(ServTax,0)) as Serv_Tax,
				SUM(ISNULL(NetObligation,0)) as Net_Obligation,
				SUM(ISNULL(NetAdj,0)) as Net_Adj,
				SUM(ISNULL(ClosingBal,0)) as Closing_Bal,
				SUM(ISNULL(CashMarnDeposit,0)) CashMarn_Deposit,
				SUM(ISNULL(ColeteralVal,0)) as Coleteral_Val,
				SUM(ISNULL(EffecTiveDeposit,0)) as EffecTive_Deposit,
				SUM(ISNULL(ApplMargin,0)) as Appl_Margin,
				SUM(ISNULL(ExcessShortage,0)) as Excess_Shortage,
				SUM(ISNULL(Exposure,0))as Expo_sure 
from  #TEMP Group by GrpId) As AA where GrpId=SUM_GrpId


------------------------------------Grand Total

update #TEMP set Grand_OpeningBal=Opening_Bal1,
				Grand_Premium=Pre_mium1,
				Grand_MTM=MT_M1,
				Grand_FutureSettlement=Future_Settlement1,
				Grand_ASNEXCFINSET=ASNEXC_FINSET1,
				Grand_Charges=Char_ges1,
				Grand_ServTax=Serv_Tax1,
				Grand_NetObligation= Net_Obligation1,
				Grand_NetAdj=Net_Adj1,
				Grand_ClosingBal=Closing_Bal1,
				Grand_CashMarnDeposit=CashMarn_Deposit1,
				Grand_ColeteralVal=Coleteral_Val1,
				Grand_EffecTiveDeposit=EffecTive_Deposit1,
				Grand_ApplMargin=Appl_Margin1,
				Grand_ExcessShortage=Excess_Shortage1,
				Grand_Exposure=Expo_sure1
			
from (select    SUM(ISNULL(OpeningBal,0.00)) As Opening_Bal1,
				SUM(ISNULL(Premium,0.00))As Pre_mium1,
				SUM(ISNULL(MTM,0.00)) as MT_M1,
				SUM(ISNULL(FutureSettlement,0.00)) as Future_Settlement1,
				SUM(ISNULL(ASNEXCFINSET,0.00)) as ASNEXC_FINSET1,
				SUM(ISNULL(Charges,0.00)) as Char_ges1,
				SUM(ISNULL(ServTax,0.00)) as Serv_Tax1,
				SUM(ISNULL(NetObligation,0.00)) as Net_Obligation1,
				SUM(ISNULL(NetAdj,0.00)) as Net_Adj1,
				SUM(ISNULL(ClosingBal,0.00)) as Closing_Bal1,
				SUM(ISNULL(CashMarnDeposit,0.00)) CashMarn_Deposit1,
				SUM(ISNULL(ColeteralVal,0.00)) as Coleteral_Val1,
				SUM(ISNULL(EffecTiveDeposit,0.00)) as EffecTive_Deposit1,
				SUM(ISNULL(ApplMargin,0.00)) as Appl_Margin1,
				SUM(ISNULL(ExcessShortage,0.00)) as Excess_Shortage1,
				SUM(ISNULL(Exposure,0.00))as Expo_sure1 
from  #TEMP) As BB

If(@grpbranch='BRANCH')
begin
	Update #TEMP set GrpId=branch_id,
					 GrpName=isnull(rtrim(branch_description),'')+''+'['+isnull(rtrim(branch_code),'')+']',
					 clientname=isnull(rtrim(cnt_firstName),'') +' '+isnull(rtrim(cnt_middleName),'')+' '+isnull(rtrim(cnt_lastName),''),
					 ucc=rtrim(cnt_UCC)
	from tbl_master_branch,tbl_master_contact 
	where cnt_branchid=branch_id and customerid=CNT_INTERNALID
end 



select customerid,GrpId,GrpName,clientname,ucc,
case when isnull(OpeningBal,0)=0 then null  when isnull(OpeningBal,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(OpeningBal,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(OpeningBal,0.00)) AS VARCHAR(8000)),'N') end as OpeningBal,
isnull(OpeningBal,0.00) as OpeningBal1,
case when isnull(Premium,0)=0 then null  when isnull(Premium,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Premium,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Premium,0.00)) AS VARCHAR(8000)),'N') end as Premium,
isnull(Premium,0.00) as Premium1,
case when isnull(MTM,0)=0 then null  when isnull(MTM,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(MTM,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(MTM,0.00)) AS VARCHAR(8000)),'N') end as MTM,
isnull(MTM,0.00) as MTM1,
case when isnull(FutureSettlement,0)=0 then null  when isnull(FutureSettlement,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(FutureSettlement,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(FutureSettlement,0.00)) AS VARCHAR(8000)),'N') end as FutureSettlement,
isnull(FutureSettlement,0.00) as FutureSettlement1,
case when isnull(ASNEXCFINSET,0)=0 then null  when isnull(ASNEXCFINSET,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(ASNEXCFINSET,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(ASNEXCFINSET,0.00)) AS VARCHAR(8000)),'N') end as ASNEXCFINSET,
isnull(ASNEXCFINSET,0.00)as ASNEXCFINSET1,
case when isnull(Charges,0)=0 then null  when isnull(Charges,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Charges,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Charges,0.00)) AS VARCHAR(8000)),'N') end as Charges,
isnull(Charges,0.00) as Charges1,
case when isnull(ServTax,0)=0 then null  when isnull(ServTax,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(ServTax,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(ServTax,0.00)) AS VARCHAR(8000)),'N') end as ServTax,
isnull(ServTax,0.00) as ServTax1,
case when isnull(NetObligation,0)=0 then null  when isnull(NetObligation,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(NetObligation,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(NetObligation,0.00)) AS VARCHAR(8000)),'N') end as NetObligation,
isnull(NetObligation,0.00) as NetObligation1,
case when isnull(NetAdj,0)=0 then null  when isnull(NetAdj,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(NetAdj,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(NetAdj,0.00)) AS VARCHAR(8000)),'N') end as NetAdj,
isnull(NetAdj,0.00) as NetAdj1,
case when isnull(ClosingBal,0)=0 then null  when isnull(ClosingBal,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(ClosingBal,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(ClosingBal,0.00)) AS VARCHAR(8000)),'N') end as ClosingBal,
isnull(ClosingBal,0.00) as ClosingBal1,
case when isnull(CashMarnDeposit,0)=0 then null  when isnull(CashMarnDeposit,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(CashMarnDeposit,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(CashMarnDeposit,0.00)) AS VARCHAR(8000)),'N') end as CashMarnDeposit,
isnull(CashMarnDeposit,0.00) as CashMarnDeposit1,
case when isnull(ColeteralVal,0)=0 then null  when isnull(ColeteralVal,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(ColeteralVal,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(ColeteralVal,0.00)) AS VARCHAR(8000)),'N') end as ColeteralVal,
isnull(ColeteralVal,0.00) as ColeteralVal1,
case when isnull(EffecTiveDeposit,0)=0 then null  when isnull(EffecTiveDeposit,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(EffecTiveDeposit,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(EffecTiveDeposit,0.00)) AS VARCHAR(8000)),'N') end as EffecTiveDeposit,
isnull(EffecTiveDeposit,0.00) as EffecTiveDeposit1,
case when isnull(ApplMargin,0)=0 then null  when isnull(ApplMargin,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(ApplMargin,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(ApplMargin,0.00)) AS VARCHAR(8000)),'N') end as ApplMargin,
isnull(ApplMargin,0.00) as ApplMargin1,
case when isnull(ExcessShortage,0)=0 then null  when isnull(ExcessShortage,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(ExcessShortage,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(ExcessShortage,0.00)) AS VARCHAR(8000)),'N') end as ExcessShortage,
isnull(ExcessShortage,0.00) as ExcessShortage1,
case when isnull(Exposure,0)=0 then null  when isnull(Exposure,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Exposure,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Exposure,0.00)) AS VARCHAR(8000)),'N') end as Exposure,
isnull(Exposure,0.00) as Exposure1,

case when isnull(Branch_OpeningBal,0)=0 then null  when isnull(Branch_OpeningBal,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Branch_OpeningBal,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Branch_OpeningBal,0.00)) AS VARCHAR(8000)),'N') end as Branch_OpeningBal,
case when isnull(Branch_Premium,0)=0 then null  when isnull(Branch_Premium,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Branch_Premium,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Branch_Premium,0.00)) AS VARCHAR(8000)),'N') end as Branch_Premium,
case when isnull(Branch_MTM,0)=0 then null  when isnull(Branch_MTM,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Branch_MTM,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Branch_MTM,0.00)) AS VARCHAR(8000)),'N') end as Branch_MTM,
case when isnull(Branch_FutureSettlement,0)=0 then null  when isnull(Branch_FutureSettlement,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Branch_FutureSettlement,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Branch_FutureSettlement,0.00)) AS VARCHAR(8000)),'N') end as Branch_FutureSettlement,
case when isnull(Branch_ASNEXCFINSET,0)=0 then null  when isnull(Branch_ASNEXCFINSET,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Branch_ASNEXCFINSET,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Branch_ASNEXCFINSET,0.00)) AS VARCHAR(8000)),'N') end as Branch_ASNEXCFINSET,
case when isnull(Branch_Charges,0)=0 then null  when isnull(Branch_Charges,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Branch_Charges,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Branch_Charges,0.00)) AS VARCHAR(8000)),'N') end as Branch_Charges,
case when isnull(Branch_ServTax,0)=0 then null  when isnull(Branch_ServTax,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Branch_ServTax,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Branch_ServTax,0.00)) AS VARCHAR(8000)),'N') end as Branch_ServTax,
case when isnull(Branch_NetObligation,0)=0 then null  when isnull(Branch_NetObligation,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Branch_NetObligation,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Branch_NetObligation,0.00)) AS VARCHAR(8000)),'N') end as Branch_NetObligation,
case when isnull(Branch_NetAdj,0)=0 then null  when isnull(Branch_NetAdj,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Branch_NetAdj,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Branch_NetAdj,0.00)) AS VARCHAR(8000)),'N') end as Branch_NetAdj,
case when isnull(Branch_ClosingBal,0)=0 then null  when isnull(Branch_ClosingBal,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Branch_ClosingBal,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Branch_ClosingBal,0.00)) AS VARCHAR(8000)),'N') end as Branch_ClosingBal,
case when isnull(Branch_CashMarnDeposit,0)=0 then null  when isnull(Branch_CashMarnDeposit,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Branch_CashMarnDeposit,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Branch_CashMarnDeposit,0.00)) AS VARCHAR(8000)),'N') end as Branch_CashMarnDeposit,
case when isnull(Branch_ColeteralVal,0)=0 then null  when isnull(Branch_ColeteralVal,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Branch_ColeteralVal,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Branch_ColeteralVal,0.00)) AS VARCHAR(8000)),'N') end as Branch_ColeteralVal,
case when isnull(Branch_EffecTiveDeposit,0)=0 then null  when isnull(Branch_EffecTiveDeposit,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Branch_EffecTiveDeposit,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Branch_EffecTiveDeposit,0.00)) AS VARCHAR(8000)),'N') end as Branch_EffecTiveDeposit,
case when isnull(Branch_ApplMargin,0)=0 then null  when isnull(Branch_ApplMargin,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Branch_ApplMargin,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Branch_ApplMargin,0.00)) AS VARCHAR(8000)),'N') end as Branch_ApplMargin,
case when isnull(Branch_ExcessShortage,0)=0 then null  when isnull(Branch_ExcessShortage,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Branch_ExcessShortage,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Branch_ExcessShortage,0.00)) AS VARCHAR(8000)),'N') end as Branch_ExcessShortage,
case when isnull(Branch_Exposure,0)=0 then null  when isnull(Branch_Exposure,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Branch_Exposure,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Branch_Exposure,0.00)) AS VARCHAR(8000)),'N') end as Branch_Exposure,


case when isnull(Grand_OpeningBal,0)=0 then null  when isnull(Grand_OpeningBal,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Grand_OpeningBal,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Grand_OpeningBal,0.00)) AS VARCHAR(8000)),'N') end as Grand_OpeningBal,
case when isnull(Grand_Premium,0)=0 then null  when isnull(Grand_Premium,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Grand_Premium,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Grand_Premium,0.00)) AS VARCHAR(8000)),'N') end as Grand_Premium,
case when isnull(Grand_MTM,0)=0 then null  when isnull(Grand_MTM,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Grand_MTM,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Grand_MTM,0.00)) AS VARCHAR(8000)),'N') end as Grand_MTM,
case when isnull(Grand_FutureSettlement,0)=0 then null  when isnull(Grand_FutureSettlement,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Grand_FutureSettlement,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Grand_FutureSettlement,0.00)) AS VARCHAR(8000)),'N') end as Grand_FutureSettlement,
case when isnull(Grand_ASNEXCFINSET,0)=0 then null  when isnull(Grand_ASNEXCFINSET,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Grand_ASNEXCFINSET,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Grand_ASNEXCFINSET,0.00)) AS VARCHAR(8000)),'N') end as Grand_ASNEXCFINSET,
case when isnull(Grand_Charges,0)=0 then null  when isnull(Grand_Charges,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Grand_Charges,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Grand_Charges,0.00)) AS VARCHAR(8000)),'N') end as Grand_Charges,
case when isnull(Grand_ServTax,0)=0 then null  when isnull(Grand_ServTax,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Grand_ServTax,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Grand_ServTax,0.00)) AS VARCHAR(8000)),'N') end as Grand_ServTax,
case when isnull(Grand_NetObligation,0)=0 then null  when isnull(Grand_NetObligation,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Grand_NetObligation,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Grand_NetObligation,0.00)) AS VARCHAR(8000)),'N') end as Grand_NetObligation,
case when isnull(Grand_NetAdj,0)=0 then null  when isnull(Grand_NetAdj,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Grand_NetAdj,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Grand_NetAdj,0.00)) AS VARCHAR(8000)),'N') end as Grand_NetAdj,
case when isnull(Grand_ClosingBal,0)=0 then null  when isnull(Grand_ClosingBal,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Grand_ClosingBal,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Grand_ClosingBal,0.00)) AS VARCHAR(8000)),'N') end as Grand_ClosingBal,
case when isnull(Grand_CashMarnDeposit,0)=0 then null  when isnull(Grand_CashMarnDeposit,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Grand_CashMarnDeposit,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Grand_CashMarnDeposit,0.00)) AS VARCHAR(8000)),'N') end as Grand_CashMarnDeposit,
case when isnull(Grand_ColeteralVal,0)=0 then null  when isnull(Grand_ColeteralVal,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Grand_ColeteralVal,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Grand_ColeteralVal,0.00)) AS VARCHAR(8000)),'N') end as Grand_ColeteralVal,
case when isnull(Grand_EffecTiveDeposit,0)=0 then null  when isnull(Grand_EffecTiveDeposit,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Grand_EffecTiveDeposit,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Grand_EffecTiveDeposit,0.00)) AS VARCHAR(8000)),'N') end as Grand_EffecTiveDeposit,
case when isnull(Grand_ApplMargin,0)=0 then null  when isnull(Grand_ApplMargin,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Grand_ApplMargin,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Grand_ApplMargin,0.00)) AS VARCHAR(8000)),'N') end as Grand_ApplMargin,
case when isnull(Grand_ExcessShortage,0)=0 then null  when isnull(Grand_ExcessShortage,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Grand_ExcessShortage,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Grand_ExcessShortage,0.00)) AS VARCHAR(8000)),'N') end as Grand_ExcessShortage,
case when isnull(Grand_Exposure,0)=0 then null  when isnull(Grand_Exposure,0)<0 then '-'+dbo.fn_FormatNumber(CAST(abs(isnull(Grand_Exposure,0.00)) AS VARCHAR(8000)),'N') else dbo.fn_FormatNumber(CAST(abs(isnull(Grand_Exposure,0.00)) AS VARCHAR(8000)),'N') end as Grand_Exposure

from #TEMP order by GrpName,clientname

SELECT @SQL='SELECT 
						(select Top 1(cmp_panNo) from tbl_master_company where cmp_internalid='''+@Companyid+''')as cmppanno,
						 isnull((Select top 1 phf_countryCode+''-''+phf_areaCode+''-''+phf_phoneNumber from tbl_master_phonefax where  PHF_TYPE=''Work'' AND phf_cntId='''+@Companyid+'''),'''')as cmpphno,
						 (select Top 1(eml_email) from tbl_master_email where eml_cntid='''+@Companyid+''' and eml_type=''Official'')as cmpemail,
						 (select Top 1(cmp_Name) from tbl_master_company where cmp_internalid='''+@Companyid+''')as cmpname,
						  (select Top 1(cmp_ServiceTaxNo) from tbl_master_company where cmp_internalid='''+@Companyid+''')as ServiceTaxNo,
						 (select top 1(isnull(add_address1,'' '')+'' ''+
														isnull(add_address2,'' '')+'' ''+isnull(add_address3,'' '')) 
																from tbl_master_address,tbl_master_company,tbl_master_city
																	where cmp_internalid=add_cntid and cmp_internalid='''+@Companyid+'''
																		and add_city=city_id and add_cntID='''+@Companyid+''' 
																			AND add_entity=''Company'' AND add_addressType=''Office'')as cmpaddress,
						(select top 1 (isnull(city_name,'' '')+''-''+ isnull(add_pin,'' ''))

																						from tbl_master_address,tbl_master_company,tbl_master_city
																							where cmp_internalid=add_cntid and cmp_internalid='''+@Companyid+'''
																								and add_city=city_id and add_cntID='''+@Companyid+''' 
																									AND add_entity=''Company'' AND add_addressType=''Office'')as cmpaddress1,
						(SELECT TOP 1 RTRIM(EXCH_TMCODE) FROM TBL_MASTER_COMPANYEXCHANGE 
						 WHERE EXCH_COMPID='''+@Companyid+'''  '
						 IF @MASTERSEGMENT=3
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXM0000002'' AND EXCH_SEGMENTID=''CDX'''
						 END 
						 IF @MASTERSEGMENT=7
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXM0000001'' AND EXCH_SEGMENTID=''COMM'''
						 END 
						 IF @MASTERSEGMENT=8
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXM0000002'' AND EXCH_SEGMENTID=''CDX'''
						 END 
						 IF @MASTERSEGMENT=9
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXN0000004'' AND EXCH_SEGMENTID=''COMM'''
						 END 
						  IF @MASTERSEGMENT=10
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXD0000001'' AND EXCH_SEGMENTID=''COMM'''
						 END 
						 IF @MASTERSEGMENT=11
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXN0000005'' AND EXCH_SEGMENTID=''COMM'''
						 END 
						  IF @MASTERSEGMENT=12
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXI0000001'' AND EXCH_SEGMENTID=''COMM'''
						 END 
						  IF @MASTERSEGMENT=13
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXU0000001'' AND EXCH_SEGMENTID=''CDX'''
						 END 
						  IF @MASTERSEGMENT=17
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXA0000002'' AND EXCH_SEGMENTID=''COMM'''
						 END 
						  IF @MASTERSEGMENT=18
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXI0000002'' AND EXCH_SEGMENTID=''COMM'''
						 END 
						  IF @MASTERSEGMENT=24
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXU0000002'' AND EXCH_SEGMENTID=''COMM'''
						 END 
						 SELECT @SQL=@SQL+' ) AS MEMBERCODE,
						 (SELECT TOP 1 RTRIM(EXCH_SEBINO) FROM TBL_MASTER_COMPANYEXCHANGE 
						 WHERE EXCH_COMPID='''+@Companyid+'''  '
						 IF @MASTERSEGMENT=3
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXM0000002'' AND EXCH_SEGMENTID=''CDX'''
						 END 
						 IF @MASTERSEGMENT=7
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXM0000001'' AND EXCH_SEGMENTID=''COMM'''
						 END 
						 IF @MASTERSEGMENT=8
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXM0000002'' AND EXCH_SEGMENTID=''CDX'''
						 END 
						 IF @MASTERSEGMENT=9
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXN0000004'' AND EXCH_SEGMENTID=''COMM'''
						 END 
						  IF @MASTERSEGMENT=10
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXD0000001'' AND EXCH_SEGMENTID=''COMM'''
						 END 
						 IF @MASTERSEGMENT=11
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXN0000005'' AND EXCH_SEGMENTID=''COMM'''
						 END 
						  IF @MASTERSEGMENT=12
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXI0000001'' AND EXCH_SEGMENTID=''COMM'''
						 END 
						  IF @MASTERSEGMENT=13
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXU0000001'' AND EXCH_SEGMENTID=''CDX'''
						 END 
						  IF @MASTERSEGMENT=17
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXA0000002'' AND EXCH_SEGMENTID=''COMM'''
						 END 
						  IF @MASTERSEGMENT=18
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXI0000002'' AND EXCH_SEGMENTID=''COMM'''
						 END 
						  IF @MASTERSEGMENT=24
						 BEGIN
								SELECT @SQL=@SQL+' AND EXCH_EXCHID=''EXU0000002'' AND EXCH_SEGMENTID=''COMM'''
						 END 
						 SELECT @SQL=@SQL+' ) AS SEBINO'
			EXEC(@SQL)

----------------------------------------------------END
	drop table #TEMP
	drop table #TEMP1
	drop table #MARGINSTOCKS
	drop table #TEMPMARGINSTOCKS
	drop table #ABC
	drop table #t
	drop table #TmpExp
	drop table #TmpClExp
END

----
--declare @ClientsID varchar(max),@Branch varchar(max)
----------------------CLB0000132
--set @ClientsID='''CLK0000012'''
--set @Branch='1'
--exec [Report_ComDailyBills] '2011-03-12',@ClientsID,1,'29','COG0000001','2010-2011','Branch','E','7'
----------------------CLA0000281
-------------------CLB0000130
-------------------CLK0000012




--select ComExchangeTrades_ClearingMemberID,ComExchangeTrades_ClearingMemberID,* from Trans_ComExchangetrades
--where ComExchangeTrades_Segment=26









