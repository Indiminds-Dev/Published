

--exec [Update_MCXSXCDXTrades_RTS] 'C:\grd\MCXSX.csv',33,'COR0000002',416,'','2015-12-12'

ALTER PROCEDURE [dbo].[Update_MCXSXCDXTrades_RTS]

	@FilePath varchar(255),
	@SegmentId  int,
	@COMPANY_ID varchar(255),
	@ModifyUser int,
	@LckTradeDate DateTime,
	@ExpireDate DateTime,
	@LockMsg Varchar(250) Output

AS
BEGIN
	
	declare @ReadFrom as int
	declare @Q as varchar(250)
	declare @P int 
	
----------------------------------------------------------------------------------------------------------------------------------------	
-- Input File Format:- contract,expiration,account_spec1,account_spec2,counterparty_account_spec1,counterparty_account_spec2,date,Time,exchange,trader,contracts_long,value,price,currency,trade_number,order_number	
----------------------------------------------------------------------------------------------------------------------------------------	

		CREATE TABLE #RTSTrades(
			[RTSTrades_Contract] varchar(100) null,
			[RTSTrades_ExpiryDate] DateTime null,
			[RTSTrades_Account] varchar(20) null, ------ This will be considered as TerminalID for mapping purpose.
			[RTSTrades_ProCli] varchar(20) null,
			[RTSTrades_CounterParty1] varchar(20) null,-------------------------5
			[RTSTrades_Identifier] varchar(20) null,
			[RTSTrades_TradeDate] DateTime null,
			[RTSTrades_TradeTime] DateTime null,
			[RTSTrades_Exchange] varchar(20) null,
			[RTSTrades_TerminalID] varchar(20) null,-----------------------------10
			[RTSTrades_TradeQuantity] numeric(10,0) null,
			[RTSTrades_TradeValue] numeric(28,2) null,
			[RTSTrades_Price] numeric(20,4) null,
			[RTSTrades_Currency] varchar(10) null,
			[RTSTrades_TradeNumber] varchar(20) null,
			[RTSTrades_ExcOrdId] varchar(20) null)-----------------------------16
		
		set @ReadFrom=2
	
				
				set @Q='BULK INSERT #RTSTrades FROM '+ char(39) + @FilePath + char(39) + ' with (firstrow = ' + convert(varchar,@ReadFrom) + ' , FIELDTERMINATOR = ' + char(39) + ',' + char(39) + ' , ROWTERMINATOR = ' + char(39) + char(10)+ + char(39) +')'
				print @Q
				exec (@Q)

				Declare @TotalNoOfRecord int,
						@TotalNoOfRecordImport int,
						@TotalNoOfRecordNotImport int				
						
				alter table #RTSTrades
					add  	[RTSTrades_ID] [bigint] IDENTITY(1,1) NOT NULL,	
							[RTSTrades_CustomerID] varchar(10) NULL,
							[RTSTrades_BranchID] int NULL,
							[RTSTrades_Exists] char(1) null

		
							DECLARE @FY datetime
							DECLARE @SETT_FY VARCHAR(10)
							
									
	set @FY=(select Top (1) [RTSTrades_TradeDate] From #RTSTrades)
	Set @SETT_FY=(select FinYear_Code from Master_FinYear where @FY between FinYear_StartDate and FinYear_EndDate)
	
		Select @TotalNoOfRecord=Count(RTSTrades_ExcOrdId) from #RTSTrades

	
----		--------------------------------------Customer ID--------------------------------------------------------
		-- First preference to Mapped client as per the DealerID
		Update #RTSTrades Set [RTSTrades_CustomerID]=TradingTerminal_AllTradeID
							from Master_TradingTerminal where
							TradingTerminal_CompanyID=@COMPANY_ID 
							and TradingTerminal_ExchangeSegmentID=@SegmentId
							and ltrim(rtrim(TradingTerminal_TerminalID))=ltrim(rtrim(DBO.ReplaceSpecialChars(RTSTrades_Account,'')))
							and left(isnull(TradingTerminal_AllTradeID,''),2)='CL'
	
		Update #RTSTrades Set [RTSTrades_CustomerID]=TradingTerminal_CliTradeID
							from Master_TradingTerminal where
							TradingTerminal_CompanyID=@COMPANY_ID 
							and TradingTerminal_ExchangeSegmentID=@SegmentId
							and ltrim(rtrim(TradingTerminal_TerminalID))=ltrim(rtrim(DBO.ReplaceSpecialChars(RTSTrades_Account,''))) 
							and left(isnull(TradingTerminal_CliTradeID,''),2)='CL'
							and [RTSTrades_CustomerID] is NULL

		Update #RTSTrades Set [RTSTrades_CustomerID]=TradingTerminal_ProTradeID
							from Master_TradingTerminal where
							TradingTerminal_CompanyID=@COMPANY_ID 
							and TradingTerminal_ExchangeSegmentID=@SegmentId
							and ltrim(rtrim(TradingTerminal_TerminalID))=ltrim(rtrim(DBO.ReplaceSpecialChars(RTSTrades_Account,''))) 
							and left(isnull(TradingTerminal_ProTradeID,''),2)='CL'
							and [RTSTrades_CustomerID] is NULL
		
		--	Second Preference to TradeCode as per the DealerID, if DealerID was not mapped in TerminalID Setup
									
			Update #RTSTrades 
							Set [RTSTrades_CustomerID]=crg_cntID 
							from tbl_master_contactExchange
							where ltrim(rtrim(crg_tcode))=ltrim(rtrim(DBO.ReplaceSpecialChars(RTSTrades_Account,''))) 
							AND crg_exchange='MCXSX - CDX' 
							and crg_company= @COMPANY_ID 
							and [RTSTrades_CustomerID] is NULL
		
		--	Update BranchID
			Update #RTSTrades Set [RTSTrades_BranchID]=cnt_branchid from tbl_master_contact
							where [RTSTrades_CustomerID]=cnt_internalId

--		select * from #RTSTrades

------------------------------------------------------------------------------------------------------------------------
		Set @TotalNoOfRecordImport=(Select COUNT(distinct ComExchangeTrades_ID)
			from Trans_ComExchangeTrades,#RTSTrades
			where ComExchangeTrades_CompanyID=@COMPANY_ID
			and ComExchangeTrades_Segment=@SegmentId and ComExchangeTrades_TradeDate=@FY
			and ltrim(rtrim(ComExchangeTrades_OrderNumber))=ltrim(rtrim(DBO.ReplaceSpecialChars(RTSTrades_ExcOrdId,'')))
			AND LEFT(ComExchangeTrades_CustomerID,2)='CL'
			and RTSTrades_CustomerID is NOT NULL
			and ltrim(rtrim(ComExchangeTrades_CustomerID))<>ltrim(rtrim(RTSTrades_CustomerID))
			)
		If (cast(@FY as datetime)>=@LckTradeDate and cast(@FY as datetime)<=@ExpireDate)
		Begin

				-- Delete already processed data
				Delete from Trans_ComCustomerTrades where ComCustomerTrades_CompanyID=@COMPANY_ID
				and ComCustomerTrades_ExchangeSegment=@SegmentId and ComCustomerTrades_TradeDate=@FY
				and ComCustomerTrades_OriginalTransactionID is NULL
				and ComCustomerTrades_ID in (
				Select distinct ComExchangeTrades_CustTransactionID 
				from Trans_ComExchangeTrades,#RTSTrades
				where ComExchangeTrades_CompanyID=@COMPANY_ID
				and ComExchangeTrades_Segment=@SegmentId and ComExchangeTrades_TradeDate=@FY
				and ltrim(rtrim(ComExchangeTrades_OrderNumber))=ltrim(rtrim(DBO.ReplaceSpecialChars(RTSTrades_ExcOrdId,'')))
				AND LEFT(ComExchangeTrades_CustomerID,2)='CL'
				and RTSTrades_CustomerID is NOT NULL
				and ltrim(rtrim(ComExchangeTrades_CustomerID))<>ltrim(rtrim(RTSTrades_CustomerID)))
				-----
				Delete from Trans_ComCustomerTrades where ComCustomerTrades_CompanyID=@COMPANY_ID
				and ComCustomerTrades_ExchangeSegment=@SegmentId and ComCustomerTrades_TradeDate=@FY
				and ComCustomerTrades_OriginalTransactionID is not NULL
				and ComCustomerTrades_OriginalTransactionID in (
				Select distinct ComExchangeTrades_CustTransactionID 
				from Trans_ComExchangeTrades,#RTSTrades
				where ComExchangeTrades_CompanyID=@COMPANY_ID
				and ComExchangeTrades_Segment=@SegmentId and ComExchangeTrades_TradeDate=@FY
				and ltrim(rtrim(ComExchangeTrades_OrderNumber))=ltrim(rtrim(DBO.ReplaceSpecialChars(RTSTrades_ExcOrdId,'')))
				AND LEFT(ComExchangeTrades_CustomerID,2)='CL'
				and RTSTrades_CustomerID is NOT NULL
				and ltrim(rtrim(ComExchangeTrades_CustomerID))<>ltrim(rtrim(RTSTrades_CustomerID)))
				---
				Update Trans_ComExchangeTrades set ComExchangeTrades_CustTransactionID=NULL
				where ComExchangeTrades_ID in (
				Select distinct ComExchangeTrades_ID 
				from Trans_ComExchangeTrades,#RTSTrades
				where ComExchangeTrades_CompanyID=@COMPANY_ID
				and ComExchangeTrades_Segment=@SegmentId and ComExchangeTrades_TradeDate=@FY
				and ltrim(rtrim(ComExchangeTrades_OrderNumber))=ltrim(rtrim(DBO.ReplaceSpecialChars(RTSTrades_ExcOrdId,'')))
				AND LEFT(ComExchangeTrades_CustomerID,2)='CL'
				and RTSTrades_CustomerID is NOT NULL
				and ltrim(rtrim(ComExchangeTrades_CustomerID))<>ltrim(rtrim(RTSTrades_CustomerID)))
				-----
				----First Update the changed customerid to keep the originally imported customerID
				Update Trans_ComExchangeTrades 
						set ComExchangeTrades_ChangeCustomerID=ComExchangeTrades_CustomerID,
						ComExchangeTrades_OriginalCustomerUcc=ComExchangeTrades_CustomerUcc
					from #RTSTrades 
						where	ComExchangeTrades_CompanyID=@COMPANY_ID
								and ComExchangeTrades_Segment=@SegmentId 
								and ComExchangeTrades_TradeDate=@FY
								and ltrim(rtrim(ComExchangeTrades_OrderNumber))=ltrim(rtrim(DBO.ReplaceSpecialChars(RTSTrades_ExcOrdId,'')))
								and LEFT(ComExchangeTrades_CustomerID,2)='CL'
								and RTSTrades_CustomerID is NOT NULL
								and ltrim(rtrim(ComExchangeTrades_CustomerID))<>ltrim(rtrim(RTSTrades_CustomerID))
				-----
				--Now change the actual customerid with the RTS file
				Update Trans_ComExchangeTrades 
						set ComExchangeTrades_CustomerID=[RTSTrades_CustomerID],
							ComExchangeTrades_CustomerUcc=ltrim(rtrim(DBO.ReplaceSpecialChars(RTSTrades_Account,''))),
							ComExchangeTrades_BranchID=[RTSTrades_BranchID],
							ComExchangeTrades_LastUpdateUser=@ModifyUser,
							ComExchangeTrades_LastUpdateDate=GETDATE()
					from #RTSTrades 
						where	ComExchangeTrades_CompanyID=@COMPANY_ID
								and ComExchangeTrades_Segment=@SegmentId 
								and ComExchangeTrades_TradeDate=@FY
								and ltrim(rtrim(ComExchangeTrades_OrderNumber))=ltrim(rtrim(DBO.ReplaceSpecialChars(RTSTrades_ExcOrdId,'')))
								and LEFT(ComExchangeTrades_CustomerID,2)='CL'
								and RTSTrades_CustomerID is NOT NULL
								and ltrim(rtrim(ComExchangeTrades_CustomerID))<>ltrim(rtrim(RTSTrades_CustomerID))

			----- To Show summary at the end of the process ------
			Set @TotalNoOfRecordNotImport=@TotalNoOfRecord-@TotalNoOfRecordImport
			Select @TotalNoOfRecord as TotalRecord,@TotalNoOfRecordImport as UpdateRecord,@TotalNoOfRecordNotImport as NotUpdatedRecord,
			'You Just Updated Trades For : '+Convert(Varchar(11),@FY,106)
	---------------------------------------------------------------------------------------------


			Set @TotalNoOfRecord=null
			Set @TotalNoOfRecordImport=null
			Set @TotalNoOfRecordNotImport=null
			Drop table #RTSTrades
			Set @LockMsg= '' 
	End
		else
		Begin
			Set @LockMsg= 'The Data is Locked' 
		End
END




