

ALTER  Procedure [dbo].[ContractnoteCumBill_Combined]
@company varchar(20),
@mode varchar(1),
@clienttypeparam varchar(10),
@clientbranchgroupid varchar(max),
@onlyforgrouptext varchar(50),
@Tradedate varchar(20),
@Finyear varchar(10),
@ReportType varchar(10),
@OnlyContractnote varchar(10),
@Ecncall varchar(10),
@UserSegidfrompage varchar(10)
--@BrkgFlag varchar(10),
--@SettlementNumber varchar(20),
--@SettlementType varchar(5),
--@Branch  varchar(max),                  
--@Customer varchar(Max),
--@Group varchar(max),
--@Groupbytext varchar(100),
--@Reporttype varchar(10),
--@Groupbyvalue varchar(50),
--@sendtypeparameter varchar(10),
--@Employeename varchar(250),
--@netammountchk varchar(10),
--@pdforhtml varchar(10)='pdf',
--@outputhtmltype varchar(10)=null

--,
--@FromNo varchar(max),
--@ToNo varchar(max)
as
begin
	set nocount on
	--exec ContractnoteCumBill_Combined 'COR0000002','A','Client','CLJ0000135,CLR0000636','','2013-03-14','2012-2013','PDF'

--exec ContractnoteCumBill_Combined 'COR0000002','S','Client','CLJ0000009','','2012-06-26','2012-2013',''
--exec ContractnoteCumBill_Combined 'COR0000002','S','Client','CLA0000132,CLA0000168','','2013-03-14','2012-2013','dos','false'

	Declare ---variable Declaretion
@dynamicsql varchar(max),@clientloopcounterstatic bigint,@clientloopcounterdynamic bigint,
@exchangeloopcounterstatic int,@exchangeloopcounterdynamic int,@Clientidwithinloop varchar(15),
@usersegid varchar(5),@mastersegid varchar(5),@segmentname varchar(10),@exchangename varchar(10),@contractno varchar(10),
@cntrstaticloop int,@cntrdynamicloop int,@settno varchar(500),@setttype varchar(2),@Tcode varchar(10),
@parametername varchar(max),@payinout varchar(500),@payinoutbse varchar(500),@payinoutmcxsx varchar(500)
if OBJECT_ID('tempdb..#paramvalue') is not null
drop table #paramvalue
create table #paramvalue(value varchar(max))
if OBJECT_ID('tempdb..#clientfetch') is not null
drop table #clientfetch
Create Table #clientfetch(Clientautoid int identity ,Clientinternalid varchar(15))---Table creation
if OBJECT_ID('tempdb..#exchangefetch') is not null
drop table #exchangefetch

Create Table #exchangefetch(exchangeautoid int identity ,masterexchangeid int,usersegid int,
							Exchangename varchar(50),Segmentname varchar(50))
if OBJECT_ID('tempdb..#contractnotedetail') is not null
drop table #contractnotedetail
Create Table #contractnotedetail(cntrid int identity ,cntrno varchar(20),settno varchar(15),setttype varchar(2))


if OBJECT_ID('tempdb..#parameterforcharges') is not null
drop table #parameterforcharges
Create Table #parameterforcharges(autoidcharges int identity ,parametervalue varchar(max))



	insert into #parameterforcharges
	select 'PAY IN/ PAY OUT OBLIGATION' union all select 'Securities  Transaction Tax'union all 
	select 'Service Tax On Brokerage'union all select 'Transaction Charges'union all 
	select 'Service Tax On Transaction Charges'union all select 'Clearing Charges' union all 
	select'Service Tax On Clearing Charges' union all select'Sebi Fee' union all 
	select'Stamp Duty' union all select'Round Off'


if OBJECT_ID('tempdb..#Chargesdetail') is not null
drop table #Chargesdetail
Create Table #Chargesdetail(autoidcharges int identity ,Clientid varchar(15),Chargesfield varchar(max),NSECM numeric(28,2)DEFAULT 0.00,
NSEFO numeric(28,2)DEFAULT 0.00,NSECDX numeric(28,2)DEFAULT 0.00,BSECM numeric(28,2)DEFAULT 0.00,BSEFO numeric(28,2)DEFAULT 0.00,BSECDX numeric(28,2)DEFAULT 0.00,MCXSXCM numeric(28,2)DEFAULT 0.00,
MCXSXFO numeric(28,2)DEFAULT 0.00,MCXSXCDX numeric(28,2)DEFAULT 0.00,USECDX numeric(28,2)DEFAULT 0.00,NETTOTAL numeric(28,2)DEFAULT 0.00)

if OBJECT_ID('tempdb..#distinctsettclientecn') is not null
drop table #distinctsettclientecn
Create Table #distinctsettclientecn(autoid int identity ,Clientnameucc varchar(500),clientid varchar(20),
						Tradedate varchar(15),Company varchar(15),Finyear varchar(10),
						Contractdeliverymode varchar(10),Email varchar(250),EmailType varchar(50))

							
if OBJECT_ID('tempdb..#TradeDetailInfo') is not null
drop table #TradeDetailInfo				

Create Table #TradeDetailInfo(id int identity primary key,Clientid varchar(20),contractnoteno varchar(20),orderno varchar(50),ordertime datetime,
							Tradeno varchar(50),Tradetime datetime,Scripname varchar(500),BuySell varchar(50),
							Quantity numeric(28,0),Grossrate numeric(28,4),Brokerage numeric(28,4),
							Netrate numeric(28,4),Closingrate numeric(28,4),Nettotal numeric(28,4),Remarks varchar(500),
							---additionalfields
							customertradesid bigint,origialtransactionid bigint,Segment varchar(20),Exchange varchar(20),
							vieworder int,ProductserirsId int,Companyname varchar(500),CompanyAddress varchar(1000),
							Companytelphone varchar(50),Companyfax varchar(50),CompanyEmail varchar(500),Companywebsite varchar(500),
							CompanyPan varchar(50),Companyservicetax varchar(50),CompanyCin varchar(50),Companycity varchar(100),
							Compliancename varchar(500),Compliancemob varchar(50),Complianceemail varchar(100),Complianceaddrs varchar(1000),
							Greviencebrokermail varchar(500),GrevienceExchangemail varchar(500),
							ClientName varchar(500),Clientucc varchar(20),Clienttcode varchar(20),Clientaddress varchar(1000),ClientPan varchar(15),
							ClientMob varchar(50),ClientEmail varchar(250),BranchName varchar(500),BranchAddress varchar(1000),BranchPhone varchar(50),Settno varchar(500),
							PayinPayoutdt varchar(500),PayinPayoutdtbse varchar(500),PayinPayoutdtmcxsx varchar(500),SebiRegnno varchar(500),CMID varchar(500),CMBPID varchar(500),settnonse varchar(500),settnobse varchar(500),settnomcxsx varchar(500),
							settnouse varchar(500),sebinouse varchar(500),usecdxoblgation numeric(28,2),sebinonse varchar(500),sebinobse varchar(500),sebinomcxsx varchar(500),usersegid varchar(10),sebiregno varchar(max),
							Nsecmoblgation numeric(28,2),Nsefooblgation numeric(28,2),Nsecdxoblgation numeric(28,2),Bsecmoblgation numeric(28,2),Bsefooblgation numeric(28,2),Bsecdxoblgation numeric(28,2),
							Mcxsxcmoblgation numeric(28,2),Mcxsxfooblgation numeric(28,2),Mcxsxcdxoblgation numeric(28,2),Totalobligation numeric(28,2),
							clientemailtype varchar(50),Clientdeliverytype varchar(10),
							Nseobligation varchar(500),Bseobigation varchar(500),
							MCXSXobligation varchar(500),Otherobligation varchar(500),NseStt varchar(500),BseStt varchar(500),
							Mcxsxstt varchar(100),otherstt varchar(500),Nsestaxonbrkg varchar(500),Bsestaxonbrkg varchar(500),
							Mcxsxstaxonbrkg varchar(500),Otherstaxonbrkg varchar(500),Nsetranchrg varchar(500),Bsetranchrg varchar(500)
							,Mcxsxtranchrg varchar(500),othertranchrg varchar(500),Nsestaxontranchrg varchar(500),Bsestaxontranchrg varchar(500)
							,Mcxsxstaxontranchrg varchar(500),Otherstaxontranchrg varchar(500),Nseclearingchrg varchar(500),Bseclearingchrg varchar(500)
							,Mcxsxclearingchrg varchar(500),Otherclearingchrg varchar(500),Nsestaxonclearingchrg varchar(500),Bsestaxonclearingchrg varchar(500)
							,Mcxsxstaxonclearingchrg varchar(500),Otherstaxonclearingchrg varchar(500),Nsesebifee varchar(500),Bsesebifee varchar(500)
							,Mcxsxsebifee varchar(500),Othersebifee varchar(500),Nsestampdutyfee varchar(500),Bsestampdutyfee varchar(500)
							,Mcxsxstampdutyfee varchar(500),Otherstampdutyfee varchar(500)
							,NseRoundofffee varchar(500),BseRoundofffee varchar(500)
							,McxsxRoundofffee varchar(500),OtherRoundofffee varchar(500)
							,Nsenettotal varchar(500),Bsenettotal varchar(500)
							,Mcxsxnettotal varchar(500),Othernettotal varchar(500),
							NseCmsettno varchar(50),NseFosettno varchar(50),NseCdxsettno varchar(50),BseCmsettno varchar(50),BseFosettno varchar(50)
							,BseCdxsettno varchar(50),McxsxCmsettno varchar(50),McxsxFosettno varchar(50),McxsxCdxsettno varchar(50),Othersettno varchar(50),
							Totaloblgallseg varchar(50),Totalsttallseg varchar(50),Totalstaxonbrkgallseg varchar(50),Totaltrancgrgallseg varchar(50),
							Totalstaxontranchargallseg varchar(50),Totalclearingchrgallseg varchar(50),Totalstaxonclearingchrgallseg varchar(50),
							Totalsebifeeallseg varchar(50),Totalstampdutyallseg varchar(50),Totalroundoffallseg varchar(50),Totalnettotalallseg varchar(50),
							NseCmtcode varchar(50),NseFotcode varchar(50),NseCdxtcode varchar(50),BseCmtcode varchar(50),BseFotcode varchar(50)
							,BseCdxtcode varchar(50),McxsxCmtcode varchar(50),McxsxFotcode varchar(50),McxsxCdxtcode varchar(50),Othertcode varchar(50),
							
							NseCmsebino varchar(50),NseFosebino varchar(50),NseCdxsebino varchar(50),BseCmsebino varchar(50),BseFosebino varchar(50)
							,BseCdxsebino varchar(50),McxsxCmsebino varchar(50),McxsxFosebino varchar(50),McxsxCdxsebino varchar(50),Othersebino varchar(50),
							NSECMsettdate varchar(100),NSEFOsettdate varchar(20),NSECDXsettdate varchar(20),BSECMsettdate varchar(20),BSEFOsettdate varchar(20),
							BSECDXsettdate varchar(20),MCXSXCMsettdate varchar(20),MCXSXFOsettdate varchar(20),MCXSXCDXsettdate varchar(20),Othersettdate varchar(20),
							NSEdate varchar(500),BSEdate varchar(500),MCXSXdate varchar(500)
							)



			insert into #exchangefetch
			--select 3,26,'NSE','CDX'
			Select 
			(Select ExchangeSegment_ID From Master_ExchangeSegments Where ExchangeSegment_ExchangeID=Exchange_ID and ExchangeSegment_Code=Exch_SegmentID) as [Session_ExchangeSegmentID],
			Exch_InternalID as [Session_UserSegID],Exh_ShortName,Exch_SegmentID from
			(Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
			Where Exh_CntId=Exch_ExchID and exch_compId=@company) as T1,Master_Exchange
			Where Exchange_ShortName=Exh_ShortName and exch_segmentId is not null Order by Exchange_ID
			Declare @localstatic int,@localdynamic int,@colname varchar(100),@localsql varchar(max)
			Select @localdynamic=MAX(exchangeautoid) from #exchangefetch
			
			--select * from 	#exchangefetch		
			if(@Ecncall='Normal')
				Begin
					Select @dynamicsql=
					'select distinct crg_cntID from(
					Select exh_shortname+'' - ''+exch_segmentId as textfield
					 from (Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID 
					from Tbl_Master_Exchange,Tbl_Master_CompanyExchange Where Exh_CntId=Exch_ExchID 
					and exch_compId='''+@company+''') as T1,Master_Exchange Where Exchange_ShortName=Exh_ShortName 
					and exch_segmentId is not null) as exchange,tbl_master_contactexchange,tbl_master_contact,Config_BrokerageMain
					where tbl_master_contactexchange.crg_exchange=exchange.textfield
					and crg_cntID=cnt_internalId
					and isnull(BrokerageMain_ContractPattern,''1'')<>''5''
					and BrokerageMain_CustomerID=crg_cntID
					and BrokerageMain_CustomerID=cnt_internalId
					'
						if(@clienttypeparam='Client')
							Begin
								If(@mode='D')
									Begin
										Select @dynamicsql=@dynamicsql+' and crg_cntID not in ('''+replace(@clientbranchgroupid,',',''',''')+''')
										and cnt_internalId not in ('''+replace(@clientbranchgroupid,',',''',''')+''')'
									End
								If(@mode='S')
									Begin
										Select @dynamicsql=@dynamicsql+' and crg_cntID in ('''+replace(@clientbranchgroupid,',',''',''')+''')
										and cnt_internalId in ('''+replace(@clientbranchgroupid,',',''',''')+''')'
									End
							End
						if(@clienttypeparam='Branch')
							Begin
								If(@mode='D')
									Begin
										Select @dynamicsql=@dynamicsql+' and cnt_branchid not in ('+@clientbranchgroupid+')'
									End
								If(@mode='S')
									Begin
										Select @dynamicsql=@dynamicsql+' and cnt_branchid in ('+@clientbranchgroupid+')'
									End
							End
						if(@clienttypeparam='Group')
							Begin
								If(@mode='D')
									Begin
										Select @dynamicsql=@dynamicsql+' and cnt_internalid in (select grp_contactid from tbl_trans_group where  grp_groupmaster 
																		 not in(select gpm_id from tbl_master_groupmaster where gpm_id IN 
																		('+@clientbranchgroupid+') and gpm_type='''+@onlyforgrouptext+'''))'
									End
								If(@mode='S')
									Begin
										Select @dynamicsql=@dynamicsql+' and cnt_internalid in (select grp_contactid from tbl_trans_group where grp_grouptype='''+@onlyforgrouptext+''' 
																		and grp_groupmaster in ('+@clientbranchgroupid+'))'
									End
							End
					Select @dynamicsql=@dynamicsql+' and left(crg_cntID,2)=''CL'' order by crg_cntID'
				insert into #clientfetch		
				exec (@dynamicsql)
			End
				if(@Ecncall='Remaining')
					Begin
						if OBJECT_ID('tempdb..#clientfetchecn') is not null
						drop table #clientfetchecn
						Create Table #clientfetchecn(Clientautoid int identity ,Clientinternalid varchar(15))
						insert into #clientfetchecn
						select COL from fnSplitReturnTable(@clientbranchgroupid,',')
						insert into #clientfetch
						select Clientinternalid from #clientfetchecn
						except
						select ContractnotesCombined_CustomerID from Trans_ContractnotesCombined 
						where ContractnotesCombined_Company=@company
						and ContractnotesCombined_Finyear=@Finyear
						and ContractnotesCombined_Tradedate=cast(@Tradedate as datetime)
					End
				--print @dynamicsql
				select @clientloopcounterdynamic=MAX(Clientautoid) from #clientfetch
				select @clientloopcounterstatic=1
				While(@clientloopcounterstatic<=@clientloopcounterdynamic)
					Begin
						
						Select @Clientidwithinloop=Clientinternalid from #clientfetch where Clientautoid=@clientloopcounterstatic
						
						Select @exchangeloopcounterdynamic=MAX(exchangeautoid) from #exchangefetch
						select @exchangeloopcounterstatic=1
						While(@exchangeloopcounterstatic<=@exchangeloopcounterdynamic)
							Begin
								Select @usersegid=usersegid from #exchangefetch where exchangeautoid=@exchangeloopcounterstatic
								Select @mastersegid=masterexchangeid from #exchangefetch where exchangeautoid=@exchangeloopcounterstatic
								Select @segmentname=Segmentname from #exchangefetch where exchangeautoid=@exchangeloopcounterstatic
								Select @exchangename=Exchangename from #exchangefetch where exchangeautoid=@exchangeloopcounterstatic
								if(@segmentname='CM')
									Begin
									
										If exists(select '1' from Trans_ContractNotes where ContractNotes_CompanyID=@company
												 and ContractNotes_FinYear=@Finyear and ContractNotes_SegmentID=@usersegid
												 and ContractNotes_TradeDate=@Tradedate and ContractNotes_Status is null
												 and ContractNotes_CustomerID=@Clientidwithinloop)
											Begin
												
												truncate table #contractnotedetail
												
												insert into #contractnotedetail
												Select ContractNotes_Number,ContractNotes_SettlementNumber,ContractNotes_SettlementType
												 from Trans_ContractNotes where ContractNotes_CompanyID=@company
												 and ContractNotes_FinYear=@Finyear and ContractNotes_SegmentID=@usersegid
												 and ContractNotes_TradeDate=@Tradedate and ContractNotes_Status is null
												 and ContractNotes_CustomerID=@Clientidwithinloop
												
													--select * from #contractnotedetail
												 select @cntrdynamicloop=MAX(cntrid) from #contractnotedetail
												 
												 select @cntrstaticloop=1
												 while(@cntrstaticloop<=@cntrdynamicloop)
													Begin
														select @settno=settno from #contractnotedetail where cntrid=@cntrstaticloop
														select @setttype=setttype from #contractnotedetail where cntrid=@cntrstaticloop
														select @contractno=cntrno from #contractnotedetail where cntrid=@cntrstaticloop
														
										
														insert into #TradeDetailInfo(Scripname,Segment,Exchange,Clientid,vieworder,ProductserirsId,Settno,usersegid,contractnoteno)
														select @exchangename+' '+'Capital Market '+' [ '+ @settno+' '+@setttype +' ] / ['+'Contract Note No. :'+ @contractno+' ]'
														,@segmentname,@exchangename,@Clientidwithinloop,1,1,@settno+' '+@setttype,@usersegid,@contractno
														--from #TradeDetailInfo where Segment=@segmentname and Exchange=@exchangename
														--and Clientid=@Clientidwithinloop
														--and Scripname like '%'+@exchangename+' '+'Capital Market '+' [ '+'%'
														
														Select @dynamicsql='
														select CustomerTrades_CustomerID,
														case when CustomerTrades_UnitPriceQuantity>0 then ''Sell'' else ''Buy'' end,
														CustomerTrades_UnitPriceQuantity,CustomerTrades_UnitPrice,
														CustomerTrades_UnitBrokerage,CustomerTrades_NetRatePerUnit,
														CustomerTrades_NetValue,CustomerTrades_ID,CustomerTrades_OriginalTransactionID,
														2,CustomerTrades_ProductSeriesID,'''+@segmentname+''','''+@exchangename+''','''+@settno+'''+'' ''+'''+@setttype+''','''+@usersegid+'''
														,isnull(CustomerTrades_Remarks,''''),'''+@contractno+'''
														from Trans_CustomerTrades----,Trans_DailyStatistics,Trans_ContractNotes
														where CustomerTrades_ExchangeSegment='''+@usersegid+'''
														and CustomerTrades_TradeDate='''+@Tradedate+'''
														and CustomerTrades_CustomerID='''+@Clientidwithinloop+'''
														and CustomerTrades_FinYear='''+@Finyear+'''
														and CustomerTrades_ContractNoteNumber='''+@contractno+'''
														and CustomerTrades_SettlementNumber='''+@settno+'''
														and CustomerTrades_SettlementType='''+@setttype+'''
														--and CustomerTrades_TransactionType=''Orgnl''
														--and CustomerTrades_ContractNoteNumber is not null
														--and DailyStat_ProductSeriesID=CustomerTrades_ProductSeriesID
														--and DailyStat_DateTime='''+@Tradedate+'''
														--and DailyStat_ExchangeSegmentID=@mastersegid
														'
														insert into #TradeDetailInfo(Clientid,BuySell,Quantity,Grossrate,Brokerage,Netrate,Nettotal,
																					 customertradesid,origialtransactionid,vieworder,ProductserirsId,
																					 Segment,Exchange,Settno,usersegid,Remarks,contractnoteno)
		
														exec (@dynamicsql)
														
														-------------Exchange Trades [Original Transactionid is Null]
														UPDATE #TradeDetailInfo SET  orderno=ExchangeTrades_OrderNumber
																					   ,ordertime=ExchangeTrades_OrderEntryTime
																					   ,Tradeno=ExchangeTrades_TradeNumber,
																					   Tradetime=ExchangeTrades_TradeEntryTime
																					   ,ScripName=CASE  WHEN isnull( ExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ExchangeTrades_SecurityExpiry IS NULL
																										THEN isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))
																										WHEN isnull(ExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ExchangeTrades_SecurityExpiry IS NOT NULL
																										THEN isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))
																										ELSE isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))+
																											 ' '+cast(cast(round(ExchangeTrades_SecurityStrikePrice,2) as numeric(28,2)) as varchar) 
																										End 
																					  
																						--exchangetrades_productseriesid = exchangetrades_productseriesid
														From Trans_ExchangeTrades Where 
														ExchangeTrades_CUSTTRANSACTIONID=customertradesid and origialtransactionid is null
														and ExchangeTrades_COMPANYID=@Company and ExchangeTrades_Segment=@usersegid
														and ExchangeTrades_SettlementNumber=@settno and ExchangeTrades_SettlementType=@setttype
														and ExchangeTrades_TradeDate=@Tradedate
														
														-------------Exchange Trades [Original Transactionid is Not Null]
														UPDATE #TradeDetailInfo SET  orderno=ExchangeTrades_OrderNumber
																					   ,ordertime=ExchangeTrades_OrderEntryTime
																					   ,Tradeno=ExchangeTrades_TradeNumber,
																					   Tradetime=ExchangeTrades_TradeEntryTime
																					   ,ScripName=CASE  WHEN isnull( ExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ExchangeTrades_SecurityExpiry IS NULL
																										THEN isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))
																										WHEN isnull(ExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ExchangeTrades_SecurityExpiry IS NOT NULL
																										THEN isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))
																										ELSE isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))+
																											 ' '+cast(cast(round(ExchangeTrades_SecurityStrikePrice,2) as numeric(28,2)) as varchar) 
																										End 
																					  
																						--exchangetrades_productseriesid = exchangetrades_productseriesid
														From Trans_ExchangeTrades Where 
														ExchangeTrades_CUSTTRANSACTIONID=origialtransactionid and origialtransactionid is not null
														and ExchangeTrades_COMPANYID=@Company and ExchangeTrades_Segment=@usersegid
														and ExchangeTrades_SettlementNumber=@settno and ExchangeTrades_SettlementType=@setttype
														and ExchangeTrades_TradeDate=@Tradedate
														insert into #TradeDetailInfo(Scripname,Nettotal,Clientid,vieworder,ProductserirsId,Segment,Exchange,Settno,usersegid,contractnoteno)
														select 'Net Total (Before Levies) for '+@exchangename+' '+'Capital Market '+' [ '+ @settno+' '+@setttype +' ] / ['+'Contract Note No. :'+ @contractno+' ]',
														sum(CustomerTrades_NetValue),@Clientidwithinloop,3,MAX(CustomerTrades_ProductSeriesID)+1,@segmentname,
														@exchangename,@settno+' '+@setttype,@usersegid,@contractno
														from Trans_CustomerTrades 
														where CustomerTrades_ExchangeSegment=@usersegid
														and CustomerTrades_TradeDate=@Tradedate
														and CustomerTrades_CustomerID=@Clientidwithinloop
														and CustomerTrades_FinYear=@Finyear
														and CustomerTrades_SettlementNumber=@settno
														and CustomerTrades_SettlementType=@setttype
														and CustomerTrades_ContractNoteNumber=@contractno
														--and CustomerTrades_TransactionType='orgnl'
														group by CustomerTrades_CustomerID,CustomerTrades_ContractNoteNumber 
														
														select @payinout=coalesce(@payinout+' , ', '') + convert(varchar,Settlements_FundsPayout,106) from 
													(Select Distinct convert(varchar,Settlements_FundsPayout,106) as Settlements_FundsPayout from Master_Settlements 
														where
														Settlements_ExchangeSegmentID=(Select (Select ExchangeSegment_ID From Master_ExchangeSegments 
														Where ExchangeSegment_ExchangeID=Exchange_ID and ExchangeSegment_Code=Exch_SegmentID)
														as [Session_ExchangeSegmentID]
														 from
														 (Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
														Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
														Where Exchange_ShortName=Exh_ShortName
														and Exch_CompID=@company
														and exh_shortName='NSE'
														and exch_segmentId='CM')
														and Settlements_StartDateTime=cast(@Tradedate as datetime)
														and Settlements_TypeSuffix=@setttype
														and Settlements_Number=@settno
														and Settlements_FinYear=@Finyear
														)rr
														--select substring(@payinout,1,len(@payinout)),@Clientidwithinloop
							update #TradeDetailInfo set PayinPayoutdt=substring(@payinout,1,len(@payinout)) 
									where Clientid=@Clientidwithinloop --and LTRIM(rtrim(left(settno,7)))=@settno
									--and Exchange='NSE' and Segment='CM' --and contractnoteno=@contractno
									
													select @payinoutbse=coalesce(@payinoutbse+' , ', '') + convert(varchar,Settlements_FundsPayout,106) from 
													(Select Distinct convert(varchar,Settlements_FundsPayout,106) as Settlements_FundsPayout from Master_Settlements 
														where
														Settlements_ExchangeSegmentID=(Select (Select ExchangeSegment_ID From Master_ExchangeSegments 
														Where ExchangeSegment_ExchangeID=Exchange_ID and ExchangeSegment_Code=Exch_SegmentID)
														as [Session_ExchangeSegmentID]
														 from
														 (Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
														Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
														Where Exchange_ShortName=Exh_ShortName
														and Exch_CompID=@company
														and exh_shortName='BSE'
														and exch_segmentId='CM')
														and Settlements_StartDateTime=cast(@Tradedate as datetime)
														and Settlements_TypeSuffix=@setttype
														and Settlements_Number=@settno
														and Settlements_FinYear=@Finyear
														)rr
														
							update #TradeDetailInfo set PayinPayoutdtbse=substring(@payinoutbse,1,len(@payinoutbse)) 
									where Clientid=@Clientidwithinloop --and LTRIM(rtrim(left(settno,7)))=@settno
									--and Exchange='BSE' and Segment='CM' --	
									
									select @payinoutmcxsx=coalesce(@payinoutmcxsx+' , ', '') + convert(varchar,Settlements_FundsPayout,106) from 
													(Select Distinct convert(varchar,Settlements_FundsPayout,106) as Settlements_FundsPayout from Master_Settlements 
														where
														Settlements_ExchangeSegmentID=(Select (Select ExchangeSegment_ID From Master_ExchangeSegments 
														Where ExchangeSegment_ExchangeID=Exchange_ID and ExchangeSegment_Code=Exch_SegmentID)
														as [Session_ExchangeSegmentID]
														 from
														 (Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
														Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
														Where Exchange_ShortName=Exh_ShortName
														and Exch_CompID=@company
														and exh_shortName='MCXSX'
														and exch_segmentId='CM')
														and Settlements_StartDateTime=cast(@Tradedate as datetime)
														and Settlements_TypeSuffix=@setttype
														and Settlements_Number=@settno
														and Settlements_FinYear=@Finyear
														)rr
														
							update #TradeDetailInfo set PayinPayoutdtmcxsx=substring(@payinoutmcxsx,1,len(@payinoutmcxsx)) 
									where Clientid=@Clientidwithinloop --and LTRIM(rtrim(left(settno,7)))=@settno
									--and Exchange='MCXSX' and Segment='CM' 			
														
														--select distinct contractnoteno from #TradeDetailInfo where  Clientid=@Clientidwithinloop
														
														
														select @cntrstaticloop=@cntrstaticloop+1
														if (select count(cntrno) from #contractnotedetail where settno=@settno and setttype=@setttype)>1
															begin
																select @payinout=null
																select @payinoutbse=null
																select @payinoutmcxsx=null
															end
													End---contract loop end
												 --select @payinout=null
											End--Exists condition for contractnote
									End--For only CM segment
									
								if(@segmentname='FO')
									Begin
										If exists(select '1' from Trans_CustomerTrades where CustomerTrades_CompanyID=@company
												 and CustomerTrades_FinYear=@Finyear and CustomerTrades_exchangeSegment=@usersegid
												 and CustomerTrades_TradeDate=@Tradedate and CustomerTrades_ContractNoteNumber is not null
												 and CustomerTrades_CustomerID=@Clientidwithinloop)
												Begin
												truncate table #contractnotedetail
												insert into #contractnotedetail
												Select distinct CustomerTrades_ContractNoteNumber,CustomerTrades_SettlementNumber,CustomerTrades_SettlementType
												 from Trans_CustomerTrades where CustomerTrades_CompanyID=@company
												 and CustomerTrades_FinYear=@Finyear and CustomerTrades_ExchangeSegment=@usersegid
												 and CustomerTrades_TradeDate=@Tradedate --and ContractNotes_Status is null
												 and CustomerTrades_CustomerID=@Clientidwithinloop
												 select @cntrdynamicloop=MAX(cntrid) from #contractnotedetail
												 select @cntrstaticloop=1
												 while(@cntrstaticloop<=@cntrdynamicloop)
													Begin
														select @settno=settno from #contractnotedetail where cntrid=@cntrstaticloop
														select @setttype=setttype from #contractnotedetail where cntrid=@cntrstaticloop
														select @contractno=cntrno from #contractnotedetail where cntrid=@cntrstaticloop
														
										
														insert into #TradeDetailInfo(Scripname,Clientid,Segment,Exchange,
														vieworder,ProductserirsId,settno,usersegid,contractnoteno)
														select @exchangename+' '+'Future & Option  / ['+'Contract Note No. :'+ @contractno+' ]',@Clientidwithinloop,
														@segmentname,@exchangename,1,1,@settno+' '+@setttype,@usersegid,@contractno
														if exists(select '1' from Trans_FOPosition where FOPosition_CompanyID=@company
														and FOPosition_Date=@Tradedate and FOPosition_SegmentID=@usersegid
														and isnull(FOPosition_BFPriceUnits,0)<>0 and FOPosition_CustomerExchangeID=@Clientidwithinloop
														and FOPosition_SettlementNumber=@settno and FOPosition_SettlementType=@setttype)
															Begin
																insert into #TradeDetailInfo(Clientid,orderno,Scripname,BuySell,Quantity,Grossrate,Netrate,Closingrate,
																Nettotal,Segment,Exchange,vieworder,ProductserirsId,usersegid,settno,contractnoteno)
																select @Clientidwithinloop,'Brought Forward',
																case when Equity_FOIdentifier like 'FUT%' then
																ltrim(rtrim(Equity_TickerSymbol)) +' '+ltrim(rtrim(CONVERT(varchar(9),Equity_EffectUntil,6)))+' '+ltrim(rtrim(Equity_Series))
																else 
																ltrim(rtrim(Equity_TickerSymbol)) +' '+ltrim(rtrim(CONVERT(varchar(9),Equity_EffectUntil,6)))+' '+ltrim(rtrim(Equity_Series))
																+' '+cast(ISNULL(Equity_StrikePrice,0) as varchar)
																end as Srcipname,
																case when FOPosition_BFPriceUnits>0 then 'Sell' else 'Buy' end as buysell,
																abs(ISNULL(cast(FOPosition_BFPriceUnits as numeric(18,0)),0)) as quantity,
																abs(ISNULL(cast(FOPosition_BFValue/FOPosition_BFPriceUnits as numeric(18,2)),0)) as grossrate,
																abs(ISNULL(cast(FOPosition_BFValue/FOPosition_BFPriceUnits as numeric(18,2)),0)) as netrate,
																FOPosition_SettlementPrice,
																case when FOPosition_BFPriceUnits>0 then 
																(isnull(FOPosition_SettlementPrice,0)-(FOPosition_BFValue)/cast(FOPosition_BFPriceUnits as numeric(18,2)))
																*(-1*ISNULL(cast(FOPosition_BFPriceUnits as numeric(18,0)),0))
																else
																-1*(isnull(FOPosition_SettlementPrice,0)-ISNULL(cast(FOPosition_BFValue/FOPosition_BFPriceUnits as numeric(18,2)),0))
																*(ISNULL(cast(FOPosition_BFPriceUnits as numeric(18,0)),0))
																end as netprice,@segmentname,@exchangename,2,FOPosition_ProductSeriesID,@usersegid,@settno+' '+@setttype
																,@contractno
																from Trans_FOPosition,Master_Equity
																where FOPosition_SegmentID=@usersegid
																and FOPosition_Date=@Tradedate
																and FOPosition_CustomerExchangeID=@Clientidwithinloop
																and isnull(FOPosition_BFPriceUnits,0)<>0
																and Equity_ExchSegmentID=@mastersegid
																and Equity_SeriesID=FOPosition_ProductSeriesID
																and Equity_FOIdentifier like 'FUT%'
																--order by FOPosition_CustomerExchangeID,Equity_TickerSymbol,Equity_EffectUntil
															End
																Select @dynamicsql='
																select CustomerTrades_CustomerID,
																case when CustomerTrades_UnitPriceQuantity>0 then ''Sell'' else ''Buy'' end,
																CustomerTrades_UnitPriceQuantity,CustomerTrades_UnitPrice,
																CustomerTrades_UnitBrokerage,CustomerTrades_NetRatePerUnit,
																case when isnull(CustomerTrades_ProductSeries,''FF'')=''FF''
																then -1*(DailyStat_Close-CustomerTrades_NetRatePerUnit)*CustomerTrades_UnitPriceQuantity
																else
																CustomerTrades_NetValue end,CustomerTrades_ID,CustomerTrades_OriginalTransactionID,
																case when isnull(CustomerTrades_ProductSeries,''FF'')=''FF''
																then DailyStat_Close
																else null end,
																'''+@segmentname+''','''+@exchangename+''',2,CustomerTrades_ProductSeriesID,'''+@settno+'''+'' ''+'''+@setttype+''','''+@usersegid+'''
																,isnull(CustomerTrades_Remarks,''''),CustomerTrades_ContractNoteNumber
																from Trans_CustomerTrades,Trans_DailyStatistics----,Trans_ContractNotes
																where CustomerTrades_ExchangeSegment='+@usersegid+'
																and CustomerTrades_TradeDate='''+@Tradedate+'''
																and CustomerTrades_CustomerID='''+@Clientidwithinloop+'''
																and CustomerTrades_FinYear='''+@Finyear+'''
																and CustomerTrades_ContractNoteNumber='''+@contractno+'''
																and CustomerTrades_SettlementNumber='''+@settno+'''
																and CustomerTrades_SettlementType='''+@setttype+'''
																--and CustomerTrades_TransactionType=''Orgnl''
																--and CustomerTrades_ContractNoteNumber is not null
																--and ISNULL(CustomerTrades_TradeCategory,''NOR'') not in (''ASN'',''EXC'',''EXP'')
																and DailyStat_ProductSeriesID=CustomerTrades_ProductSeriesID
																and DailyStat_DateTime='''+@Tradedate+'''
																and DailyStat_ExchangeSegmentID='''+@mastersegid+'''
																'
																insert into #TradeDetailInfo(Clientid,BuySell,Quantity,Grossrate,Brokerage,Netrate,
																							Nettotal,customertradesid,origialtransactionid,Closingrate,
																							Segment,Exchange,vieworder,ProductserirsId,settno,usersegid,Remarks,contractnoteno)
				
																exec (@dynamicsql)
																
																-------------Exchange Trades [Original Transactionid is Null]
																UPDATE #TradeDetailInfo SET  orderno=ExchangeTrades_OrderNumber
																							   ,ordertime=ExchangeTrades_OrderEntryTime
																							   ,Tradeno=ExchangeTrades_TradeNumber,
																							   Tradetime=ExchangeTrades_TradeEntryTime
																							   ,ScripName=CASE  WHEN isnull( ExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ExchangeTrades_SecurityExpiry IS NULL
																												THEN isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))
																												WHEN isnull(ExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ExchangeTrades_SecurityExpiry IS NOT NULL
																												THEN isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))
																												ELSE isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))+
																													 ' '+cast(cast(round(ExchangeTrades_SecurityStrikePrice,2) as numeric(28,2)) as varchar) 
																												End 
																							  
																								--exchangetrades_productseriesid = exchangetrades_productseriesid
																From Trans_ExchangeTrades Where 
																ExchangeTrades_CUSTTRANSACTIONID=customertradesid and origialtransactionid is null
																and ExchangeTrades_COMPANYID=@Company and ExchangeTrades_Segment=@usersegid
																and ExchangeTrades_SettlementNumber=@settno and ExchangeTrades_SettlementType=@setttype
																and ExchangeTrades_TradeDate=@Tradedate
																and ExchangeTrades_TradeCategory is null
																-------------Exchange Trades [Original Transactionid is Not Null]
																UPDATE #TradeDetailInfo SET  orderno=ExchangeTrades_OrderNumber
																							   ,ordertime=ExchangeTrades_OrderEntryTime
																							   ,Tradeno=ExchangeTrades_TradeNumber,
																							   Tradetime=ExchangeTrades_TradeEntryTime
																							   ,ScripName=CASE  WHEN isnull( ExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ExchangeTrades_SecurityExpiry IS NULL
																												THEN isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))
																												WHEN isnull(ExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ExchangeTrades_SecurityExpiry IS NOT NULL
																												THEN isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))
																												ELSE isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))+
																													 ' '+cast(cast(round(ExchangeTrades_SecurityStrikePrice,2) as numeric(28,2)) as varchar) 
																												End 
																							  
																								--exchangetrades_productseriesid = exchangetrades_productseriesid
																From Trans_ExchangeTrades Where 
																ExchangeTrades_CUSTTRANSACTIONID=origialtransactionid and origialtransactionid is not null
																and ExchangeTrades_COMPANYID=@Company and ExchangeTrades_Segment=@usersegid
																and ExchangeTrades_SettlementNumber=@settno and ExchangeTrades_SettlementType=@setttype
																and ExchangeTrades_TradeDate=@Tradedate
																and ExchangeTrades_TradeCategory is null
																
																--	-------------Exchange Trades [Original Transactionid is Null]
																UPDATE #TradeDetailInfo SET  orderno=ExchangeTrades_TradeCategory
																							   ,ScripName=CASE  WHEN isnull( ExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ExchangeTrades_SecurityExpiry IS NULL
																												THEN isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))
																												WHEN isnull(ExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ExchangeTrades_SecurityExpiry IS NOT NULL
																												THEN isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))
																												ELSE isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))+
																													 ' '+cast(cast(round(ExchangeTrades_SecurityStrikePrice,2) as numeric(28,2)) as varchar) 
																												End 
																							  
																								--exchangetrades_productseriesid = exchangetrades_productseriesid
																From Trans_ExchangeTrades Where 
																ExchangeTrades_CUSTTRANSACTIONID=customertradesid and origialtransactionid is null
																and ExchangeTrades_COMPANYID=@Company and ExchangeTrades_Segment=@usersegid
																and ExchangeTrades_SettlementNumber=@settno and ExchangeTrades_SettlementType=@setttype
																and ExchangeTrades_TradeDate=@Tradedate
																and ExchangeTrades_TradeCategory is not null
																-------------Exchange Trades [Original Transactionid is Not Null]
																UPDATE #TradeDetailInfo SET  orderno=ExchangeTrades_TradeCategory
																							   ,ScripName=CASE  WHEN isnull( ExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ExchangeTrades_SecurityExpiry IS NULL
																												THEN isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))
																												WHEN isnull(ExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ExchangeTrades_SecurityExpiry IS NOT NULL
																												THEN isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))
																												ELSE isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))+
																													 ' '+cast(cast(round(ExchangeTrades_SecurityStrikePrice,2) as numeric(28,2)) as varchar) 
																												End 
																							  
																								--exchangetrades_productseriesid = exchangetrades_productseriesid
																From Trans_ExchangeTrades Where 
																ExchangeTrades_CUSTTRANSACTIONID=origialtransactionid and origialtransactionid is not null
																and ExchangeTrades_COMPANYID=@Company and ExchangeTrades_Segment=@usersegid
																and ExchangeTrades_SettlementNumber=@settno and ExchangeTrades_SettlementType=@setttype
																and ExchangeTrades_TradeDate=@Tradedate
																and ExchangeTrades_TradeCategory is not null
																
																
																insert into #TradeDetailInfo(Scripname,Nettotal,Clientid,Segment,Exchange,vieworder,
																ProductserirsId,settno,usersegid,contractnoteno)
																select 'Net Total (Before Levies) for '+@exchangename+' '+'Future & Option  / ['+'Contract Note No. :'+ @contractno+' ]',
																sum(isnull(Nettotal,0)),@Clientidwithinloop,
																@segmentname,@exchangename,3,MAX(ProductserirsId)+1,@settno+' '+@setttype,@usersegid,@contractno
																from #TradeDetailInfo
																where Segment=@segmentname
																and Exchange=@exchangename
																and Clientid=@Clientidwithinloop
																--and CustomerTrades_FinYear=@Finyear
																--and CustomerTrades_SettlementNumber=@settno
																--and CustomerTrades_SettlementType=@setttype
																--and CustomerTrades_TransactionType='orgnl'
																group by Clientid,contractnoteno 
														
														select @cntrstaticloop=@cntrstaticloop+1
													End---contract loop end
												 
											End
												Else
													Begin
															select @settno=ltrim(rtrim(isnull(Settlements_Number,''))) from Master_Settlements where Settlements_FinYear=@Finyear and Settlements_ExchangeSegmentID=@mastersegid
															select @setttype=ltrim(rtrim(isnull(Settlements_TypeSuffix,''))) from Master_Settlements where Settlements_FinYear=@Finyear and Settlements_ExchangeSegmentID=@mastersegid

														if exists(select '1' from Trans_FOPosition,Master_Equity where FOPosition_CompanyID=@company
																	and FOPosition_Date=@Tradedate and FOPosition_SegmentID=@usersegid
																	and isnull(FOPosition_BFPriceUnits,0)<>0 and FOPosition_CustomerExchangeID=@Clientidwithinloop
																	and Equity_ExchSegmentID=@mastersegid
																	and Equity_SeriesID=FOPosition_ProductSeriesID
																	and Equity_FOIdentifier like 'FUT%'
																	--and FOPosition_SettlementNumber=@settno and FOPosition_SettlementType=@setttype
																	)
																		Begin
																			insert into #TradeDetailInfo(Scripname,Clientid,Segment,Exchange,vieworder,ProductserirsId,settno,usersegid)
																			select @exchangename+' '+'Future & Option ',@Clientidwithinloop,
																			@segmentname,@exchangename,1,1,@settno+' '+@setttype,@usersegid
														
																			insert into #TradeDetailInfo(Clientid,orderno,Scripname,BuySell,Quantity,Grossrate,Netrate,Closingrate,Nettotal,Segment,Exchange,vieworder,ProductserirsId,settno,usersegid)
																			select @Clientidwithinloop,'Brought Forward',
																			case when Equity_FOIdentifier like 'FUT%' then
																			ltrim(rtrim(Equity_TickerSymbol)) +' '+ltrim(rtrim(CONVERT(varchar(9),Equity_EffectUntil,6)))+' '+ltrim(rtrim(Equity_Series))
																			else 
																			ltrim(rtrim(Equity_TickerSymbol)) +' '+ltrim(rtrim(CONVERT(varchar(9),Equity_EffectUntil,6)))+' '+ltrim(rtrim(Equity_Series))
																			+' '+cast(ISNULL(Equity_StrikePrice,0) as varchar)
																			end as Srcipname,
																			case when FOPosition_BFPriceUnits>0 then 'Sell' else 'Buy' end as buysell,
																			abs(ISNULL(cast(FOPosition_BFPriceUnits as numeric(18,0)),0)) as quantity,
																			abs(ISNULL(cast(FOPosition_BFValue/FOPosition_BFPriceUnits as numeric(18,2)),0)) as grossrate,
																			abs(ISNULL(cast(FOPosition_BFValue/FOPosition_BFPriceUnits as numeric(18,2)),0)) as netrate,
																			FOPosition_SettlementPrice,
																			case when FOPosition_BFPriceUnits>0 then 
																			(isnull(FOPosition_SettlementPrice,0)-(FOPosition_BFValue)/cast(FOPosition_BFPriceUnits as numeric(18,2)))
																			*(-1*ISNULL(cast(FOPosition_BFPriceUnits as numeric(18,0)),0))
																			else
																			-1*(isnull(FOPosition_SettlementPrice,0)-ISNULL(cast(FOPosition_BFValue/FOPosition_BFPriceUnits as numeric(18,2)),0))
																			*(ISNULL(cast(FOPosition_BFPriceUnits as numeric(18,0)),0))
																			end as netprice,@segmentname,@exchangename,2,FOPosition_ProductSeriesID,@settno+' '+@setttype,@usersegid
																			from Trans_FOPosition,Master_Equity
																			where FOPosition_SegmentID=@usersegid
																			and FOPosition_Date=@Tradedate
																			and FOPosition_CustomerExchangeID=@Clientidwithinloop
																			and isnull(FOPosition_BFPriceUnits,0)<>0
																			and Equity_ExchSegmentID=@mastersegid
																			and Equity_SeriesID=FOPosition_ProductSeriesID
																			and Equity_FOIdentifier like 'FUT%'
																			--order by FOPosition_CustomerExchangeID,Equity_TickerSymbol,Equity_EffectUntil
																		
																			
																			insert into #TradeDetailInfo(Scripname,Nettotal,vieworder,ProductserirsId,Clientid,Segment,Exchange,settno,usersegid)
																			select 'Net Total (Before Levies) for '+@exchangename+' '+'Future & Option',
																			sum(isnull(Nettotal,0)),3,MAX(ProductserirsId)+1,@Clientidwithinloop,@segmentname,
																			@exchangename,@settno+' '+@setttype,@usersegid--,CustomerTrades_SettlementNumber,CustomerTrades_SettlementType  
																			from #TradeDetailInfo
																			where Segment=@segmentname
																			and Exchange=@exchangename
																			and Clientid=@Clientidwithinloop
																			--and CustomerTrades_FinYear=@Finyear
																			--and CustomerTrades_SettlementNumber=@settno
																			--and CustomerTrades_SettlementType=@setttype
																			--and CustomerTrades_TransactionType='orgnl'
																			group by Clientid,contractnoteno 
																		End
																	
															End
									End----------only for FO
										    
										    
									
								if((@segmentname='CDX') )
									Begin
										
										If exists(select '1' from Trans_ComCustomerTrades where ComCustomerTrades_CompanyID=@company
												 and ComCustomerTrades_FinYear=@Finyear and ComCustomerTrades_exchangeSegment=@usersegid
												 and ComCustomerTrades_TradeDate=@Tradedate and ComCustomerTrades_ContractNoteNumber is not null
												 and ComCustomerTrades_CustomerID=@Clientidwithinloop)
												Begin
												truncate table #contractnotedetail
												insert into #contractnotedetail
												Select distinct ComCustomerTrades_ContractNoteNumber,ComCustomerTrades_SettlementNumber,ComCustomerTrades_SettlementType
												 from Trans_ComCustomerTrades where ComCustomerTrades_CompanyID=@company
												 and ComCustomerTrades_FinYear=@Finyear and ComCustomerTrades_ExchangeSegment=@usersegid
												 and ComCustomerTrades_TradeDate=@Tradedate --and ContractNotes_Status is null
												 and ComCustomerTrades_CustomerID=@Clientidwithinloop
												 select @cntrdynamicloop=MAX(cntrid) from #contractnotedetail
												 select @cntrstaticloop=1
												 while(@cntrstaticloop<=@cntrdynamicloop)
													Begin
														select @settno=settno from #contractnotedetail where cntrid=@cntrstaticloop
														select @setttype=setttype from #contractnotedetail where cntrid=@cntrstaticloop
														select @contractno=cntrno from #contractnotedetail where cntrid=@cntrstaticloop
														
										
														insert into #TradeDetailInfo(Scripname,Clientid,Segment,Exchange,vieworder,
														ProductserirsId,settno,usersegid,contractnoteno)
														select @exchangename+' '+'Currency & Derivatives  / ['+'Contract Note No. :'+ @contractno+' ]',@Clientidwithinloop,
														@segmentname,@exchangename,1,1,@settno+' '+@setttype,@usersegid,@contractno
														if exists(select '1' from Trans_COMPosition where COMPosition_CompanyID=@company
																	and COMPosition_Date=@Tradedate and COMPosition_SegmentID=@usersegid
																	and isnull((-1*COMPosition_BFPriceUnits),0)<>0 and COMPosition_CustomerExchangeID=@Clientidwithinloop
																	and COMPosition_SettlementNumber=@settno and COMPosition_SettlementType=@setttype)
															Begin
																insert into #TradeDetailInfo(Clientid,orderno,Scripname,BuySell,Quantity,Grossrate,Netrate,Closingrate,Nettotal,Segment,Exchange,vieworder,ProductserirsId,usersegid,settno,contractnoteno)
																select @Clientidwithinloop,'Brought Forward',
																case when Commodity_Identifier like 'FUT%' then
																ltrim(rtrim(Commodity_TickerSymbol)) +' '+ltrim(rtrim(CONVERT(varchar(9),Commodity_ExpiryDate,6)))+' '+ltrim(rtrim(Commodity_TickerSeries))
																else 
																ltrim(rtrim(Commodity_TickerSymbol)) +' '+ltrim(rtrim(CONVERT(varchar(9),Commodity_ExpiryDate,6)))+' '+ltrim(rtrim(Commodity_TickerSeries))
																+' '+cast(ISNULL(Commodity_StrikePrice,0) as varchar)
																end as Srcipname,
																case when (-1*COMPosition_BFPriceUnits)>0 then 'Sell' else 'Buy' end as buysell,
																abs(ISNULL(cast((-1*COMPosition_BFPriceUnits) as numeric(18,0)),0)) as quantity,
																abs(ISNULL(cast((-1*COMPosition_BFValue)/(-1*COMPosition_BFPriceUnits) as numeric(18,4)),0)) as grossrate,
																abs(ISNULL(cast((-1*COMPosition_BFValue)/(-1*COMPosition_BFPriceUnits) as numeric(18,4)),0)) as netrate,
																COMPosition_SettlementPrice,
																case when (-1*COMPosition_BFPriceUnits)>0 then 
																(isnull(COMPosition_SettlementPrice,0)-((-1*COMPosition_BFValue))/cast((-1*COMPosition_BFPriceUnits) as numeric(18,4)))
																*(-1*ISNULL(cast((-1*COMPosition_BFPriceUnits) as numeric(18,0)),0))
																else
																(isnull(COMPosition_SettlementPrice,0)-ISNULL(cast((-1*COMPosition_BFValue)/(-1*COMPosition_BFPriceUnits) as numeric(18,4)),0))
																*(ISNULL(cast((-1*COMPosition_BFPriceUnits) as numeric(18,0)),0))
																end as netprice,@segmentname,@exchangename,2,COMPosition_ProductSeriesID,@usersegid,@settno+' '+@setttype,@contractno
																from Trans_COMPosition,Master_Commodity
																where COMPosition_SegmentID=@usersegid
																and COMPosition_Date=@Tradedate
																and COMPosition_CustomerExchangeID=@Clientidwithinloop
																and isnull((-1*COMPosition_BFPriceUnits),0)<>0
																and Commodity_ExchangeSegmentID=@mastersegid
																and Commodity_ProductSeriesID=COMPosition_ProductSeriesID
																and Commodity_Identifier like 'FUT%'
																--order by COMPosition_CustomerExchangeID,Commodity_TickerSymbol,Commodity_ExpiryDate
															End
																Select @dynamicsql='
																select ComCustomerTrades_CustomerID,
																case when ComCustomerTrades_UnitPriceQuantity>0 then ''Sell'' else ''Buy'' end,
																ComCustomerTrades_UnitPriceQuantity,ComCustomerTrades_UnitPrice,
																ComCustomerTrades_UnitBrokerage,ComCustomerTrades_NetRatePerUnit,
																case when isnull(COMCustomerTrades_ProductSeries,''FF'')=''FF''
																then -1*(ComDailyStat_Close-ComCustomerTrades_NetRatePerUnit)*ComCustomerTrades_UnitPriceQuantity
																else
																ComCustomerTrades_NetValue end,COMCustomerTrades_ID,ComCustomerTrades_OriginalTransactionID,
																case when isnull(ComCustomerTrades_ProductSeries,''FF'')=''FF''
																then ComDailyStat_Close
																else null end,
																'''+@segmentname+''','''+@exchangename+''',2,ComCustomerTrades_ProductSeriesID,
																'''+@settno+'''+'' ''+'''+@setttype+''','''+@usersegid+'''
																,isnull(ComCustomerTrades_Remarks,''''),ComCustomerTrades_ContractNoteNumber
																from Trans_ComCustomerTrades,Trans_ComDailyStat----,Trans_ContractNotes
																where ComCustomerTrades_ExchangeSegment='+@usersegid+'
																and ComCustomerTrades_TradeDate='''+@Tradedate+'''
																and ComCustomerTrades_CustomerID='''+@Clientidwithinloop+'''
																and ComCustomerTrades_FinYear='''+@Finyear+'''
																and ComCustomerTrades_ContractNoteNumber='''+@contractno+'''
																and ComCustomerTrades_SettlementNumber='''+@settno+'''
																and ComCustomerTrades_SettlementType='''+@setttype+'''
																--and CustomerTrades_TransactionType=''Orgnl''
																--and ComCustomerTrades_ContractNoteNumber is not null
																--and ISNULL(ComCustomerTrades_TradeCategory,''NOR'') not  in (''ARS'',''ART'',''CFS'',''CFT'',''ASN'',''EXC'',''EXP'')
																and comDailyStat_ProductSeriesID=COMCustomerTrades_ProductSeriesID
																and comDailyStat_DateTime='''+@Tradedate+'''
																and ComDailyStat_ExchangeSegmentID='''+@mastersegid+'''
																'
																insert into #TradeDetailInfo(Clientid,BuySell,Quantity,Grossrate,Brokerage,Netrate,
																							Nettotal,customertradesid,origialtransactionid,Closingrate,
																							Segment,Exchange,vieworder,ProductserirsId,settno,usersegid,
																							Remarks,contractnoteno)
				
																exec (@dynamicsql)
																
																-------------Exchange Trades [Original Transactionid is Null]
																UPDATE #TradeDetailInfo SET  orderno=ComExchangeTrades_OrderNumber
																							   ,ordertime=ComExchangeTrades_OrderEntryTime
																							   ,Tradeno=ComExchangeTrades_TradeNumber,
																							   Tradetime=ComExchangeTrades_TradeEntryTime
																							   ,ScripName=CASE  WHEN isnull( ComExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ComExchangeTrades_SecurityExpiry IS NULL
																												THEN isnull(rtrim(ComExchangeTrades_SecuritySymbol),'')+' '+ISNULL(cast(ComExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ComExchangeTrades_SECURITYCode,''))
																												WHEN isnull(ComExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ComExchangeTrades_SecurityExpiry IS NOT NULL
																												THEN isnull(rtrim(ComExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ComExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ComExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ComExchangeTrades_SECURITYCode,''))
																												ELSE isnull(rtrim(ComExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ComExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ComExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ComExchangeTrades_SECURITYCode,''))+
																													 ' '+cast(cast(round(ComExchangeTrades_SecurityStrikePrice,2) as numeric(28,2)) as varchar) 
																												End 
																							  
																								--exchangetrades_productseriesid = exchangetrades_productseriesid
																From Trans_ComExchangeTrades Where 
																ComExchangeTrades_CUSTTRANSACTIONID=customertradesid and origialtransactionid is null
																and ComExchangeTrades_COMPANYID=@Company and ComExchangeTrades_Segment=@usersegid
																and ComExchangeTrades_SettlementNumber=@settno and ComExchangeTrades_SettlementType=@setttype
																and ComExchangeTrades_TradeDate=@Tradedate
																and ComExchangeTrades_TradeCategory is null
																-------------Exchange Trades [Original Transactionid is Not Null]
																UPDATE #TradeDetailInfo SET  orderno=ComExchangeTrades_OrderNumber
																							   ,ordertime=ComExchangeTrades_OrderEntryTime
																							   ,Tradeno=ComExchangeTrades_TradeNumber,
																							   Tradetime=ComExchangeTrades_TradeEntryTime
																							   ,ScripName=CASE  WHEN isnull( ComExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ComExchangeTrades_SecurityExpiry IS NULL
																												THEN isnull(rtrim(ComExchangeTrades_SecuritySymbol),'')+' '+ISNULL(cast(ComExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ComExchangeTrades_SECURITYCode,''))
																												WHEN isnull(ComExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ComExchangeTrades_SecurityExpiry IS NOT NULL
																												THEN isnull(rtrim(ComExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ComExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ComExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ComExchangeTrades_SECURITYCode,''))
																												ELSE isnull(rtrim(ComExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ComExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ComExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ComExchangeTrades_SECURITYCode,''))+
																													 ' '+cast(cast(round(ComExchangeTrades_SecurityStrikePrice,2) as numeric(28,2)) as varchar) 
																												End 
																							  
																								--exchangetrades_productseriesid = exchangetrades_productseriesid
																From Trans_ComExchangeTrades Where 
																ComExchangeTrades_CustTransactionID=origialtransactionid and origialtransactionid is not null
																and ComExchangeTrades_COMPANYID=@Company and ComExchangeTrades_Segment=@usersegid
																and ComExchangeTrades_SettlementNumber=@settno and ComExchangeTrades_SettlementType=@setttype
																and ComExchangeTrades_TradeDate=@Tradedate
																and ComExchangeTrades_TradeCategory is null
																
																--	-------------Exchange Trades [Original Transactionid is Null]
																UPDATE #TradeDetailInfo SET  orderno=ComExchangeTrades_TradeCategory
																							   ,ScripName=CASE  WHEN isnull( ComExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ComExchangeTrades_SecurityExpiry IS NULL
																												THEN isnull(rtrim(ComExchangeTrades_SecuritySymbol),'')+' '+ISNULL(cast(ComExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ComExchangeTrades_SECURITYCode,''))
																												WHEN isnull(ComExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ComExchangeTrades_SecurityExpiry IS NOT NULL
																												THEN isnull(rtrim(ComExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ComExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ComExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ComExchangeTrades_SECURITYCode,''))
																												ELSE isnull(rtrim(ComExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ComExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ComExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ComExchangeTrades_SECURITYCode,''))+
																													 ' '+cast(cast(round(ComExchangeTrades_SecurityStrikePrice,2) as numeric(28,2)) as varchar) 
																												End 
																							  
																								--exchangetrades_productseriesid = exchangetrades_productseriesid
																From Trans_ComExchangeTrades Where 
																ComExchangeTrades_CustTransactionID=customertradesid and origialtransactionid is null
																and ComExchangeTrades_COMPANYID=@Company and ComExchangeTrades_Segment=@usersegid
																and ComExchangeTrades_SettlementNumber=@settno and ComExchangeTrades_SettlementType=@setttype
																and ComExchangeTrades_TradeDate=@Tradedate
																and ComExchangeTrades_TradeCategory is not null
																-------------Exchange Trades [Original Transactionid is Not Null]
																UPDATE #TradeDetailInfo SET  orderno=ComExchangeTrades_TradeCategory
																							   ,ScripName=CASE  WHEN isnull( ComExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ComExchangeTrades_SecurityExpiry IS NULL
																												THEN isnull(rtrim(ComExchangeTrades_SecuritySymbol),'')+' '+ISNULL(cast(ComExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ComExchangeTrades_SECURITYCode,''))
																												WHEN isnull(ComExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ComExchangeTrades_SecurityExpiry IS NOT NULL
																												THEN isnull(rtrim(ComExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ComExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ComExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ComExchangeTrades_SECURITYCode,''))
																												ELSE isnull(rtrim(ComExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ComExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ComExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ComExchangeTrades_SECURITYCode,''))+
																													 ' '+cast(cast(round(ComExchangeTrades_SecurityStrikePrice,2) as numeric(28,2)) as varchar) 
																												End 
																							  
																								--exchangetrades_productseriesid = exchangetrades_productseriesid
																From Trans_ComExchangeTrades Where 
																ComExchangeTrades_CUSTTRANSACTIONID=origialtransactionid and origialtransactionid is not null
																and ComExchangeTrades_COMPANYID=@Company and ComExchangeTrades_Segment=@usersegid
																and ComExchangeTrades_SettlementNumber=@settno and ComExchangeTrades_SettlementType=@setttype
																and ComExchangeTrades_TradeDate=@Tradedate
																and ComExchangeTrades_TradeCategory is not null
																
																
																insert into #TradeDetailInfo(Scripname,Nettotal,Clientid,Segment,Exchange,vieworder,ProductserirsId,settno,usersegid,contractnoteno)
																select 'Net Total (Before Levies) for '+@exchangename+' '+'Currency & Derivatives  / ['+'Contract Note No. :'+ @contractno+' ]',
																sum(isnull(Nettotal,0)),@Clientidwithinloop,
																@segmentname,@exchangename,3,MAX(ProductserirsId)+1,@settno+' '+@setttype,@usersegid,@contractno
																from #TradeDetailInfo
																where Segment=@segmentname
																and Exchange=@exchangename
																and Clientid=@Clientidwithinloop
																--and CustomerTrades_FinYear=@Finyear
																--and CustomerTrades_SettlementNumber=@settno
																--and CustomerTrades_SettlementType=@setttype
																--and CustomerTrades_TransactionType='orgnl'
																group by Clientid,contractnoteno
														
														select @cntrstaticloop=@cntrstaticloop+1
													End---contract loop end
												 
											End
												Else
													Begin
														
															select @settno=ltrim(rtrim(isnull(Settlements_Number,''))) from Master_Settlements where Settlements_FinYear=@Finyear and Settlements_ExchangeSegmentID=@mastersegid
															select @setttype=ltrim(rtrim(isnull(Settlements_TypeSuffix,''))) from Master_Settlements where Settlements_FinYear=@Finyear and Settlements_ExchangeSegmentID=@mastersegid
														
														if exists(select '1' from Trans_COMPosition,Master_Commodity where COMPosition_CompanyID=@company
																	and COMPosition_Date=@Tradedate and COMPosition_SegmentID=@usersegid
																	and isnull((-1*COMPosition_BFPriceUnits),0)<>0 and COMPosition_CustomerExchangeID=@Clientidwithinloop
																	and COMPosition_SettlementNumber=@settno and COMPosition_SettlementType=@setttype
																	and Commodity_ExchangeSegmentID=@mastersegid
																	and Commodity_ProductSeriesID=COMPosition_ProductSeriesID
																	and Commodity_Identifier like 'FUT%')
																		Begin
																			insert into #TradeDetailInfo(Scripname,Clientid,Segment,Exchange,vieworder,ProductserirsId,settno,usersegid)
																			select @exchangename+' '+'Currency & Derivatives ',@Clientidwithinloop,
																			@segmentname,@exchangename,1,1,@settno+' '+@setttype,@usersegid
																			insert into #TradeDetailInfo(Clientid,orderno,Scripname,BuySell,Quantity,Grossrate,Netrate,Closingrate,Nettotal,Segment,Exchange,vieworder,ProductserirsId,settno,usersegid)
																			select @Clientidwithinloop,'Brought Forward',
																			case when Commodity_Identifier like 'FUT%' then
																			ltrim(rtrim(Commodity_TickerSymbol)) +' '+ltrim(rtrim(CONVERT(varchar(9),Commodity_ExpiryDate,6)))+' '+ltrim(rtrim(Commodity_TickerSeries))
																			else 
																			ltrim(rtrim(Commodity_TickerSymbol)) +' '+ltrim(rtrim(CONVERT(varchar(9),Commodity_ExpiryDate,6)))+' '+ltrim(rtrim(Commodity_TickerSeries))
																			+' '+cast(ISNULL(Commodity_StrikePrice,0) as varchar)
																			end as Srcipname,
																			case when (-1*COMPosition_BFPriceUnits)>0 then 'Sell' else 'Buy' end as buysell,
																			abs(ISNULL(cast((-1*COMPosition_BFPriceUnits) as numeric(18,0)),0)) as quantity,
																			abs(ISNULL(cast((-1*COMPosition_BFValue)/(-1*COMPosition_BFPriceUnits) as numeric(18,4)),0)) as grossrate,
																			abs(ISNULL(cast((-1*COMPosition_BFValue)/(-1*COMPosition_BFPriceUnits) as numeric(18,4)),0)) as netrate,
																			COMPosition_SettlementPrice,
																			case when (-1*COMPosition_BFPriceUnits)>0 then 
																			(isnull(COMPosition_SettlementPrice,0)-((-1*COMPosition_BFValue))/cast((-1*COMPosition_BFPriceUnits) as numeric(18,4)))
																			*(-1*ISNULL(cast((-1*COMPosition_BFPriceUnits) as numeric(18,0)),0))
																			else
																			--123456789
																			(isnull(COMPosition_SettlementPrice,0)-ISNULL(cast((-1*COMPosition_BFValue)/(-1*COMPosition_BFPriceUnits) as numeric(18,4)),0))
																			*(ISNULL(cast((-1*COMPosition_BFPriceUnits) as numeric(18,0)),0))
																			end as netprice,@segmentname,@exchangename,2,COMPosition_ProductSeriesID,@settno+' '+@setttype,@usersegid
																			from Trans_COMPosition,Master_Commodity
																			where COMPosition_SegmentID=@usersegid
																			and COMPosition_Date=@Tradedate
																			and COMPosition_CustomerExchangeID=@Clientidwithinloop
																			and isnull((-1*COMPosition_BFPriceUnits),0)<>0
																			and Commodity_ExchangeSegmentID=@mastersegid
																			and Commodity_ProductSeriesID=COMPosition_ProductSeriesID
																			and Commodity_Identifier like 'FUT%'
																			--order by COMPosition_CustomerExchangeID,Commodity_TickerSymbol,Commodity_ExpiryDate
																		
																							
																							insert into #TradeDetailInfo(Scripname,Nettotal,vieworder,ProductserirsId,Segment,Exchange,settno,usersegid,Clientid)
																							select 'Net Total (Before Levies) for '+@exchangename+' '+'Currency & Derivatives ',
																							sum(isnull(Nettotal,0)),3,MAX(ProductserirsId)+1,@segmentname,
																							@exchangename,@settno+' '+@setttype,@usersegid,@Clientidwithinloop--,CustomerTrades_SettlementNumber,CustomerTrades_SettlementType  
																							from #TradeDetailInfo
																							where Segment=@segmentname
																							and Exchange=@exchangename
																							and Clientid=@Clientidwithinloop
																							--and CustomerTrades_FinYear=@Finyear
																							--and CustomerTrades_SettlementNumber=@settno
																							--and CustomerTrades_SettlementType=@setttype
																							--and CustomerTrades_TransactionType='orgnl'
																							group by Clientid,contractnoteno
																						End
																	
															End
									End----------only for COMM/CDX
									
									
								select @exchangeloopcounterstatic=@exchangeloopcounterstatic+1
								
									--select @localdynamic=COUNT(*)From tempdb.Information_Schema.COLUMNS where TABLE_NAME like '%#TradeDetailInfo%'
									--			Set @localstatic=1
												
									--			while (@localstatic<=@localdynamic)
									--				Begin
									--					select @colname=COLUMN_NAME From tempdb.Information_Schema.COLUMNS where TABLE_NAME like '%#TradeDetailInfo%' and ORDINAL_POSITION=@localstatic													
									--					select @localsql=
									--					'
									--					if exists(select * from #TradeDetailInfo where '''+@exchangename+'''+'' - ''+'''+@segmentname+'''=cast(['+@colname+'] as varchar(max)) and clientid in('''+@Clientidwithinloop+'''))
									--						begin
									--							update #TradeDetailInfo set Clienttcode='''+@exchangename+'''+'' - ''+'''+@segmentname+'''
									--						End
									--						'
									--						exec(@localsql)
									--					Set @localstatic=@localstatic+1
									--				End
								
																	
								
							End----exchange loop end
							
							update #TradeDetailInfo set Clientaddress=(select top 1 ltrim(rtrim(isnull(add_address1,'')))+' '+ltrim(rtrim(isnull(add_address2,'')))+' '+ltrim(rtrim(isnull(add_address3,'')))+' '+
														(select top 1 ltrim(rtrim(isnull(city_name,''))) from tbl_master_city where add_city=city_id)+' '+ltrim(rtrim(isnull(add_pin,'')))
														 from tbl_master_address where add_cntId=@Clientidwithinloop
														 and isnull(add_status,'Y')='Y'-- like 'CLS0000084'
														AND add_addressType=(select top 1 add_addressType from 
														(select add_addressType,
														case when rtrim(ltrim(add_addressType))='Office' then 1
														when rtrim(ltrim(add_addressType))='Registered' then 2
														when rtrim(ltrim(add_addressType))='Correspondence' then 3
														else 4 end as addreorder
														from tbl_master_address where 
														add_cntID=@Clientidwithinloop
														and isnull(add_status,'Y')='Y'--='CLS0000084'
														and add_entity='Customer/Client') tb
														order by addreorder))
											,Clientucc=(select top 1 cnt_ucc from tbl_master_contact where cnt_internalId=@Clientidwithinloop)
											,ClientName=(select top 1 ltrim(rtrim(isnull(cnt_firstName,'')))+' '+ltrim(rtrim(isnull(cnt_middleName,'')))+' '+ltrim(rtrim(isnull(cnt_lastName,''))) 
														from tbl_master_contact where cnt_internalId=@Clientidwithinloop)
											,ClientPan=(select top 1 LTRIM(rtrim(isnull(crg_Number,''))) from tbl_master_contactRegistration where crg_type='pancard'
														and crg_cntid=@Clientidwithinloop)
											,ClientMob=(select top 1 ltrim(rtrim(isnull(phf_countryCode,'')))+' '+ltrim(rtrim(isnull(phf_areaCode,'')))
														+' '+ltrim(rtrim(isnull(phf_phoneNumber,'')))
														 from tbl_master_phonefax where phf_cntId=@Clientidwithinloop
														 and isnull(phf_Status,'Y')='Y'-- like 'CLS0000084'
														AND phf_type=(select top 1 phf_type from 
														(select phf_type,
														case when rtrim(ltrim(phf_type))='Mobile' then 1
														when rtrim(ltrim(phf_type))='Office' then 2
														when rtrim(ltrim(phf_type))='Residence' then 3
														else 4 end as phoneorder
														from tbl_master_phonefax where 
														phf_cntId=@Clientidwithinloop--='CLS0000084'
														and phf_entity='Customer/Client'
														and isnull(phf_Status,'Y')='Y') tb
														order by phoneorder))
											,ClientEmail=(select top 1 ltrim(rtrim(isnull(eml_email,''))) from tbl_master_email 
														where eml_cntId=@Clientidwithinloop and eml_type='Official' and ISNULL(eml_Status,'Y')='Y')
											,BranchName=(select ltrim(rtrim(isnull(branch_description,'')))+' ['+ltrim(rtrim(isnull(branch_code,'')))+' ]' 
														from tbl_master_branch,tbl_master_contact where cnt_branchid=branch_id and cnt_internalId=@Clientidwithinloop)
											,BranchAddress=(select top 1 ltrim(rtrim(isnull(branch_address1,'')))+' '+ltrim(rtrim(isnull(branch_address2,'')))+' '+ltrim(rtrim(isnull(branch_address3,'')))
															+' '+(select top 1 ltrim(rtrim(isnull(city_name,''))) from tbl_master_city where city_id=branch_city)
															+' '+ltrim(rtrim(isnull(branch_pin,'')))
														    from tbl_master_branch,tbl_master_contact 
															where cnt_branchid=branch_id and cnt_internalId=@Clientidwithinloop)
											,BranchPhone=(select top 1 ltrim(rtrim(isnull(branch_phone,''))) 
															from tbl_master_branch,tbl_master_contact where cnt_branchid=branch_id and cnt_internalId=@Clientidwithinloop)
											,Companyname=(select cmp_Name from tbl_master_company where cmp_internalid=@company)
											,CompanyAddress=(select top 1 ltrim(rtrim(isnull(add_address1,'')))+' '+ltrim(rtrim(isnull(add_address2,'')))+' '+ltrim(rtrim(isnull(add_address3,'')))+' '+
															(select top 1 ltrim(rtrim(isnull(city_name,''))) from tbl_master_city where add_city=city_id)+' '+ltrim(rtrim(isnull(add_pin,'')))
															 from tbl_master_address where add_cntId=@company
															 and isnull(add_status,'Y')='Y'-- like 'CLS0000084'
															AND add_addressType=(select top 1 add_addressType from 
															(select add_addressType,
															case when rtrim(ltrim(add_addressType))='Office' then 1
															when rtrim(ltrim(add_addressType))='Registered' then 2
															when rtrim(ltrim(add_addressType))='Correspondence' then 3
															else 4 end as addreorder
															from tbl_master_address where 
															add_cntID=@company
															and isnull(add_status,'Y')='Y'--='CLS0000084'
															and add_entity='Company') tb
															order by addreorder))
											,Companycity=(Select top 1 ltrim(rtrim(isnull(tbl_master_city.City_Name,''))) from tbl_master_city,tbl_master_address where tbl_master_address.add_city=tbl_master_city.city_id AND tbl_master_address.add_cntID=@company AND add_addressType=(select top 1 add_addressType from 
														(select add_addressType,
														  case when rtrim(ltrim(add_addressType))='Office' then 1
															when rtrim(ltrim(add_addressType))='Registered' then 2
															when rtrim(ltrim(add_addressType))='Correspondence' then 3
															else 4 end as addreorder
															from tbl_master_address where 
															add_cntID=@company
									                        
															and add_entity='Company') tb
															order by addreorder))
											,CompanyPan=(Select 'Pan No.'+ltrim(rtrim(isnull(cmp_PanNo,''))) from Tbl_Master_Company where cmp_internalID=@company)
											,Companyservicetax=(Select 'ServiceTax No.'+ltrim(rtrim(isnull(cmp_serviceTaxNo,''))) from Tbl_Master_Company where cmp_internalID=@company)
											,CompanyCin=(Select 'CIN.'+ltrim(rtrim(isnull(cmp_CIN,''))) from Tbl_Master_Company where cmp_internalID=@company)
											,Companytelphone=(select top 1 ltrim(rtrim(isnull(phf_countryCode,'')))+' '+ltrim(rtrim(isnull(phf_areaCode,'')))
															+' '+ltrim(rtrim(isnull(phf_phoneNumber,'')))
															 from tbl_master_phonefax where phf_cntId=@company
															 and isnull(phf_Status,'Y')='Y'-- like 'CLS0000084'
															AND phf_type=(select top 1 phf_type from 
															(select phf_type,
															case when rtrim(ltrim(phf_type))='Mobile' then 1
															when rtrim(ltrim(phf_type))='Office' then 2
															when rtrim(ltrim(phf_type))='Residence' then 3
															else 4 end as phoneorder
															from tbl_master_phonefax where 
															phf_cntId=@company--='CLS0000084'
															and phf_entity='Company'
															and isnull(phf_Status,'Y')='Y') tb
															order by phoneorder))
											,Companyfax=(select top 1 ltrim(rtrim(isnull(phf_countryCode,'')))+' '+ltrim(rtrim(isnull(phf_areaCode,'')))
														+' '+ltrim(rtrim(isnull(phf_phoneNumber,''))) 
														from tbl_master_phonefax where phf_entity='Company' and isnull(phf_Status,'Y')='Y' and phf_type='FAX')
											,CompanyEmail=(select top 1 ltrim(rtrim(isnull(eml_email,''))) from tbl_master_email 
														where eml_cntId=@company and eml_type='Official' and ISNULL(eml_Status,'Y')='Y')
											,Companywebsite=(select top 1 ltrim(rtrim(isnull(eml_website,''))) from tbl_master_email 
														    where eml_cntId=@company and eml_type='Web Site' and ISNULL(eml_Status,'Y')='Y')
											,Greviencebrokermail=(Select top 1 isnull(exch_GrievanceID,'') as exch_GrievanceID from tbl_master_companyexchange 
																where exch_compId  =@company and exch_internalId=@UserSegidfrompage)
											,GrevienceExchangemail=(Select top 1 isnull(exch_InvestorGrievanceID,'') as exch_investerGrievanceID from tbl_master_companyexchange 
																where exch_compId  =@company and exch_internalId=@UserSegidfrompage)
											,Compliancename=(select top 1 isnull(Cnt_FirstName,'')+' '+isnull(Cnt_MiddleName,'')+' '+isnull(Cnt_LastName,'')from tbl_master_Contact where cnt_internalid=
															(select top 1 exch_ComplianceOfficer from tbl_Master_CompanyeXchange 
															where exch_compId=@company and exch_internalId=@UserSegidfrompage))
											,Complianceaddrs=(select top 1 ltrim(rtrim(isnull(add_address1,'')))+' '+ltrim(rtrim(isnull(add_address2,'')))+' '+ltrim(rtrim(isnull(add_address3,'')))+' '+
														(select top 1 ltrim(rtrim(isnull(city_name,''))) from tbl_master_city where add_city=city_id)+' '+ltrim(rtrim(isnull(add_pin,'')))
														 from tbl_master_address where add_cntId=(select top 1 exch_ComplianceOfficer from tbl_Master_CompanyeXchange where exch_compId=@company)
														 and isnull(add_status,'Y')='Y'-- like 'CLS0000084'
														AND add_addressType=(select top 1 add_addressType from 
														(select add_addressType,
														case when rtrim(ltrim(add_addressType))='Office' then 1
														when rtrim(ltrim(add_addressType))='Registered' then 2
														when rtrim(ltrim(add_addressType))='Correspondence' then 3
														else 4 end as addreorder
														from tbl_master_address where 
														add_cntID=(select top 1 exch_ComplianceOfficer from tbl_Master_CompanyeXchange 
														where exch_compId=@company and exch_internalId=@UserSegidfrompage)
														and isnull(add_status,'Y')='Y'--='CLS0000084'
														and add_entity='employee') tb
														order by addreorder))
											,Compliancemob=(select top 1 ltrim(rtrim(isnull(phf_countryCode,'')))+' '+ltrim(rtrim(isnull(phf_areaCode,'')))
															+' '+ltrim(rtrim(isnull(phf_phoneNumber,'')))
															 from tbl_master_phonefax where phf_cntId=(select top 1 exch_ComplianceOfficer from tbl_Master_CompanyeXchange where exch_compId=@company)
															 and isnull(phf_Status,'Y')='Y'-- like 'CLS0000084'
															AND phf_type=(select top 1 phf_type from 
															(select phf_type,
															case when rtrim(ltrim(phf_type))='Mobile' then 1
															when rtrim(ltrim(phf_type))='Office' then 2
															when rtrim(ltrim(phf_type))='Residence' then 3
															else 4 end as phoneorder
															from tbl_master_phonefax where 
															phf_cntId=(select top 1 exch_ComplianceOfficer from tbl_Master_CompanyeXchange 
															where exch_compId=@company and exch_internalId=@UserSegidfrompage)--='CLS0000084'
															and phf_entity='employee'
															and isnull(phf_Status,'Y')='Y') tb
															order by phoneorder))
											,Complianceemail=(select top 1 ltrim(rtrim(isnull(eml_email,''))) from tbl_master_email 
															where eml_cntId=(select top 1 exch_ComplianceOfficer from tbl_Master_CompanyeXchange 
															where exch_compId=@company and exch_internalId=@UserSegidfrompage)
															and eml_type='Official' and ISNULL(eml_Status,'Y')='Y')
											,clientemailtype=(select top 1 ltrim(rtrim(isnull(eml_type,''))) from tbl_master_email 
														where eml_cntId=@Clientidwithinloop and eml_type='Official' and ISNULL(eml_Status,'Y')='Y')
											,Clientdeliverytype=(select top 1 ltrim(rtrim(isnull(cnt_ContractDeliveryMode,'B'))) from tbl_master_contact 
														where cnt_internalId=@Clientidwithinloop --and ltrim(rtrim(isnull(cnt_ContractDeliveryMode,'B')))<>'P'
														)
											where Clientid=@Clientidwithinloop
											
						select @clientloopcounterstatic=@clientloopcounterstatic+1
						select @payinout=null
						select @payinoutbse=null
						select @payinoutmcxsx=null
						if exists(select 'Y' from #TradeDetailInfo where Segment='CM' and Clientid=@Clientidwithinloop)
							Begin
								update #TradeDetailInfo 
								set PayinPayoutdt=(select top 1 PayinPayoutdt from #TradeDetailInfo where Segment='CM' and  Clientid=@Clientidwithinloop),
								PayinPayoutdtbse=(select top 1 PayinPayoutdtbse from #TradeDetailInfo where Segment='CM' and  Clientid=@Clientidwithinloop),
								PayinPayoutdtmcxsx=(select top 1 PayinPayoutdtmcxsx from #TradeDetailInfo where Segment='CM' and  Clientid=@Clientidwithinloop) 
								where Clientid=@Clientidwithinloop --and Segment='CM'
							--select top 1 PayinPayoutdt from #TradeDetailInfo where Segment='CM' and  Clientid=@Clientidwithinloop
							End
					End--client loop end
					-----main table loop for nessesity-------
					
					--insert into #TradeDetailInfselection
					--select * from #TradeDetailInfo order by Clientid,Segment,Exchange,ProductserirsId,id
					Declare @exesql varchar(max),@exesqlparam varchar(max),@exesqlfield varchar(max),@settnouse varchar(250),@settnonse varchar(250),@settnobse varchar(250),@settnomcxsx varchar(250)
					,@sebinouse varchar(250),@sebinonse varchar(250),@sebinobse varchar(250),@sebinomcxsx varchar(250)
					,@netoblgnsecm numeric(28,2),@netoblgnsefo numeric(28,2),@netoblgnsecdx numeric(28,2)
					,@netoblgbsecm numeric(28,2),@netoblgbsefo numeric(28,2),@netoblgbsecdx numeric(28,2)
					,@netoblgnmcxsxecm numeric(28,2),@netoblgmcxsxfo numeric(28,2),@netoblgmcxsxcdx numeric(28,2),@Totaloblg numeric(28,2)
					,@localsettno varchar(10),@localsetttype varchar(5),@localtradedate datetime,@localfinyear varchar(10)
					,@localcompany varchar(10),@localuserseg varchar(10),@TotalBrokerage numeric(18,4),@netoblgusecdx numeric(28,2)--,
					,@staticchargesid int,@dynamicchargesid int,@segid varchar(10),
					
					@stt numeric(18,2),@staxonbrkg numeric(18,2),@tranchrg numeric(18,2),
					@staxontrncheg numeric(18,2),@clearingchrg numeric(18,2),@staxonclearingchrg numeric(18,2),
					@sebifee numeric(18,2),@stampduty numeric (18,2),@Roundoff numeric(18,2),
					@totalbrkg numeric(18,2),@ucc varchar(50),
					@setttypeforupdate varchar(5),@payoutdate varchar(100)
					 
					
					select @sebinonse=''
					Create Table #distinctsettclient(autoid int identity ,Clientnameucc varchar(500),settno varchar(max),clientid varchar(20),exchangename varchar(10),
													segmentname varchar(10),Tradedate varchar(15),Company varchar(15),Finyear varchar(10),
													Contractdeliverymode varchar(10),Email varchar(250),
													EmailType varchar(50),usersegid varchar(5),contractnote varchar(20))
					insert into #distinctsettclient
					select distinct ClientName+' [ '+Clientucc+' ]',settno,Clientid,Exchange,Segment,@Tradedate,@company,@Finyear,
					case when Clientdeliverytype='B' then 'Both' when Clientdeliverytype='P' then 'Print' when Clientdeliverytype='E' then 'Only ECN' end
					,clientemail,clientemailtype,usersegid,contractnoteno  from #TradeDetailInfo
					where settno is not null --and contractnoteno is not null
					
					--select * from #distinctsettclient
					Select @localdynamic=MAX(autoid) from #distinctsettclient
					select @localstatic=1					
					while(@localstatic<=@localdynamic)
						Begin
							
							Select @settnouse=''
							select @settnonse=''
							select @settnobse=''
							select @settnomcxsx=''
							select @sebinonse=''
							select @sebinobse=''
							select @sebinomcxsx=''
							select @netoblgnsecm=0.00
							select @netoblgnsefo=0.00
							select @netoblgnsecdx=0.00
							select @netoblgbsecm=0.00
							select @netoblgbsefo=0.00
							select @netoblgbsecdx=0.00
							select @netoblgnmcxsxecm=0.00
							select @netoblgmcxsxfo=0.00
							select @netoblgmcxsxcdx=0.00
							select @Totaloblg=0.00
							select @netoblgusecdx=0.00
							--select @TotalBrokerage=0.00
							select @Clientidwithinloop=(select Clientid from #distinctsettclient where autoid=@localstatic)
							select @exchangename=(select exchangename from #distinctsettclient where autoid=@localstatic)
							select @segmentname=(select segmentname from #distinctsettclient where autoid=@localstatic)
							select @contractno=(select contractnote from #distinctsettclient where autoid=@localstatic)
							select @setttypeforupdate=(select right(ltrim(rtrim(settno)),1) from #distinctsettclient where autoid=@localstatic)
							select @localsettno=(select left(settno,7) from #distinctsettclient where autoid=@localstatic)
							select @localsetttype =(select right(ltrim(rtrim(settno)),1) from #distinctsettclient where autoid=@localstatic)
							select @localtradedate =(select cast(Tradedate as datetime) from #distinctsettclient where autoid=@localstatic)
							select @localfinyear=(select Finyear from #distinctsettclient where autoid=@localstatic)
							select @localcompany=(select Company from #distinctsettclient where autoid=@localstatic) 
							select @localuserseg=(select #exchangefetch.usersegid from #distinctsettclient,#exchangefetch where autoid=@localstatic
												  and #distinctsettclient.exchangename=#exchangefetch.Exchangename and #distinctsettclient.segmentname=#exchangefetch.Segmentname)
							select @segid=(select usersegid from #distinctsettclient where autoid=@localstatic)
								
							select @TotalBrokerage=(select ContractNotes_TotalBrokerage from Trans_ContractNotes
													where ContractNotes_CustomerID=@Clientidwithinloop and ContractNotes_FinYear=@localfinyear
													and ContractNotes_SegmentID=@localuserseg and ContractNotes_SettlementNumber=@localsettno
													and ContractNotes_SettlementType=@localsetttype
													 and ContractNotes_CompanyID=@company
													and ContractNotes_TradeDate=@localtradedate and ContractNotes_Status is null
													and ContractNotes_Number=@contractno)
						
							update #TradeDetailInfo set NseCmsebino=(Select ltrim(rtrim(isnull(exch_sebiNo,''))) from
							(Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID,exch_sebiNo from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
							Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
							Where Exchange_ShortName=Exh_ShortName
							and Exh_ShortName='NSE' and Exch_SegmentID='CM'
							and Exch_CompID=@company)
							where Clientid=@Clientidwithinloop
							
							update #TradeDetailInfo set NseFosebino=(Select ltrim(rtrim(isnull(exch_sebiNo,''))) from
							(Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID,exch_sebiNo from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
							Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
							Where Exchange_ShortName=Exh_ShortName
							and Exh_ShortName='NSE' and Exch_SegmentID='FO'
							and Exch_CompID=@company)
							where Clientid=@Clientidwithinloop
							
							update #TradeDetailInfo set NseCdxsebino=(Select ltrim(rtrim(isnull(exch_sebiNo,''))) from
							(Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID,exch_sebiNo from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
							Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
							Where Exchange_ShortName=Exh_ShortName
							and Exh_ShortName='NSE' and Exch_SegmentID='CDX'
							and Exch_CompID=@company)
							where Clientid=@Clientidwithinloop
							
							update #TradeDetailInfo set BseCmsebino=(Select ltrim(rtrim(isnull(exch_sebiNo,''))) from
							(Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID,exch_sebiNo from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
							Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
							Where Exchange_ShortName=Exh_ShortName
							and Exh_ShortName='BSE' and Exch_SegmentID='CM'
							and Exch_CompID=@company)
							where Clientid=@Clientidwithinloop
							
							update #TradeDetailInfo set BseFosebino=(Select ltrim(rtrim(isnull(exch_sebiNo,''))) from
							(Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID,exch_sebiNo from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
							Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
							Where Exchange_ShortName=Exh_ShortName
							and Exh_ShortName='BSE' and Exch_SegmentID='FO'
							and Exch_CompID=@company)
							where Clientid=@Clientidwithinloop
							
							update #TradeDetailInfo set BseCdxsebino=(Select ltrim(rtrim(isnull(exch_sebiNo,''))) from
							(Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID,exch_sebiNo from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
							Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
							Where Exchange_ShortName=Exh_ShortName
							and Exh_ShortName='BSE' and Exch_SegmentID='CDX'
							and Exch_CompID=@company)
							where Clientid=@Clientidwithinloop
							
							update #TradeDetailInfo set McxsxCmsebino=(Select ltrim(rtrim(isnull(exch_sebiNo,''))) from
							(Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID,exch_sebiNo from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
							Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
							Where Exchange_ShortName=Exh_ShortName
							and Exh_ShortName='MCXSX' and Exch_SegmentID='CM'
							and Exch_CompID=@company)
							where Clientid=@Clientidwithinloop
							
							update #TradeDetailInfo set McxsxFosebino=(Select ltrim(rtrim(isnull(exch_sebiNo,''))) from
							(Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID,exch_sebiNo from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
							Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
							Where Exchange_ShortName=Exh_ShortName
							and Exh_ShortName='MCXSX' and Exch_SegmentID='FO'
							and Exch_CompID=@company)
							where Clientid=@Clientidwithinloop
							
							update #TradeDetailInfo set McxsxCdxsebino=(Select ltrim(rtrim(isnull(exch_sebiNo,''))) from
							(Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID,exch_sebiNo from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
							Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
							Where Exchange_ShortName=Exh_ShortName
							and Exh_ShortName='MCXSX' and Exch_SegmentID='CDX'
							and Exch_CompID=@company)
							where Clientid=@Clientidwithinloop
							
							update #TradeDetailInfo set Othersebino=(Select ltrim(rtrim(isnull(exch_sebiNo,''))) from
							(Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID,exch_sebiNo from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
							Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
							Where Exchange_ShortName=Exh_ShortName
							and Exh_ShortName='USE' and Exch_SegmentID='CDX'
							and Exch_CompID=@company)
							where Clientid=@Clientidwithinloop
							
							
						
							select @settnouse=coalesce(@settnouse+' , ', '') + Convert(varchar,Settno) from 
							(Select Distinct Settno from #distinctsettclient   where Clientid=@Clientidwithinloop 
							and exchangename='USE' ) rr
							
							select @settnonse=coalesce(@settnonse+' , ', '') + Convert(varchar,Settno) from 
							(Select Distinct Settno from #distinctsettclient   where Clientid=@Clientidwithinloop 
							and exchangename='NSE'  and segmentname='CM') rr
							
							 select @settnobse=coalesce(@settnobse+' , ', '') + Convert(varchar,Settno) from 
							(Select Distinct Settno from #distinctsettclient where 
							Clientid=@Clientidwithinloop and exchangename='BSE' and segmentname='CM') rr
						
							 select @settnomcxsx=coalesce(@settnomcxsx+' , ', '') + Convert(varchar,Settno) from 
							(Select Distinct Settno from #distinctsettclient where
							Clientid=@Clientidwithinloop and exchangename='MCXSX' and segmentname='CM') rr
							
							
							 select @sebinouse=coalesce(@sebinouse+' , ', '') + Convert(varchar,sebiregno) from 
							(Select Distinct sebiregno from #TradeDetailInfo where  
							Clientid=@Clientidwithinloop and Exchange='USE') rr
							
							 select @sebinonse=coalesce(@sebinonse+' , ', '') + Convert(varchar,sebiregno) from 
							(Select Distinct sebiregno from #TradeDetailInfo where  
							Clientid=@Clientidwithinloop and Exchange='NSE') rr
							
							select @sebinobse=coalesce(@sebinobse+' , ', '') + Convert(varchar,sebiregno) from 
							(Select Distinct sebiregno from #TradeDetailInfo where  
							Clientid=@Clientidwithinloop and Exchange='BSE') rr
							
							select @sebinomcxsx=coalesce(@sebinomcxsx+' , ', '') + Convert(varchar,sebiregno) from 
							(Select Distinct sebiregno from #TradeDetailInfo where  
							Clientid=@Clientidwithinloop and Exchange='MCXSX') rr
							
							update #TradeDetailInfo set settnonse=substring(@settnonse,3,len(@settnonse)),sebinonse=@sebinonse where Clientid=@Clientidwithinloop
							
							update #TradeDetailInfo set settnobse=substring(@settnobse,3,len(@settnobse)),sebinobse=@sebinobse where Clientid=@Clientidwithinloop
							
							update #TradeDetailInfo set settnomcxsx=substring(@settnomcxsx,3,len(@settnomcxsx)),sebinomcxsx=@sebinomcxsx where Clientid=@Clientidwithinloop
							
							
							update #TradeDetailInfo set settnouse=@settnouse,sebinouse=@sebinouse where Clientid=@Clientidwithinloop
							
							select @settnonse=''
							select @settnonse=coalesce(@settnonse+' , ', '') + Convert(varchar,Settno) from 
							(Select Distinct Settno from #TradeDetailInfo where  
							Clientid=@Clientidwithinloop and Exchange='NSE' and Segment='CM') rr
							
							update #TradeDetailInfo set NseCmsettno=substring(@settnonse,3,len(@settnonse)) where Clientid=@Clientidwithinloop
							
								select @settnonse=''
							select @settnonse=coalesce(@settnonse+' , ', '') + Convert(varchar,Settno) from 
							(Select Distinct Settno from #TradeDetailInfo where  
							Clientid=@Clientidwithinloop and Exchange='NSE' and Segment='FO') rr
							
							update #TradeDetailInfo set NseFosettno=substring(@settnonse,3,len(@settnonse)) 
							where Clientid=@Clientidwithinloop
							select @settnonse=''
							select @settnonse=coalesce(@settnonse+' , ', '') + Convert(varchar,Settno) from 
							(Select Distinct Settno from #TradeDetailInfo where  
							Clientid=@Clientidwithinloop and Exchange='NSE' and Segment='CDX') rr
							
							update #TradeDetailInfo set NseCdxsettno=substring(@settnonse,3,len(@settnonse)) 
							where Clientid=@Clientidwithinloop
							select @settnonse=''
							select @settnobse=''
							select @settnobse=coalesce(@settnobse+' , ', '') + Convert(varchar,Settno) from 
							(Select Distinct Settno from #TradeDetailInfo where  
							Clientid=@Clientidwithinloop and Exchange='BSE' and Segment='CM') rr
							
							update #TradeDetailInfo set BseCmsettno=substring(@settnobse,3,len(@settnobse)) where Clientid=@Clientidwithinloop
							select @settnobse=''
							select @settnobse=coalesce(@settnobse+' , ', '') + Convert(varchar,Settno) from 
							(Select Distinct Settno from #TradeDetailInfo where  
							Clientid=@Clientidwithinloop and Exchange='BSE' and Segment='FO') rr
							
							update #TradeDetailInfo set BseFosettno=substring(@settnobse,3,len(@settnobse)) 
							where Clientid=@Clientidwithinloop
							select @settnobse=''
							select @settnobse=coalesce(@settnobse+' , ', '') + Convert(varchar,Settno) from 
							(Select Distinct Settno from #TradeDetailInfo where  
							Clientid=@Clientidwithinloop and Exchange='BSE' and Segment='CDX') rr
							
							update #TradeDetailInfo set BseCdxsettno=substring(@settnobse,3,len(@settnobse)) 
							where Clientid=@Clientidwithinloop
							select @settnobse=''
							select @settnomcxsx=''
							select @settnomcxsx=coalesce(@settnomcxsx+' , ', '') + Convert(varchar,Settno) from 
							(Select Distinct Settno from #TradeDetailInfo where  
							Clientid=@Clientidwithinloop and Exchange='MCXSX' and Segment='CM') rr
							
							update #TradeDetailInfo set McxsxCmsettno=substring(@settnomcxsx,3,len(@settnomcxsx)) where Clientid=@Clientidwithinloop
							select @settnomcxsx=''
							select @settnomcxsx=coalesce(@settnomcxsx+' , ', '') + Convert(varchar,Settno) from 
							(Select Distinct Settno from #TradeDetailInfo where  
							Clientid=@Clientidwithinloop and Exchange='MCXSX' and Segment='FO') rr
							
							update #TradeDetailInfo set McxsxCmsettno=substring(@settnomcxsx,3,len(@settnomcxsx)) 
							where Clientid=@Clientidwithinloop
							select @settnomcxsx=''
							select @settnomcxsx=coalesce(@settnomcxsx+' , ', '') + Convert(varchar,Settno) from 
							(Select Distinct Settno from #TradeDetailInfo where  
							Clientid=@Clientidwithinloop and Exchange='MCXSX' and Segment='CDX') rr
							
							update #TradeDetailInfo set McxsxCmsettno=substring(@settnomcxsx,3,len(@settnomcxsx)) 
							where Clientid=@Clientidwithinloop
							select @settnomcxsx=''
							select @settnouse=''
							select @settnouse=coalesce(@settnouse+' , ', '') + Convert(varchar,Settno) from 
							(Select Distinct Settno from #TradeDetailInfo where  
							Clientid=@Clientidwithinloop and Exchange='USE' and Segment='CDX') rr
							
							update #TradeDetailInfo set Othersettno=substring(@settnouse,3,len(@settnouse)) 
							where Clientid=@Clientidwithinloop
							select @settnouse=''
							
							
							
							
							
									
								
									
									select @payoutdate=null
									
									
								
								
							if exists(select * from #TradeDetailInfo where LEN(NseCmsettno)>0 and Clientid=@Clientidwithinloop
							and @exchangename='NSE' and @segmentname='CM')
								Begin
									
									select @payoutdate=coalesce(@payoutdate+' , ', '') + convert(varchar,Settlements_FundsPayout,106) from 
														(Select Distinct convert(varchar,Settlements_FundsPayout,106) as Settlements_FundsPayout from Master_Settlements 
														where
														Settlements_ExchangeSegmentID=(Select (Select ExchangeSegment_ID From Master_ExchangeSegments 
														Where ExchangeSegment_ExchangeID=Exchange_ID and ExchangeSegment_Code=Exch_SegmentID)
														as [Session_ExchangeSegmentID]
														 from
														 (Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
														Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
														Where Exchange_ShortName=Exh_ShortName
														and Exch_CompID=@company
														and exh_shortName='NSE'
														and exch_segmentId='CM')
														and Settlements_StartDateTime=cast(@Tradedate as datetime)
														and Settlements_TypeSuffix=@setttypeforupdate
														
														and Settlements_FinYear=@Finyear)rr
																			
									update #TradeDetailInfo set NSECMsettdate='CM:'+substring(@payoutdate,1,len(@payoutdate)) 
									where Clientid=@Clientidwithinloop --and Exchange='NSE' and Segment='CM'
									
									select @payoutdate=null
								End
								if exists(select * from #TradeDetailInfo where LEN(NseFosettno)>0 
								and Clientid=@Clientidwithinloop and @exchangename='NSE' and @segmentname='FO')
								Begin
									
									select @payoutdate=coalesce(@payoutdate+' , ', '') + convert(varchar,Settlements_FundsPayout,106) from 
														(Select Distinct convert(varchar,Settlements_FundsPayout,106) as Settlements_FundsPayout from Master_Settlements 
														where
														Settlements_ExchangeSegmentID=(Select (Select ExchangeSegment_ID From Master_ExchangeSegments 
														Where ExchangeSegment_ExchangeID=Exchange_ID and ExchangeSegment_Code=Exch_SegmentID)
														as [Session_ExchangeSegmentID]
														 from
														 (Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
														Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
														Where Exchange_ShortName=Exh_ShortName
														and Exch_CompID=@company
														and exh_shortName='NSE'
														and exch_segmentId='FO')
														and cast(@Tradedate as datetime) between Settlements_StartDateTime and Settlements_endDateTime
														and Settlements_TypeSuffix=@setttypeforupdate
														and Settlements_FinYear=@Finyear)rr
																			
									update #TradeDetailInfo set NSEFOsettdate='FO:'+substring(@payoutdate,1,len(@payoutdate)) 
									where Clientid=@Clientidwithinloop --and Exchange='NSE' and Segment='FO'
									
									select @payoutdate=null
								End
								--select * from #TradeDetailInfo
								if exists(select * from #TradeDetailInfo where LEN(NseCdxsettno)>0 
								and Clientid=@Clientidwithinloop and @exchangename='NSE' and @segmentname='CDX')
								Begin
									
									select @payoutdate=coalesce(@payoutdate+' , ', '') + convert(varchar,Settlements_FundsPayout,106) from 
														(Select Distinct convert(varchar,Settlements_FundsPayout,106) as Settlements_FundsPayout from Master_Settlements 
														where
														Settlements_ExchangeSegmentID=(Select (Select ExchangeSegment_ID From Master_ExchangeSegments 
														Where ExchangeSegment_ExchangeID=Exchange_ID and ExchangeSegment_Code=Exch_SegmentID)
														as [Session_ExchangeSegmentID]
														 from
														 (Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
														Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
														Where Exchange_ShortName=Exh_ShortName
														and Exch_CompID=@company
														and exh_shortName='NSE'
														and exch_segmentId='CDX')
														and cast(@Tradedate as datetime) between Settlements_StartDateTime and Settlements_endDateTime
														and Settlements_TypeSuffix=@setttypeforupdate
														and Settlements_FinYear=@Finyear)rr
																			
									update #TradeDetailInfo set NseCdxsettdate='CDX:'+substring(@payoutdate,1,len(@payoutdate)) where Clientid=@Clientidwithinloop
									select @payoutdate=null
								End
								
								if exists(select * from #TradeDetailInfo where LEN(ltrim(rtrim(BseCmsettno)))>0 
								and Clientid=@Clientidwithinloop and @exchangename='BSE' and @segmentname='CM')
								Begin
									
									select @payoutdate=coalesce(@payoutdate+' , ', '') + convert(varchar,Settlements_FundsPayout,106) from 
														(Select Distinct convert(varchar,Settlements_FundsPayout,106) as Settlements_FundsPayout from Master_Settlements 
														where
														Settlements_ExchangeSegmentID=(Select (Select ExchangeSegment_ID From Master_ExchangeSegments 
														Where ExchangeSegment_ExchangeID=Exchange_ID and ExchangeSegment_Code=Exch_SegmentID)
														as [Session_ExchangeSegmentID]
														 from
														 (Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
														Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
														Where Exchange_ShortName=Exh_ShortName
														and Exch_CompID=@company
														and exh_shortName='BSE'
														and exch_segmentId='CM')
														and Settlements_StartDateTime=cast(@Tradedate as datetime)
														and Settlements_TypeSuffix=@setttypeforupdate
														and Settlements_FinYear=@Finyear)rr
														
																			
									update #TradeDetailInfo set BseCmsettdate='CM:'+substring(@payoutdate,1,len(@payoutdate)) where Clientid=@Clientidwithinloop
									select @payoutdate=null
								End
								if exists(select * from #TradeDetailInfo where LEN(BseFosettno)>0 and Clientid=@Clientidwithinloop
								and @exchangename='BSE' and @segmentname='FO')
								Begin
									select @payoutdate=coalesce(@payoutdate+' , ', '') + convert(varchar,Settlements_FundsPayout,106) from 
														(Select Distinct convert(varchar,Settlements_FundsPayout,106) as Settlements_FundsPayout from Master_Settlements 
														where
														Settlements_ExchangeSegmentID=(Select (Select ExchangeSegment_ID From Master_ExchangeSegments 
														Where ExchangeSegment_ExchangeID=Exchange_ID and ExchangeSegment_Code=Exch_SegmentID)
														as [Session_ExchangeSegmentID]
														 from
														 (Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
														Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
														Where Exchange_ShortName=Exh_ShortName
														and Exch_CompID=@company
														and exh_shortName='BSE'
														and exch_segmentId='FO')
														and cast(@Tradedate as datetime) between Settlements_StartDateTime and Settlements_endDateTime
														and Settlements_TypeSuffix=@setttypeforupdate
														and Settlements_FinYear=@Finyear)rr
																			
									update #TradeDetailInfo set BseFosettdate='FO:'+substring(@payoutdate,1,len(@payoutdate)) where Clientid=@Clientidwithinloop
									select @payoutdate=null
								End
								if exists(select * from #TradeDetailInfo where LEN(BseCdxsettno)>0 and Clientid=@Clientidwithinloop
								and @exchangename='BSE' and @segmentname='CDX')
								Begin
									select @payoutdate=coalesce(@payoutdate+' , ', '') + convert(varchar,Settlements_FundsPayout,106) from 
														(Select Distinct convert(varchar,Settlements_FundsPayout,106) as Settlements_FundsPayout from Master_Settlements 
														where
														Settlements_ExchangeSegmentID=(Select (Select ExchangeSegment_ID From Master_ExchangeSegments 
														Where ExchangeSegment_ExchangeID=Exchange_ID and ExchangeSegment_Code=Exch_SegmentID)
														as [Session_ExchangeSegmentID]
														 from
														 (Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
														Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
														Where Exchange_ShortName=Exh_ShortName
														and Exch_CompID=@company
														and exh_shortName='BSE'
														and exch_segmentId='CDX')
														and cast(@Tradedate as datetime) between Settlements_StartDateTime and Settlements_endDateTime
														and Settlements_TypeSuffix=@setttypeforupdate
														and Settlements_FinYear=@Finyear)rr
																			
									update #TradeDetailInfo set BseCdxsettdate='CDX:'+substring(@payoutdate,1,len(@payoutdate)) where Clientid=@Clientidwithinloop
									select @payoutdate=null
								End
								if exists(select * from #TradeDetailInfo where LEN(McxsxCmsettno)>0 and Clientid=@Clientidwithinloop
								and @exchangename='MCXSX' and @segmentname='CM')
								Begin
									select @payoutdate=coalesce(@payoutdate+' , ', '') + convert(varchar,Settlements_FundsPayout,106) from 
														(Select Distinct convert(varchar,Settlements_FundsPayout,106) as Settlements_FundsPayout from Master_Settlements 
														where
														Settlements_ExchangeSegmentID=(Select (Select ExchangeSegment_ID From Master_ExchangeSegments 
														Where ExchangeSegment_ExchangeID=Exchange_ID and ExchangeSegment_Code=Exch_SegmentID)
														as [Session_ExchangeSegmentID]
														 from
														 (Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
														Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
														Where Exchange_ShortName=Exh_ShortName
														and Exch_CompID=@company
														and exh_shortName='MCXSX'
														and exch_segmentId='CM')
														and Settlements_StartDateTime=cast(@Tradedate as datetime)
														and Settlements_TypeSuffix=@setttypeforupdate
														and Settlements_FinYear=@Finyear)rr
																			
									update #TradeDetailInfo set McxsxCmsettdate='CM:'+substring(@payoutdate,1,len(@payoutdate)) where Clientid=@Clientidwithinloop
									select @payoutdate=null
								End
								if exists(select * from #TradeDetailInfo where LEN(McxsxFosettno)>0 and Clientid=@Clientidwithinloop
								and @exchangename='MCXSX' and @segmentname='FO')
								Begin
									select @payoutdate=coalesce(@payoutdate+' , ', '') + convert(varchar,Settlements_FundsPayout,106) from 
														(Select Distinct convert(varchar,Settlements_FundsPayout,106) as Settlements_FundsPayout from Master_Settlements 
														where
														Settlements_ExchangeSegmentID=(Select (Select ExchangeSegment_ID From Master_ExchangeSegments 
														Where ExchangeSegment_ExchangeID=Exchange_ID and ExchangeSegment_Code=Exch_SegmentID)
														as [Session_ExchangeSegmentID]
														 from
														 (Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
														Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
														Where Exchange_ShortName=Exh_ShortName
														and Exch_CompID=@company
														and exh_shortName='MCXSX'
														and exch_segmentId='FO')
														and cast(@Tradedate as datetime) between Settlements_StartDateTime and Settlements_endDateTime
														and Settlements_TypeSuffix=@setttypeforupdate
														and Settlements_FinYear=@Finyear)rr
																			
									update #TradeDetailInfo set McxsxFosettdate='FO:'+substring(@payoutdate,1,len(@payoutdate)) where Clientid=@Clientidwithinloop
									select @payoutdate=null
								End
								if exists(select * from #TradeDetailInfo where LEN(McxsxCdxsettno)>0 and Clientid=@Clientidwithinloop
								and @exchangename='MCXSX' and @segmentname='CDX')
								Begin
									select @payoutdate=coalesce(@payoutdate+' , ', '') + convert(varchar,Settlements_FundsPayout,106) from 
														(Select Distinct convert(varchar,Settlements_FundsPayout,106) as Settlements_FundsPayout from Master_Settlements 
														where
														Settlements_ExchangeSegmentID=(Select (Select ExchangeSegment_ID From Master_ExchangeSegments 
														Where ExchangeSegment_ExchangeID=Exchange_ID and ExchangeSegment_Code=Exch_SegmentID)
														as [Session_ExchangeSegmentID]
														 from
														 (Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
														Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
														Where Exchange_ShortName=Exh_ShortName
														and Exch_CompID=@company
														and exh_shortName='MCXSX'
														and exch_segmentId='CDX')
														and cast(@Tradedate as datetime) between Settlements_StartDateTime and Settlements_endDateTime
														and Settlements_TypeSuffix=@setttypeforupdate
														and Settlements_FinYear=@Finyear)rr
																			
									update #TradeDetailInfo set McxsxCdxsettdate='CDX:'+substring(@payoutdate,1,len(@payoutdate)) where Clientid=@Clientidwithinloop
									select @payoutdate=null
								End
								if exists(select * from #TradeDetailInfo where LEN(Othersettno)>0 and Clientid=@Clientidwithinloop
								and @exchangename='USE' and @segmentname='CDX')
								Begin
									select @payoutdate=coalesce(@payoutdate+' , ', '') + convert(varchar,Settlements_FundsPayout,106) from 
														(Select Distinct convert(varchar,Settlements_FundsPayout,106) as Settlements_FundsPayout from Master_Settlements 
														where
														Settlements_ExchangeSegmentID=(Select (Select ExchangeSegment_ID From Master_ExchangeSegments 
														Where ExchangeSegment_ExchangeID=Exchange_ID and ExchangeSegment_Code=Exch_SegmentID)
														as [Session_ExchangeSegmentID]
														 from
														 (Select Exch_CompID,Exch_InternalID,Exh_ShortName,Exch_SegmentID from Tbl_Master_Exchange,Tbl_Master_CompanyExchange 
														Where Exh_CntId=Exch_ExchID) as T1,Master_Exchange
														Where Exchange_ShortName=Exh_ShortName
														and Exch_CompID=@company
														and exh_shortName='USE'
														and exch_segmentId='CDX')
														and cast(@Tradedate as datetime) between Settlements_StartDateTime and Settlements_endDateTime
														and Settlements_TypeSuffix=@setttypeforupdate
														and Settlements_FinYear=@Finyear)rr
																			
									update #TradeDetailInfo set Othersettdate='OTH:'+substring(@payoutdate,1,len(@payoutdate)) where Clientid=@Clientidwithinloop
									select @payoutdate=null
								End
									
									
														
									
							select @ucc=Clientucc from #TradeDetailInfo where Clientid=@Clientidwithinloop
							select @Tcode=crg_tcode from tbl_master_contactExchange
							where crg_exchange='NSE - CM' and crg_company=@company and crg_cntID=@Clientidwithinloop
							if(@ucc<>@Tcode)
								Begin
									update #TradeDetailInfo set NseCmtcode='CM :'+@Tcode
									where Clientid=@Clientidwithinloop
									and Exchange='NSE' and Segment='CM'
								End
							select @Tcode=crg_tcode from tbl_master_contactExchange
							where crg_exchange='NSE - FO' and crg_company=@company and crg_cntID=@Clientidwithinloop
							if(@ucc<>@Tcode)
								Begin
									update #TradeDetailInfo set NseFotcode='FO :'+@Tcode
									where Clientid=@Clientidwithinloop
									and Exchange='NSE' and Segment='FO'
								End
							select @Tcode=crg_tcode from tbl_master_contactExchange
							where crg_exchange='NSE - CDX' and crg_company=@company and crg_cntID=@Clientidwithinloop
							if(@ucc<>@Tcode)
								Begin
									update #TradeDetailInfo set NseCdxtcode='CDX :'+@Tcode
									where Clientid=@Clientidwithinloop
									and Exchange='NSE' and Segment='CDX'
								End
								
							select @Tcode=crg_tcode from tbl_master_contactExchange
							where crg_exchange='BSE - CM' and crg_company=@company and crg_cntID=@Clientidwithinloop
							if(@ucc<>@Tcode)
								Begin
									update #TradeDetailInfo set BseCmtcode='CM :'+@Tcode
									where Clientid=@Clientidwithinloop
									and Exchange='BSE' and Segment='CM'
								End
							select @Tcode=crg_tcode from tbl_master_contactExchange
							where crg_exchange='BSE - FO' and crg_company=@company and crg_cntID=@Clientidwithinloop
							if(@ucc<>@Tcode)
								Begin
									update #TradeDetailInfo set BseFotcode='FO :'+@Tcode
									where Clientid=@Clientidwithinloop
									and Exchange='BSE' and Segment='FO'
								End
							select @Tcode=crg_tcode from tbl_master_contactExchange
							where crg_exchange='BSE - CDX' and crg_company=@company and crg_cntID=@Clientidwithinloop
							if(@ucc<>@Tcode)
								Begin
									update #TradeDetailInfo set BseCdxtcode='CDX :'+@Tcode
									where Clientid=@Clientidwithinloop
									and Exchange='BSE' and Segment='CDX'
								End
								
							select @Tcode=crg_tcode from tbl_master_contactExchange
							where crg_exchange='MCXSX - CM' and crg_company=@company and crg_cntID=@Clientidwithinloop
							if(@ucc<>@Tcode)
								Begin
									update #TradeDetailInfo set MCXSXCmtcode='CM :'+@Tcode
									where Clientid=@Clientidwithinloop
									and Exchange='MCXSX' and Segment='CM'
								End
							select @Tcode=crg_tcode from tbl_master_contactExchange
							where crg_exchange='MCXSX - FO' and crg_company=@company and crg_cntID=@Clientidwithinloop
							if(@ucc<>@Tcode)
								Begin
									update #TradeDetailInfo set MCXSXFotcode='FO :'+@Tcode
									where Clientid=@Clientidwithinloop
									and Exchange='MCXSX' and Segment='FO'
								End
							select @Tcode=crg_tcode from tbl_master_contactExchange
							where crg_exchange='MCXSX - CDX' and crg_company=@company and crg_cntID=@Clientidwithinloop
							if(@ucc<>@Tcode)
								Begin
									update #TradeDetailInfo set McxsxCdxtcode='CDX :'+@Tcode
									where Clientid=@Clientidwithinloop
									and Exchange='MCXSX' and Segment='CDX'
								End
							select @Tcode=crg_tcode from tbl_master_contactExchange
							where crg_exchange='USE - CDX' and crg_company=@company and crg_cntID=@Clientidwithinloop
							if(@ucc<>@Tcode)
								Begin
									update #TradeDetailInfo set Othertcode='CDX :'+@Tcode
									where Clientid=@Clientidwithinloop
									and Exchange='USE' and Segment='CDX'
								End
							-----------------------------------------------------------
							
							----------------------------------------------------------------------------------------
							
						
							select @netoblgnsecm=(select SUM(Nettotal) from #TradeDetailInfo 
															where Exchange='NSE' and Segment='CM' and Clientid=@Clientidwithinloop
															--and contractnoteno=@contractno
															and Scripname like 'Net Total (Before Levies)%'
															group by Clientid--,contractnoteno
															)
							select @netoblgnsefo=(select SUM(Nettotal) from #TradeDetailInfo 
															where Exchange='NSE' and Segment='FO' and Clientid=@Clientidwithinloop
															and Scripname like 'Net Total (Before Levies)%'
															group by Clientid--,contractnoteno
															)
							select @netoblgnsecdx=(select SUM(Nettotal) from #TradeDetailInfo 
															where Exchange='NSE' and Segment='CDX' and Clientid=@Clientidwithinloop
															--and contractnoteno=@contractno
															and Scripname like 'Net Total (Before Levies)%'
															group by Clientid--,contractnoteno
															)
							select @netoblgbsecm=(select SUM(Nettotal) from #TradeDetailInfo 
															where Exchange='BSE' and Segment='CM' and Clientid=@Clientidwithinloop
															--and contractnoteno=@contractno
															and Scripname like 'Net Total (Before Levies)%'
															group by Clientid--,contractnoteno
															)
							select @netoblgbsefo=(select SUM(Nettotal) from #TradeDetailInfo 
															where Exchange='BSE' and Segment='FO' and Clientid=@Clientidwithinloop
															--and contractnoteno=@contractno
															and Scripname like 'Net Total (Before Levies)%'
															group by Clientid--,contractnoteno
															)
							select @netoblgbsecdx=(select SUM(Nettotal) from #TradeDetailInfo 
															where Exchange='BSE' and Segment='CDX' and Clientid=@Clientidwithinloop
															--and contractnoteno=@contractno
															and Scripname like 'Net Total (Before Levies)%'
															group by Clientid--,contractnoteno
															)
							select @netoblgnmcxsxecm=(select SUM(Nettotal) from #TradeDetailInfo 
															where Exchange='MCXSX' and Segment='CM' and Clientid=@Clientidwithinloop
															--and contractnoteno=@contractno
															and Scripname like 'Net Total (Before Levies)%'
															group by Clientid--,contractnoteno
															)
							select @netoblgmcxsxfo=(select SUM(Nettotal) from #TradeDetailInfo 
															where Exchange='MCXSX' and Segment='FO' and Clientid=@Clientidwithinloop
															--and contractnoteno=@contractno
															and Scripname like 'Net Total (Before Levies)%'
															group by Clientid--,contractnoteno
															)
							select @netoblgmcxsxcdx=(select SUM(Nettotal) from #TradeDetailInfo 
															where Exchange='MCXSX' and Segment='CDX' and Clientid=@Clientidwithinloop
															--and contractnoteno=@contractno
															and Scripname like 'Net Total (Before Levies)%'
															group by Clientid--,contractnoteno
															)
							
							select @netoblgusecdx=(select SUM(Nettotal) from #TradeDetailInfo 
															where Exchange='USE' and Segment='CDX' and Clientid=@Clientidwithinloop
															--and contractnoteno=@contractno
															and Scripname like 'Net Total (Before Levies)%'
															group by Clientid--,contractnoteno
															)
							
							update #TradeDetailInfo set Nsecmoblgation=@netoblgnsecm,usecdxoblgation=@netoblgusecdx,Nsefooblgation=@netoblgnsefo
													,Nsecdxoblgation=@netoblgnsecdx,Bsecmoblgation=@netoblgbsecm,Bsefooblgation=@netoblgbsefo,
													Bsecdxoblgation=@netoblgbsecdx,Mcxsxcmoblgation=@netoblgnmcxsxecm,Mcxsxfooblgation=@netoblgmcxsxfo
													,Mcxsxcdxoblgation=@netoblgmcxsxcdx where Clientid=@Clientidwithinloop
							
							
							select @Totaloblg=(select sum(isnull(Nsecmoblgation,0)+isnull(Nsefooblgation,0)+isnull(Nsecdxoblgation,0)+isnull(Bsecmoblgation,0)
													+isnull(Bsefooblgation,0)+isnull(Bsecdxoblgation,0)+isnull(Mcxsxcmoblgation,0)+isnull(Mcxsxfooblgation,0)
													+isnull(Mcxsxcdxoblgation,0)+isnull(usecdxoblgation,0)) from #TradeDetailInfo
									where Scripname like 'Net Total (Before Levies)%' and Clientid=@Clientidwithinloop
									--and contractnoteno=@contractno
									 group by Clientid--,contractnoteno
									 )
							update #TradeDetailInfo set Totalobligation=@Totaloblg where Clientid=@Clientidwithinloop
							
							 
					
							select @stt=(select sum(ContractNotes_STTAmount) from Trans_ContractNotes
										where ContractNotes_FinYear=@Finyear and ContractNotes_TradeDate=@Tradedate
										and ContractNotes_CustomerID=@Clientidwithinloop and ContractNotes_SegmentID=@segid
										--and ContractNotes_Number=@contractno
										)
							select @staxonbrkg=(select sum(ContractNotes_ServiceTaxOnBrkg+ContractNotes_EduCessOnBrkg+ContractNotes_HgrEduCessOnBrkg) from Trans_ContractNotes
										where ContractNotes_FinYear=@Finyear and ContractNotes_TradeDate=@Tradedate
										and ContractNotes_CustomerID=@Clientidwithinloop and ContractNotes_SegmentID=@segid
										--and ContractNotes_Number=@contractno
										)
							select @tranchrg=(select sum(ContractNotes_TransactionCharges) from Trans_ContractNotes
										where ContractNotes_FinYear=@Finyear and ContractNotes_TradeDate=@Tradedate
										and ContractNotes_CustomerID=@Clientidwithinloop and ContractNotes_SegmentID=@segid
										--and ContractNotes_Number=@contractno
										)
							select @staxontrncheg=(select sum(ContractNotes_ServiceTaxOnTranCharge+ContractNotes_EduCessOnTranCharge+ContractNotes_HgrEduCessOnTranCharge) from Trans_ContractNotes
										where ContractNotes_FinYear=@Finyear and ContractNotes_TradeDate=@Tradedate
										and ContractNotes_CustomerID=@Clientidwithinloop and ContractNotes_SegmentID=@segid
										--and ContractNotes_Number=@contractno
										)
							select @clearingchrg=(select sum(ContractNotes_ClearingCharges) from Trans_ContractNotes
										where ContractNotes_FinYear=@Finyear and ContractNotes_TradeDate=@Tradedate
										and ContractNotes_CustomerID=@Clientidwithinloop and ContractNotes_SegmentID=@segid
										--and ContractNotes_Number=@contractno
										)
							select @staxonclearingchrg=(select sum(ContractNotes_ServTaxOnClearingCharges+ContractNotes_EduCessOnClearingCharges+ContractNotes_HgrEduCessOnClearingCharges) from Trans_ContractNotes
										where ContractNotes_FinYear=@Finyear and ContractNotes_TradeDate=@Tradedate
										and ContractNotes_CustomerID=@Clientidwithinloop and ContractNotes_SegmentID=@segid
										--and ContractNotes_Number=@contractno
										)
							select @sebifee=(select sum(ContractNotes_SEBIFee) from Trans_ContractNotes
										where ContractNotes_FinYear=@Finyear and ContractNotes_TradeDate=@Tradedate
										and ContractNotes_CustomerID=@Clientidwithinloop and ContractNotes_SegmentID=@segid
										--and ContractNotes_Number=@contractno
										)
							select @stampduty=(select sum(ContractNotes_StampDuty) from Trans_ContractNotes
										where ContractNotes_FinYear=@Finyear and ContractNotes_TradeDate=@Tradedate
										and ContractNotes_CustomerID=@Clientidwithinloop and ContractNotes_SegmentID=@segid
										--and ContractNotes_Number=@contractno
										)
							select @Roundoff=(select sum(ContractNotes_RoundAmount) from Trans_ContractNotes
										where ContractNotes_FinYear=@Finyear and ContractNotes_TradeDate=@Tradedate
										and ContractNotes_CustomerID=@Clientidwithinloop and ContractNotes_SegmentID=@segid
										--and ContractNotes_Number=@contractno
										)
										
							select @staticchargesid=1
							select @dynamicchargesid=MAX(autoidcharges) from #parameterforcharges							 
							while (@staticchargesid<=@dynamicchargesid)
								Begin
									
									select @parametername=ltrim(rtrim(parametervalue)) from #parameterforcharges where @staticchargesid=autoidcharges
									
									if exists(select * from #Chargesdetail where Clientid=@Clientidwithinloop 
											 and #Chargesdetail.Chargesfield=@parametername)
										Begin
											
											if(@exchangename+@segmentname='NSECM')
												Begin
													
													update #Chargesdetail set NSECM=@netoblgnsecm
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='PAY IN/ PAY OUT OBLIGATION'
													
													update #Chargesdetail set NSECM=-1*@stt
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Securities  Transaction Tax'
													
													update #Chargesdetail set NSECM=-1*@staxonbrkg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Brokerage'
													
													update #Chargesdetail set NSECM=-1*@tranchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Transaction Charges'
													
													update #Chargesdetail set NSECM=-1*@staxontrncheg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Transaction Charges'
													
													update #Chargesdetail set NSECM=-1*@clearingchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Clearing Charges'
													
													update #Chargesdetail set NSECM=-1*@staxonclearingchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Clearing Charges'
													
													update #Chargesdetail set NSECM=-1*@sebifee
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Sebi Fee'
													
													update #Chargesdetail set NSECM=-1*@stampduty
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Stamp duty'
													
													update #Chargesdetail set NSECM=-1*@Roundoff
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Round Off'
													
												End
											
											if(@exchangename+@segmentname='NSEFO')
												Begin
													
													update #Chargesdetail set NSEFO=@netoblgnsefo
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='PAY IN/ PAY OUT OBLIGATION'
													
													update #Chargesdetail set NSEFO=-1*@stt
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Securities  Transaction Tax'
													
													update #Chargesdetail set NSEFO=-1*@staxonbrkg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Brokerage'
													
													update #Chargesdetail set NSEFO=-1*@tranchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Transaction Charges'
													
													update #Chargesdetail set NSEFO=-1*@staxontrncheg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Transaction Charges'
													
													update #Chargesdetail set NSEFO=-1*@clearingchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Clearing Charges'
													
													update #Chargesdetail set NSEFO=-1*@staxonclearingchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Clearing Charges'
													
													update #Chargesdetail set NSEFO=-1*@sebifee
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Sebi Fee'
													
													update #Chargesdetail set NSEFO=-1*@stampduty
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Stamp duty'
													
													update #Chargesdetail set NSEFO=-1*@Roundoff
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Round Off'
													
												End	
											
											if(@exchangename+@segmentname='NSECDX')
												Begin
													update #Chargesdetail set NSECDX=@netoblgnsecdx
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='PAY IN/ PAY OUT OBLIGATION'
													
													update #Chargesdetail set NSECDX=-1*@stt
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Securities  Transaction Tax'
													
													update #Chargesdetail set NSECDX=-1*@staxonbrkg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Brokerage'
													
													update #Chargesdetail set NSECDX=-1*@tranchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Transaction Charges'
													
													update #Chargesdetail set NSECDX=-1*@staxontrncheg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Transaction Charges'
													
													update #Chargesdetail set NSECDX=-1*@clearingchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Clearing Charges'
													
													update #Chargesdetail set NSECDX=-1*@staxonclearingchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Clearing Charges'
													
													update #Chargesdetail set NSECDX=-1*@sebifee
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Sebi Fee'
													
													update #Chargesdetail set NSECDX=-1*@stampduty
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Stamp duty'
													
													update #Chargesdetail set NSECDX=-1*@Roundoff
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Round Off'
													
												End	
												
											if(@exchangename+@segmentname='BSECM')
												Begin
													update #Chargesdetail set BSECM=@netoblgbsecm
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='PAY IN/ PAY OUT OBLIGATION'
													
													update #Chargesdetail set BSECM=-1*@stt
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Securities  Transaction Tax'
													
													update #Chargesdetail set BSECM=-1*@staxonbrkg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Brokerage'
													
													update #Chargesdetail set BSECM=-1*@tranchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Transaction Charges'
													
													update #Chargesdetail set BSECM=-1*@staxontrncheg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Transaction Charges'
													
													update #Chargesdetail set BSECM=-1*@clearingchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Clearing Charges'
													
													update #Chargesdetail set BSECM=-1*@staxonclearingchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Clearing Charges'
													
													update #Chargesdetail set BSECM=-1*@sebifee
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Sebi Fee'
													
													update #Chargesdetail set BSECM=-1*@stampduty
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Stamp duty'
													
													update #Chargesdetail set BSECM=-1*@Roundoff
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Round Off'
													
												End
											
											if(@exchangename+@segmentname='BSEFO')
												Begin
													update #Chargesdetail set BSEFO=@netoblgbsefo
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='PAY IN/ PAY OUT OBLIGATION'
													
													update #Chargesdetail set BSEFO=-1*@stt
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Securities  Transaction Tax'
													
													update #Chargesdetail set BSEFO=-1*@staxonbrkg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Brokerage'
													
													update #Chargesdetail set BSEFO=-1*@tranchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Transaction Charges'
													
													update #Chargesdetail set BSEFO=-1*@staxontrncheg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Transaction Charges'
													
													update #Chargesdetail set BSEFO=-1*@clearingchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Clearing Charges'
													
													update #Chargesdetail set BSEFO=-1*@staxonclearingchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Clearing Charges'
													
													update #Chargesdetail set BSEFO=-1*@sebifee
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Sebi Fee'
													
													update #Chargesdetail set BSEFO=-1*@stampduty
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Stamp duty'
													
													update #Chargesdetail set BSEFO=-1*@Roundoff
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Round Off'
													
												End
											
											if(@exchangename+@segmentname='BSECDX')
												Begin
													update #Chargesdetail set BSECDX=@netoblgbsecdx
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='PAY IN/ PAY OUT OBLIGATION'
													
													update #Chargesdetail set BSECDX=-1*@stt
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Securities  Transaction Tax'
													
													update #Chargesdetail set BSECDX=-1*@staxonbrkg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Brokerage'
													
													update #Chargesdetail set BSECDX=-1*@tranchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Transaction Charges'
													
													update #Chargesdetail set BSECDX=-1*@staxontrncheg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Transaction Charges'
													
													update #Chargesdetail set BSECDX=-1*@clearingchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Clearing Charges'
													
													update #Chargesdetail set BSECDX=-1*@staxonclearingchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Clearing Charges'
													
													update #Chargesdetail set BSECDX=-1*@sebifee
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Sebi Fee'
													
													update #Chargesdetail set BSECDX=-1*@stampduty
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Stamp duty'
													
													update #Chargesdetail set BSECDX=-1*@Roundoff
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Round Off'
													
												End
											
											------mcxsx
											
											
											if(@exchangename+@segmentname='mcxsxCM')
												Begin
													update #Chargesdetail set mcxsxCM=@netoblgnmcxsxecm
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='PAY IN/ PAY OUT OBLIGATION'
													
													update #Chargesdetail set mcxsxCM=-1*@stt
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Securities  Transaction Tax'
													
													update #Chargesdetail set mcxsxCM=-1*@staxonbrkg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Brokerage'
													
													update #Chargesdetail set mcxsxCM=-1*@tranchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Transaction Charges'
													
													update #Chargesdetail set mcxsxCM=-1*@staxontrncheg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Transaction Charges'
													
													update #Chargesdetail set mcxsxCM=-1*@clearingchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Clearing Charges'
													
													update #Chargesdetail set mcxsxCM=-1*@staxonclearingchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Clearing Charges'
													
													update #Chargesdetail set mcxsxCM=-1*@sebifee
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Sebi Fee'
													
													update #Chargesdetail set mcxsxCM=-1*@stampduty
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Stamp duty'
													
													update #Chargesdetail set MCXSXCM=-1*@Roundoff
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Round Off'
													
												End
											
											if(@exchangename+@segmentname='mcxsxFO')
												Begin
													update #Chargesdetail set mcxsxFO=@netoblgmcxsxfo
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='PAY IN/ PAY OUT OBLIGATION'
													
													update #Chargesdetail set mcxsxFO=-1*@stt
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Securities  Transaction Tax'
													
													update #Chargesdetail set mcxsxFO=-1*@staxonbrkg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Brokerage'
													
													update #Chargesdetail set mcxsxFO=-1*@tranchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Transaction Charges'
													
													update #Chargesdetail set mcxsxFO=-1*@staxontrncheg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Transaction Charges'
													
													update #Chargesdetail set mcxsxFO=-1*@clearingchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Clearing Charges'
													
													update #Chargesdetail set mcxsxFO=-1*@staxonclearingchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Clearing Charges'
													
													update #Chargesdetail set mcxsxFO=-1*@sebifee
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Sebi Fee'
													
													update #Chargesdetail set mcxsxFO=-1*@stampduty
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Stamp duty'
													
													update #Chargesdetail set MCXSXFO=-1*@Roundoff
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Round Off'
													
												End
											
											if(@exchangename+@segmentname='mcxsxCDX')
												Begin
													update #Chargesdetail set mcxsxCDX=@netoblgmcxsxcdx
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='PAY IN/ PAY OUT OBLIGATION'
													
													update #Chargesdetail set mcxsxCDX=-1*@stt
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Securities  Transaction Tax'
													
													update #Chargesdetail set mcxsxCDX=-1*@staxonbrkg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Brokerage'
													
													update #Chargesdetail set mcxsxCDX=-1*@tranchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Transaction Charges'
													
													update #Chargesdetail set mcxsxCDX=-1*@staxontrncheg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Transaction Charges'
													
													update #Chargesdetail set mcxsxCDX=-1*@clearingchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Clearing Charges'
													
													update #Chargesdetail set mcxsxCDX=-1*@staxonclearingchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Clearing Charges'
													
													update #Chargesdetail set mcxsxCDX=-1*@sebifee
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Sebi Fee'
													
													update #Chargesdetail set mcxsxCDX=-1*@stampduty
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Stamp duty'
													
													update #Chargesdetail set MCXSXCDX=-1*@Roundoff
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Round Off'
													
												End		
											
											if(@exchangename+@segmentname='USECDX')
												Begin
													update #Chargesdetail set USECDX=@netoblgusecdx
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='PAY IN/ PAY OUT OBLIGATION'
													
													update #Chargesdetail set USECDX=-1*@stt
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Securities  Transaction Tax'
													
													update #Chargesdetail set USECDX=-1*@staxonbrkg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Brokerage'
													
													update #Chargesdetail set USECDX=-1*@tranchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Transaction Charges'
													
													update #Chargesdetail set USECDX=-1*@staxontrncheg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Transaction Charges'
													
													update #Chargesdetail set USECDX=-1*@clearingchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Clearing Charges'
													
													update #Chargesdetail set USECDX=-1*@staxonclearingchrg
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Clearing Charges'
													
													update #Chargesdetail set USECDX=-1*@sebifee
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Sebi Fee'
													
													update #Chargesdetail set USECDX=-1*@stampduty
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Stamp duty'
													
													update #Chargesdetail set USECDX=-1*@Roundoff
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Round Off'
													
												End	
													
													
													
										End
										--
									Else
										Begin
											
											if(@exchangename+@segmentname='NSECM')
												Begin
												
													insert into #Chargesdetail(Clientid,Chargesfield,NSECM)
													select distinct @Clientidwithinloop,@parametername,Nsecmoblgation
													from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and @parametername='PAY IN/ PAY OUT OBLIGATION'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSECM)
													select distinct @Clientidwithinloop,@parametername,-1*@stt
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Securities  Transaction Tax'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSECM)
													select distinct @Clientidwithinloop,@parametername,-1*@staxonbrkg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Brokerage'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSECM)
													select distinct @Clientidwithinloop,@parametername,-1*@tranchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Transaction Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSECM)
													select distinct @Clientidwithinloop,@parametername,-1*@staxontrncheg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Transaction Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSECM)
													select distinct @Clientidwithinloop,@parametername,-1*@clearingchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Clearing Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSECM)
													select distinct @Clientidwithinloop,@parametername,-1*@staxonclearingchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Clearing Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSECM)
													select distinct @Clientidwithinloop,@parametername,-1*@sebifee
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Sebi Fee'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSECM)
													select distinct @Clientidwithinloop,@parametername,-1*@stampduty
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Stamp Duty'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSECM)
													select distinct @Clientidwithinloop,@parametername,-1*@Roundoff
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Round Off'
												End
											
											if(@exchangename+@segmentname='NSEFO')
												Begin
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSEFO)
													select distinct @Clientidwithinloop,@parametername,Nsefooblgation
													from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and @parametername='PAY IN/ PAY OUT OBLIGATION'
													insert into #Chargesdetail(Clientid,Chargesfield,NSEFO)
													select distinct @Clientidwithinloop,@parametername,-1*@stt
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Securities  Transaction Tax'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSEFO)
													select distinct @Clientidwithinloop,@parametername,-1*@staxonbrkg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Brokerage'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSEFO)
													select distinct @Clientidwithinloop,@parametername,-1*@tranchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Transaction Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSEFO)
													select distinct @Clientidwithinloop,@parametername,-1*@staxontrncheg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Transaction Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSEFO)
													select distinct @Clientidwithinloop,@parametername,-1*@clearingchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Clearing Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSEFO)
													select distinct @Clientidwithinloop,@parametername,-1*@staxonclearingchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Clearing Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSEFO)
													select distinct @Clientidwithinloop,@parametername,-1*@sebifee
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Sebi Fee'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSEFO)
													select distinct @Clientidwithinloop,@parametername,-1*@stampduty
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Stamp Duty'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSEFO)
													select distinct @Clientidwithinloop,@parametername,-1*@Roundoff
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Round Off'
												End
											
											if(@exchangename+@segmentname='NSECDX')
												Begin
												
													insert into #Chargesdetail(Clientid,Chargesfield,NSECDX)
													select distinct @Clientidwithinloop,@parametername,Nsecdxoblgation
													from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and @parametername='PAY IN/ PAY OUT OBLIGATION'
													insert into #Chargesdetail(Clientid,Chargesfield,NSECDX)
													select distinct @Clientidwithinloop,@parametername,-1*@stt
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Securities  Transaction Tax'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSECDX)
													select distinct @Clientidwithinloop,@parametername,-1*@staxonbrkg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Brokerage'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSECDX)
													select distinct @Clientidwithinloop,@parametername,-1*@tranchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Transaction Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSECDX)
													select distinct @Clientidwithinloop,@parametername,-1*@staxontrncheg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Transaction Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSECDX)
													select distinct @Clientidwithinloop,@parametername,-1*@clearingchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Clearing Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSECDX)
													select distinct @Clientidwithinloop,@parametername,-1*@staxonclearingchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Clearing Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSECDX)
													select distinct @Clientidwithinloop,@parametername,-1*@sebifee
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Sebi Fee'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSECDX)
													select distinct @Clientidwithinloop,@parametername,-1*@stampduty
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Stamp Duty'
													
													insert into #Chargesdetail(Clientid,Chargesfield,NSECDX)
													select distinct @Clientidwithinloop,@parametername,-1*@Roundoff
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Round Off'
												End		
												
											if(@exchangename+@segmentname='BSECM')
												Begin
													insert into #Chargesdetail(Clientid,Chargesfield,BSECM)
													select distinct @Clientidwithinloop,@parametername,Bsecmoblgation
													from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and @parametername='PAY IN/ PAY OUT OBLIGATION'
													insert into #Chargesdetail(Clientid,Chargesfield,BSECM)
													select distinct @Clientidwithinloop,@parametername,-1*@stt
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Securities  Transaction Tax'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSECM)
													select distinct @Clientidwithinloop,@parametername,-1*@staxonbrkg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Brokerage'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSECM)
													select distinct @Clientidwithinloop,@parametername,-1*@tranchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Transaction Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSECM)
													select distinct @Clientidwithinloop,@parametername,-1*@staxontrncheg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Transaction Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSECM)
													select distinct @Clientidwithinloop,@parametername,-1*@clearingchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Clearing Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSECM)
													select distinct @Clientidwithinloop,@parametername,-1*@staxonclearingchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Clearing Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSECM)
													select distinct @Clientidwithinloop,@parametername,-1*@sebifee
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Sebi Fee'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSECM)
													select distinct @Clientidwithinloop,@parametername,-1*@stampduty
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Stamp Duty'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSECM)
													select distinct @Clientidwithinloop,@parametername,-1*@Roundoff
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Round Off'
												
												End
											
											
											if(@exchangename+@segmentname='BSEFO')
												Begin
													insert into #Chargesdetail(Clientid,Chargesfield,BSEFO)
													select distinct @Clientidwithinloop,@parametername,Bsefooblgation
													from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and @parametername='PAY IN/ PAY OUT OBLIGATION'
													insert into #Chargesdetail(Clientid,Chargesfield,BSEFO)
													select distinct @Clientidwithinloop,@parametername,-1*@stt
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Securities  Transaction Tax'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSEFO)
													select distinct @Clientidwithinloop,@parametername,-1*@staxonbrkg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Brokerage'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSEFO)
													select distinct @Clientidwithinloop,@parametername,-1*@tranchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Transaction Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSEFO)
													select distinct @Clientidwithinloop,@parametername,-1*@staxontrncheg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Transaction Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSEFO)
													select distinct @Clientidwithinloop,@parametername,-1*@clearingchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Clearing Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSEFO)
													select distinct @Clientidwithinloop,@parametername,-1*@staxonclearingchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Clearing Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSEFO)
													select distinct @Clientidwithinloop,@parametername,-1*@sebifee
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Sebi Fee'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSEFO)
													select distinct @Clientidwithinloop,@parametername,-1*@stampduty
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Stamp Duty'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSEFO)
													select distinct @Clientidwithinloop,@parametername,-1*@Roundoff
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Round Off'
												
												End
											
											if(@exchangename+@segmentname='BSECDX')
												Begin
													insert into #Chargesdetail(Clientid,Chargesfield,BSECDX)
													select distinct @Clientidwithinloop,@parametername,Bsecdxoblgation
													from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and @parametername='PAY IN/ PAY OUT OBLIGATION'
													insert into #Chargesdetail(Clientid,Chargesfield,BSECDX)
													select distinct @Clientidwithinloop,@parametername,-1*@stt
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Securities  Transaction Tax'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSECDX)
													select distinct @Clientidwithinloop,@parametername,-1*@staxonbrkg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Brokerage'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSECDX)
													select distinct @Clientidwithinloop,@parametername,-1*@tranchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Transaction Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSECDX)
													select distinct @Clientidwithinloop,@parametername,-1*@staxontrncheg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Transaction Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSECDX)
													select distinct @Clientidwithinloop,@parametername,-1*@clearingchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Clearing Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSECDX)
													select distinct @Clientidwithinloop,@parametername,-1*@staxonclearingchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Clearing Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSECDX)
													select distinct @Clientidwithinloop,@parametername,-1*@sebifee
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Sebi Fee'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSECDX)
													select distinct @Clientidwithinloop,@parametername,-1*@stampduty
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Stamp Duty'
													
													insert into #Chargesdetail(Clientid,Chargesfield,BSECDX)
													select distinct @Clientidwithinloop,@parametername,-1*@Roundoff
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Round Off'
												
												End	
											
											
											------------mcxsx------------
											if(@exchangename+@segmentname='mcxsxCM')
												Begin
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxCM)
													select distinct @Clientidwithinloop,@parametername,mcxsxcmoblgation
													from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and @parametername='PAY IN/ PAY OUT OBLIGATION'
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxCM)
													select distinct @Clientidwithinloop,@parametername,-1*@stt
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Securities  Transaction Tax'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxCM)
													select distinct @Clientidwithinloop,@parametername,-1*@staxonbrkg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Brokerage'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxCM)
													select distinct @Clientidwithinloop,@parametername,-1*@tranchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Transaction Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxCM)
													select distinct @Clientidwithinloop,@parametername,-1*@staxontrncheg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Transaction Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxCM)
													select distinct @Clientidwithinloop,@parametername,-1*@clearingchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Clearing Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxCM)
													select distinct @Clientidwithinloop,@parametername,-1*@staxonclearingchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Clearing Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxCM)
													select distinct @Clientidwithinloop,@parametername,-1*@sebifee
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Sebi Fee'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxCM)
													select distinct @Clientidwithinloop,@parametername,-1*@stampduty
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Stamp Duty'
													
													insert into #Chargesdetail(Clientid,Chargesfield,MCXSXCM)
													select distinct @Clientidwithinloop,@parametername,-1*@Roundoff
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Round Off'
												
												End
											
											
											if(@exchangename+@segmentname='mcxsxFO')
												Begin
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxFO)
													select distinct @Clientidwithinloop,@parametername,mcxsxfooblgation
													from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and @parametername='PAY IN/ PAY OUT OBLIGATION'
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxFO)
													select distinct @Clientidwithinloop,@parametername,-1*@stt
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Securities  Transaction Tax'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxFO)
													select distinct @Clientidwithinloop,@parametername,-1*@staxonbrkg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Brokerage'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxFO)
													select distinct @Clientidwithinloop,@parametername,-1*@tranchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Transaction Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxFO)
													select distinct @Clientidwithinloop,@parametername,-1*@staxontrncheg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Transaction Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxFO)
													select distinct @Clientidwithinloop,@parametername,-1*@clearingchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Clearing Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxFO)
													select distinct @Clientidwithinloop,@parametername,-1*@staxonclearingchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Clearing Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxFO)
													select distinct @Clientidwithinloop,@parametername,-1*@sebifee
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Sebi Fee'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxFO)
													select distinct @Clientidwithinloop,@parametername,-1*@stampduty
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Stamp Duty'
													
													insert into #Chargesdetail(Clientid,Chargesfield,MCXSXFO)
													select distinct @Clientidwithinloop,@parametername,-1*@Roundoff
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Round Off'
												
												End
											
											if(@exchangename+@segmentname='mcxsxCDX')
												Begin
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxCDX)
													select distinct @Clientidwithinloop,@parametername,mcxsxcdxoblgation
													from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and @parametername='PAY IN/ PAY OUT OBLIGATION'
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxCDX)
													select distinct @Clientidwithinloop,@parametername,-1*@stt
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Securities  Transaction Tax'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxCDX)
													select distinct @Clientidwithinloop,@parametername,-1*@staxonbrkg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Brokerage'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxCDX)
													select distinct @Clientidwithinloop,@parametername,-1*@tranchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Transaction Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxCDX)
													select distinct @Clientidwithinloop,@parametername,-1*@staxontrncheg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Transaction Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxCDX)
													select distinct @Clientidwithinloop,@parametername,-1*@clearingchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Clearing Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxCDX)
													select distinct @Clientidwithinloop,@parametername,-1*@staxonclearingchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Clearing Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxCDX)
													select distinct @Clientidwithinloop,@parametername,-1*@sebifee
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Sebi Fee'
													
													insert into #Chargesdetail(Clientid,Chargesfield,mcxsxCDX)
													select distinct @Clientidwithinloop,@parametername,-1*@stampduty
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Stamp Duty'
													
													insert into #Chargesdetail(Clientid,Chargesfield,MCXSXCDX)
													select distinct @Clientidwithinloop,@parametername,-1*@Roundoff
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Round Off'
												
												End		
												
												
											if(@exchangename+@segmentname='useCDX')
												Begin
													insert into #Chargesdetail(Clientid,Chargesfield,useCDX)
													select distinct @Clientidwithinloop,@parametername,usecdxoblgation
													from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and @parametername='PAY IN/ PAY OUT OBLIGATION'
													insert into #Chargesdetail(Clientid,Chargesfield,useCDX)
													select distinct @Clientidwithinloop,@parametername,-1*@stt
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Securities  Transaction Tax'
													
													insert into #Chargesdetail(Clientid,Chargesfield,useCDX)
													select distinct @Clientidwithinloop,@parametername,-1*@staxonbrkg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Brokerage'
													
													insert into #Chargesdetail(Clientid,Chargesfield,useCDX)
													select distinct @Clientidwithinloop,@parametername,-1*@tranchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Transaction Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,useCDX)
													select distinct @Clientidwithinloop,@parametername,-1*@staxontrncheg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Transaction Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,useCDX)
													select distinct @Clientidwithinloop,@parametername,-1*@clearingchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Clearing Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,useCDX)
													select distinct @Clientidwithinloop,@parametername,-1*@staxonclearingchrg
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Service Tax On Clearing Charges'
													
													insert into #Chargesdetail(Clientid,Chargesfield,useCDX)
													select distinct @Clientidwithinloop,@parametername,-1*@sebifee
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Sebi Fee'
													
													insert into #Chargesdetail(Clientid,Chargesfield,useCDX)
													select distinct @Clientidwithinloop,@parametername,-1*@stampduty
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Stamp Duty'
													
													insert into #Chargesdetail(Clientid,Chargesfield,USECDX)
													select distinct @Clientidwithinloop,@parametername,-1*@Roundoff
													 from #TradeDetailInfo where Clientid=@Clientidwithinloop
													and 
													@parametername='Round Off'
												
												End	
													
													
													
											
										End
									
									

											
												
												
									select @staticchargesid=@staticchargesid+1
									
								End
									
								
								update #Chargesdetail set NETTOTAL= isnull(nsecm,0)+isnull(nsefo,0)+isnull(nsecdx,0)+isnull(bsecm,0)+
													isnull(BSEFO,0)+isnull(BSECDX,0)+isnull(MCXSXCM,0)+isnull(MCXSXFO,0)+
													isnull(MCXSXCDX,0)+isnull(USECDX,0)
													where Clientid=@Clientidwithinloop
													and Chargesfield='PAY IN/ PAY OUT OBLIGATION'
													
													
													update #Chargesdetail set NETTOTAL=(isnull(nsecm,0)+isnull(nsefo,0)+isnull(nsecdx,0)+isnull(bsecm,0)+
													isnull(BSEFO,0)+isnull(BSECDX,0)+isnull(MCXSXCM,0)+isnull(MCXSXFO,0)+
													isnull(MCXSXCDX,0)+isnull(USECDX,0))
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Securities  Transaction Tax'
													
													update #Chargesdetail set NETTOTAL=isnull(nsecm,0)+isnull(nsefo,0)+isnull(nsecdx,0)+isnull(bsecm,0)+
													isnull(BSEFO,0)+isnull(BSECDX,0)+isnull(MCXSXCM,0)+isnull(MCXSXFO,0)+
													isnull(MCXSXCDX,0)+isnull(USECDX,0)
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Brokerage'
													
													update #Chargesdetail set NETTOTAL=isnull(nsecm,0)+isnull(nsefo,0)+isnull(nsecdx,0)+isnull(bsecm,0)+
													isnull(BSEFO,0)+isnull(BSECDX,0)+isnull(MCXSXCM,0)+isnull(MCXSXFO,0)+
													isnull(MCXSXCDX,0)+isnull(USECDX,0)
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Transaction Charges'
													
													update #Chargesdetail set NETTOTAL=isnull(nsecm,0)+isnull(nsefo,0)+isnull(nsecdx,0)+isnull(bsecm,0)+
													isnull(BSEFO,0)+isnull(BSECDX,0)+isnull(MCXSXCM,0)+isnull(MCXSXFO,0)+
													isnull(MCXSXCDX,0)+isnull(USECDX,0)
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Transaction Charges'
													
													update #Chargesdetail set NETTOTAL=isnull(nsecm,0)+isnull(nsefo,0)+isnull(nsecdx,0)+isnull(bsecm,0)+
													isnull(BSEFO,0)+isnull(BSECDX,0)+isnull(MCXSXCM,0)+isnull(MCXSXFO,0)+
													isnull(MCXSXCDX,0)+isnull(USECDX,0)
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Clearing Charges'
													
													update #Chargesdetail set NETTOTAL=isnull(nsecm,0)+isnull(nsefo,0)+isnull(nsecdx,0)+isnull(bsecm,0)+
													isnull(BSEFO,0)+isnull(BSECDX,0)+isnull(MCXSXCM,0)+isnull(MCXSXFO,0)+
													isnull(MCXSXCDX,0)+isnull(USECDX,0)
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Service Tax On Clearing Charges'
													
													update #Chargesdetail set NETTOTAL=isnull(nsecm,0)+isnull(nsefo,0)+isnull(nsecdx,0)+isnull(bsecm,0)+
													isnull(BSEFO,0)+isnull(BSECDX,0)+isnull(MCXSXCM,0)+isnull(MCXSXFO,0)+
													isnull(MCXSXCDX,0)+isnull(USECDX,0)
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Sebi Fee'
													
													update #Chargesdetail set NETTOTAL=isnull(nsecm,0)+isnull(nsefo,0)+isnull(nsecdx,0)+isnull(bsecm,0)+
													isnull(BSEFO,0)+isnull(BSECDX,0)+isnull(MCXSXCM,0)+isnull(MCXSXFO,0)+
													isnull(MCXSXCDX,0)+isnull(USECDX,0)
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Stamp duty'
													
													update #Chargesdetail set NETTOTAL=isnull(nsecm,0)+isnull(nsefo,0)+isnull(nsecdx,0)+isnull(bsecm,0)+
													isnull(BSEFO,0)+isnull(BSECDX,0)+isnull(MCXSXCM,0)+isnull(MCXSXFO,0)+
													isnull(MCXSXCDX,0)+isnull(USECDX,0)
													where #Chargesdetail.Clientid=@Clientidwithinloop
													and Chargesfield='Round Off'
													
								if not exists(select * from #Chargesdetail where Clientid=@Clientidwithinloop
											and Chargesfield='net total')
									Begin
										
										insert into #Chargesdetail
											select @Clientidwithinloop,'net total',SUM(isnull(NSECM,0)),
											SUM(NSEFO),SUM(NSECDX),SUM(BSECM),SUM(BSEFO),
											SUM(BSECDX),SUM(MCXSXCM),SUM(MCXSXFO),SUM(MCXSXCDX),SUM(USECDX),
											SUM(NETTOTAL) from #Chargesdetail
											where Clientid=@Clientidwithinloop
											group by Clientid
									End
								else
									Begin
										declare @nsecmsumm numeric(18,2),@nsefosumm numeric(18,2),@nsecdxsumm numeric(18,2),@bsecmsumm numeric(18,2),
										@bsefosumm numeric(18,2),@bsecdxsumm numeric(18,2),@mcxsxcmsumm numeric(18,2),@mcxsxfosumm numeric(18,2),
										@mcxsxcdxsumm numeric(18,2),@usccdxsumm numeric(18,2),@nettotal numeric(18,2)
										
										select @nettotal=(select SUM(isnull(NETTOTAL,0))
												 from #Chargesdetail where Chargesfield in ('Stamp duty','Sebi Fee','Service Tax On Clearing Charges'
												,'Clearing Charges','Service Tax On Transaction Charges','Transaction Charges',
												'Service Tax On Brokerage','Securities  Transaction Tax','PAY IN/ PAY OUT OBLIGATION',
												'Round Off')
													and Clientid=@Clientidwithinloop
													group by Clientid)
										select @nsecmsumm=(select SUM(isnull(NSECM,0))
												 from #Chargesdetail where Chargesfield in ('Stamp duty','Sebi Fee','Service Tax On Clearing Charges'
												,'Clearing Charges','Service Tax On Transaction Charges','Transaction Charges',
												'Service Tax On Brokerage','Securities  Transaction Tax','PAY IN/ PAY OUT OBLIGATION',
												'Round Off')
													and Clientid=@Clientidwithinloop
													group by Clientid)
										select @nsefosumm=(select SUM(isnull(NSEFO,0))
												 from #Chargesdetail where Chargesfield in ('Stamp duty','Sebi Fee','Service Tax On Clearing Charges'
												,'Clearing Charges','Service Tax On Transaction Charges','Transaction Charges',
												'Service Tax On Brokerage','Securities  Transaction Tax','PAY IN/ PAY OUT OBLIGATION',
												'Round Off')
													and Clientid=@Clientidwithinloop
													group by Clientid)
										select @nsecdxsumm=(select SUM(isnull(NSECDX,0))
												 from #Chargesdetail where Chargesfield in ('Stamp duty','Sebi Fee','Service Tax On Clearing Charges'
												,'Clearing Charges','Service Tax On Transaction Charges','Transaction Charges',
												'Service Tax On Brokerage','Securities  Transaction Tax','PAY IN/ PAY OUT OBLIGATION',
												'Round Off')
													and Clientid=@Clientidwithinloop
													group by Clientid)
										select @bsecmsumm=(select SUM(isnull(BSECM,0))
												 from #Chargesdetail where Chargesfield in ('Stamp duty','Sebi Fee','Service Tax On Clearing Charges'
												,'Clearing Charges','Service Tax On Transaction Charges','Transaction Charges',
												'Service Tax On Brokerage','Securities  Transaction Tax','PAY IN/ PAY OUT OBLIGATION',
												'Round Off')
													and Clientid=@Clientidwithinloop
													group by Clientid)
										select @bsefosumm=(select SUM(isnull(BSEFO,0))
												 from #Chargesdetail where Chargesfield in ('Stamp duty','Sebi Fee','Service Tax On Clearing Charges'
												,'Clearing Charges','Service Tax On Transaction Charges','Transaction Charges',
												'Service Tax On Brokerage','Securities  Transaction Tax','PAY IN/ PAY OUT OBLIGATION',
												'Round Off')
													and Clientid=@Clientidwithinloop
													group by Clientid)
										select @bsecdxsumm=(select SUM(isnull(BSECDX,0))
												 from #Chargesdetail where Chargesfield in ('Stamp duty','Sebi Fee','Service Tax On Clearing Charges'
												,'Clearing Charges','Service Tax On Transaction Charges','Transaction Charges',
												'Service Tax On Brokerage','Securities  Transaction Tax','PAY IN/ PAY OUT OBLIGATION',
												'Round Off')
													and Clientid=@Clientidwithinloop
													group by Clientid)
										select @mcxsxcmsumm=(select SUM(isnull(MCXSXCM,0))
												 from #Chargesdetail where Chargesfield in ('Stamp duty','Sebi Fee','Service Tax On Clearing Charges'
												,'Clearing Charges','Service Tax On Transaction Charges','Transaction Charges',
												'Service Tax On Brokerage','Securities  Transaction Tax','PAY IN/ PAY OUT OBLIGATION',
												'Round Off')
													and Clientid=@Clientidwithinloop
													group by Clientid)
										select @mcxsxfosumm=(select SUM(isnull(MCXSXFO,0))
												 from #Chargesdetail where Chargesfield in ('Stamp duty','Sebi Fee','Service Tax On Clearing Charges'
												,'Clearing Charges','Service Tax On Transaction Charges','Transaction Charges',
												'Service Tax On Brokerage','Securities  Transaction Tax','PAY IN/ PAY OUT OBLIGATION',
												'Round Off')
													and Clientid=@Clientidwithinloop
													group by Clientid)
										select @mcxsxcdxsumm=(select SUM(isnull(MCXSXCDX,0))
												 from #Chargesdetail where Chargesfield in ('Stamp duty','Sebi Fee','Service Tax On Clearing Charges'
												,'Clearing Charges','Service Tax On Transaction Charges','Transaction Charges',
												'Service Tax On Brokerage','Securities  Transaction Tax','PAY IN/ PAY OUT OBLIGATION',
												'Round Off')
													and Clientid=@Clientidwithinloop
													group by Clientid)
										select @usccdxsumm=(select SUM(isnull(USECDX,0))
												 from #Chargesdetail where Chargesfield in ('Stamp duty','Sebi Fee','Service Tax On Clearing Charges'
												,'Clearing Charges','Service Tax On Transaction Charges','Transaction Charges',
												'Service Tax On Brokerage','Securities  Transaction Tax','PAY IN/ PAY OUT OBLIGATION',
												'Round Off')
													and Clientid=@Clientidwithinloop
													group by Clientid)
												
												update #Chargesdetail 
												set NSECM=@nsecmsumm,NSEFO=@nsefosumm,NSECDX=@nsecdxsumm,BSECM=@bsecmsumm,
												BSEFO=@bsefosumm,BSECDX=@bsecdxsumm,MCXSXCM=@mcxsxcmsumm,MCXSXFO=@mcxsxfosumm,
												MCXSXCDX=@mcxsxcdxsumm,USECDX=@usccdxsumm,NETTOTAL=@nettotal where Chargesfield ='net total'
												and Clientid=@Clientidwithinloop
												
												
												
									
									End
							Select @localstatic=@localstatic+1
							
						End
						
					Declare @AllContract varchar(max),@EcnEnableContract varchar(max),@AllreadyDeliver varchar(max),
					@RemainingEcn varchar(max),@ecnenablecontractforpage varchar(max)
					
					select @AllContract=coalesce(@AllContract+''',''', '') + Convert(varchar,Clientid) from 
					(Select Distinct Clientid from #TradeDetailInfo)rr
					set @AllContract=''''+@AllContract+''''
					
					
					--select @AllContract
						  
					--select * from #TradeDetailInfo order by Clientid,#TradeDetailInfo.Segment,#TradeDetailInfo.Exchange,ProductserirsId,id
					--select COUNT(*)From tempdb.Information_Schema.COLUMNS where TABLE_NAME like '%#TradeDetailInfo%'
					if(@ReportType<>'Dos')
						Begin
							if(@OnlyContractnote='True')
										Begin
											
											Delete from #TradeDetailInfo where 
											Clientid not in (select distinct Clientid from #TradeDetailInfo where
											contractnoteno is not null)
										End
							select *,cast(@Tradedate as datetime) as tradedatecast,@AllContract as Allcontract from #TradeDetailInfo 
							order by Clientid,contractnoteno,Segment,Exchange,tradedatecast,settno,ProductserirsId,id,ordertime--,settno
							
							insert into #distinctsettclientecn
							select distinct ClientName+' [ '+Clientucc+' ]',Clientid,@Tradedate,@company,@Finyear,
							case when Clientdeliverytype='B' then 'Both' when Clientdeliverytype='P' then 'Print' when Clientdeliverytype='E' then 'Only ECN' end
							,clientemail,clientemailtype  from #TradeDetailInfo
							
							
							
							------------Total No of Contract------------- Table 1
							select ROW_NUMBER() OVER(ORDER By Clientnameucc) as SrlNo,Clientnameucc,Email,Contractdeliverymode,EmailType from #distinctsettclientecn
							------------Total No of Contract-------------
							------------ECN Enable Contract-------------Table 2
							select @EcnEnableContract=coalesce(@EcnEnableContract+',', '') + Convert(varchar,Clientid) from 
							(Select Distinct clientid from #distinctsettclientecn
							where ISNULL(Email,'')<>'' and ISNULL(Contractdeliverymode,'Both')<>'Print' and ISNULL(EmailType,'')='Official')rr
							--set @EcnEnableContract=''''+@EcnEnableContract+''''
							
							select @ecnenablecontractforpage=coalesce(@ecnenablecontractforpage+''',''', '') + Convert(varchar,Clientid) from 
							(Select Distinct clientid from #distinctsettclientecn
							where ISNULL(Email,'')<>'' and ISNULL(Contractdeliverymode,'Both')<>'Print' and ISNULL(EmailType,'')='Official')rr
							set @ecnenablecontractforpage=''''+@ecnenablecontractforpage+''''
							
							select ROW_NUMBER() OVER(ORDER By Clientnameucc) as SrlNo,Clientnameucc,Email,Contractdeliverymode,EmailType,
							@EcnEnableContract as EcnEnableContract,@ecnenablecontractforpage as ecnenablecontractforpage from #distinctsettclientecn
							where ISNULL(Email,'')<>'' and ISNULL(Contractdeliverymode,'Both')<>'Print' and ISNULL(EmailType,'')='Official'
							
							
							
							------------ECN Enable Contract-------------
							------------Allready Deliver Contract-------------Table 3
							select @AllreadyDeliver=coalesce(@AllreadyDeliver+''',''', '') + Convert(varchar,ContractnotesCombined_CustomerID) from 
							(Select Distinct ContractnotesCombined_CustomerID from trans_ContractnotesCombined
							where  ContractnotesCombined_Company=@company
							and ContractnotesCombined_Finyear=@Finyear
							and ContractnotesCombined_Tradedate=@Tradedate)rr
							
							set @AllreadyDeliver=''''+@AllreadyDeliver+''''
							
							select distinct clientid --ROW_NUMBER() OVER(ORDER By ContractnotesCombined_customerid) as SrlNo,
							--ISNULL(cnt_firstName,'')+' '+ISNULL(cnt_middleName,'')+' '+ISNULL(cnt_lastName,'')+' [ '+ISNULL(cnt_UCC,'')+' ]'
							--as ClientName
							,@AllreadyDeliver as AllreadyDeliver from trans_ContractnotesCombined,#TradeDetailInfo
							where --cnt_internalId=ContractnotesCombined_CustomerID
							--and 
							ContractnotesCombined_Company=@company
							and ContractnotesCombined_Finyear=@Finyear
							and ContractnotesCombined_Tradedate=@Tradedate
							and Clientid=ContractnotesCombined_CustomerID
							--and Clientid=cnt_internalId
							--and cnt_internalId=ContractnotesCombined_CustomerID
							
							------------Allready Deliver Contract-------------
							------------Remaining Contract (To be Send)-------------Table 4
							if OBJECT_ID('tempdb..#RemainingEcn') is not null
							drop table #RemainingEcn
							Create Table #RemainingEcn (Clientid varchar(20),Srlno int,Clientname varchar(500),Email varchar(500),
							mode varchar(10),EmailType varchar(50))
							insert into #RemainingEcn(Clientid)
							select clientid--,ROW_NUMBER() OVER(ORDER By clientid) as SrlNo,
							--Clientnameucc,Email,Contractdeliverymode,EmailType 
							from #distinctsettclientecn
							where ISNULL(Email,'')<>'' and ISNULL(Contractdeliverymode,'Both')<>'Print' and ISNULL(EmailType,'')='Official'
							except
							select ContractnotesCombined_CustomerID--,'','','','','' 
							from Trans_ContractnotesCombined,#TradeDetailInfo
							where ContractnotesCombined_Company=@company
							and ContractnotesCombined_Finyear=@Finyear
							and ContractnotesCombined_Tradedate=@Tradedate
							and Clientid=ContractnotesCombined_CustomerID
							
							select @RemainingEcn=coalesce(@RemainingEcn+',', '') + Convert(varchar,Clientid) from 
							(Select Distinct Clientid from #RemainingEcn)rr
							
							set @RemainingEcn=''''+@RemainingEcn+''''
							select *,@RemainingEcn as RemainingEcn from #RemainingEcn
							Drop table #RemainingEcn
							------------Remaining Contract (To be Send)-------------
							-------------------------------------
							update #Chargesdetail set Chargesfield='Net amount Receivable/Payable By Client'
							where Chargesfield='net total'
							select * from #Chargesdetail--,#TradeDetailInfo 
						End
					Else
						Begin
							
								
								Declare @obligation numeric(18,2),@sttdos numeric(18,2),@staxonbrkgdos numeric(18,2),
								@tranchrgdos numeric(18,2),@staxontranchrgdos numeric(18,2),@clearingchrgdos numeric(18,2),
								@staxonclearingchrgdos numeric(18,2),@sebifeedos numeric(18,2),@stampdutydos numeric(18,2),
								@roundoffdos numeric(18,2),@nettotaldos numeric(18,2)
								create table #distinctclient(autoid int identity,clientid varchar(20))
								insert into #distinctclient
								select distinct Clientid from #Chargesdetail
								
								select @cntrstaticloop=MAX(autoid) from  #distinctclient 
								select @cntrdynamicloop=1
								while(@cntrdynamicloop<=@cntrstaticloop)
									Begin
										select @Clientidwithinloop=clientid from #distinctclient where autoid=@cntrdynamicloop
										
									if(@OnlyContractnote='True')
										Begin
											
											Delete from #TradeDetailInfo where 
											Clientid not in (select distinct Clientid from #TradeDetailInfo where
											contractnoteno is not null)
										End
										
										select @obligation=ISNULL(NSECM,0)+ISNULL(NSEFO,0)+ISNULL(NSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='PAY IN/ PAY OUT OBLIGATION'
										
										update #TradeDetailInfo set Nseobligation=@obligation
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @obligation=ISNULL(BSECM,0)+ISNULL(BSEFO,0)+ISNULL(BSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='PAY IN/ PAY OUT OBLIGATION'
										
										update #TradeDetailInfo set Bseobigation=@obligation
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @obligation=ISNULL(MCXSXCM,0)+ISNULL(MCXSXFO,0)+ISNULL(MCXSXCDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='PAY IN/ PAY OUT OBLIGATION'
										
										update #TradeDetailInfo set Mcxsxobligation=@obligation
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @obligation=ISNULL(USECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='PAY IN/ PAY OUT OBLIGATION'
										
										update #TradeDetailInfo set Otherobligation=@obligation
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										--------obligation end and stt start-------
										select @sttdos=ISNULL(NSECM,0)+ISNULL(NSEFO,0)+ISNULL(NSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Securities  Transaction Tax'
										
										update #TradeDetailInfo set NseStt=@sttdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @sttdos=ISNULL(BSECM,0)+ISNULL(BSEFO,0)+ISNULL(BSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Securities  Transaction Tax'
										
										update #TradeDetailInfo set BseStt=@sttdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										
										select @sttdos=ISNULL(MCXSXCM,0)+ISNULL(MCXSXFO,0)+ISNULL(MCXSXCDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Securities  Transaction Tax'
										
										update #TradeDetailInfo set Mcxsxstt=@sttdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @sttdos=ISNULL(USECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Securities  Transaction Tax'
										
										update #TradeDetailInfo set otherstt=@sttdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										--------stt end and stax on brkg start-------
										select @staxonbrkgdos=ISNULL(NSECM,0)+ISNULL(NSEFO,0)+ISNULL(NSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Service Tax On Brokerage'
										
										update #TradeDetailInfo set Nsestaxonbrkg=@staxonbrkgdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @staxonbrkgdos=ISNULL(BSECM,0)+ISNULL(BSEFO,0)+ISNULL(BSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Service Tax On Brokerage'
										
										update #TradeDetailInfo set Bsestaxonbrkg=@staxonbrkgdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @staxonbrkgdos=ISNULL(MCXSXCM,0)+ISNULL(MCXSXFO,0)+ISNULL(MCXSXCDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Service Tax On Brokerage'
										
										update #TradeDetailInfo set Mcxsxstaxonbrkg=@staxonbrkgdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @staxonbrkgdos=ISNULL(USECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Service Tax On Brokerage'
										
										update #TradeDetailInfo set Otherstaxonbrkg=@staxonbrkgdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										--------stax on brkg end and tran charge start-------
										
										select @tranchrgdos=ISNULL(NSECM,0)+ISNULL(NSEFO,0)+ISNULL(NSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Transaction Charges'
										
										update #TradeDetailInfo set Nsetranchrg=@tranchrgdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @tranchrgdos=ISNULL(BSECM,0)+ISNULL(BSEFO,0)+ISNULL(BSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Transaction Charges'
										
										update #TradeDetailInfo set Bsetranchrg=@tranchrgdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @tranchrgdos=ISNULL(MCXSXCM,0)+ISNULL(MCXSXFO,0)+ISNULL(MCXSXCDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Transaction Charges'
										
										update #TradeDetailInfo set Mcxsxtranchrg=@tranchrgdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @tranchrgdos=ISNULL(USECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Transaction Charges'
										
										update #TradeDetailInfo set othertranchrg=@tranchrgdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										--------tran charge end and Service Tax On Transaction Charges start-------
										select @staxontranchrgdos=ISNULL(NSECM,0)+ISNULL(NSEFO,0)+ISNULL(NSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Service Tax On Transaction Charges'
										
										update #TradeDetailInfo set Nsestaxontranchrg=@staxontranchrgdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @staxontranchrgdos=ISNULL(BSECM,0)+ISNULL(BSEFO,0)+ISNULL(BSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Service Tax On Transaction Charges'
										
										update #TradeDetailInfo set Bsestaxontranchrg=@staxontranchrgdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @staxontranchrgdos=ISNULL(MCXSXCM,0)+ISNULL(MCXSXFO,0)+ISNULL(MCXSXCDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Service Tax On Transaction Charges'
										
										update #TradeDetailInfo set Mcxsxstaxontranchrg=@staxontranchrgdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @staxontranchrgdos=ISNULL(USECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Service Tax On Transaction Charges'
										
										update #TradeDetailInfo set Otherstaxontranchrg=@staxontranchrgdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										--------Service Tax On Transaction Charges end and Clearing Charges start-------
										
										select @clearingchrgdos=ISNULL(NSECM,0)+ISNULL(NSEFO,0)+ISNULL(NSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Clearing Charges'
										
										update #TradeDetailInfo set Nseclearingchrg=@clearingchrgdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @clearingchrgdos=ISNULL(BSECM,0)+ISNULL(BSEFO,0)+ISNULL(BSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Clearing Charges'
										
										update #TradeDetailInfo set Bseclearingchrg=@clearingchrgdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @clearingchrgdos=ISNULL(MCXSXCM,0)+ISNULL(MCXSXFO,0)+ISNULL(MCXSXCDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Clearing Charges'
										
										update #TradeDetailInfo set Mcxsxclearingchrg=@clearingchrgdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @clearingchrgdos=ISNULL(USECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Clearing Charges'
										
										update #TradeDetailInfo set Otherclearingchrg=@clearingchrgdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										--------Clearing Charges end and Service Tax On Clearing Charges start-------
										
										select @staxonclearingchrgdos=ISNULL(NSECM,0)+ISNULL(NSEFO,0)+ISNULL(NSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Service Tax On Clearing Charges'
										
										update #TradeDetailInfo set Nsestaxonclearingchrg=@staxonclearingchrgdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @staxonclearingchrgdos=ISNULL(BSECM,0)+ISNULL(BSEFO,0)+ISNULL(BSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Service Tax On Clearing Charges'
										
										update #TradeDetailInfo set Bsestaxonclearingchrg=@staxonclearingchrgdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @staxonclearingchrgdos=ISNULL(MCXSXCM,0)+ISNULL(MCXSXFO,0)+ISNULL(MCXSXCDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Service Tax On Clearing Charges'
										
										update #TradeDetailInfo set Mcxsxstaxonclearingchrg=@staxonclearingchrgdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @staxonclearingchrgdos=ISNULL(USECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Service Tax On Clearing Charges'
										
										update #TradeDetailInfo set Otherstaxonclearingchrg=@staxonclearingchrgdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										--------Service Tax On Clearing Charges end and Sebi Fee start-------
										
										select @sebifeedos=ISNULL(NSECM,0)+ISNULL(NSEFO,0)+ISNULL(NSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Sebi Fee'
										
										update #TradeDetailInfo set Nsesebifee=@sebifeedos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @sebifeedos=ISNULL(BSECM,0)+ISNULL(BSEFO,0)+ISNULL(BSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Sebi Fee'
										
										update #TradeDetailInfo set Bsesebifee=@sebifeedos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @sebifeedos=ISNULL(MCXSXCM,0)+ISNULL(MCXSXFO,0)+ISNULL(MCXSXCDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Sebi Fee'
										
										update #TradeDetailInfo set Mcxsxsebifee=@sebifeedos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @sebifeedos=ISNULL(USECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Sebi Fee'
										
										update #TradeDetailInfo set Othersebifee=@sebifeedos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										--------Sebi Fee end and Stamp Duty start-------
										select @stampdutydos=ISNULL(NSECM,0)+ISNULL(NSEFO,0)+ISNULL(NSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Stamp Duty'
										
										update #TradeDetailInfo set Nsestampdutyfee=@stampdutydos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @stampdutydos=ISNULL(BSECM,0)+ISNULL(BSEFO,0)+ISNULL(BSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Stamp Duty'
										
										update #TradeDetailInfo set Bsestampdutyfee=@stampdutydos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @stampdutydos=ISNULL(MCXSXCM,0)+ISNULL(MCXSXFO,0)+ISNULL(MCXSXCDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Stamp Duty'
										
										update #TradeDetailInfo set Mcxsxstampdutyfee=@stampdutydos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @stampdutydos=ISNULL(USECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Stamp Duty'
										
										update #TradeDetailInfo set Otherstampdutyfee=@stampdutydos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										--------Stamp Duty end and Round off start-------
										select @roundoffdos=ISNULL(NSECM,0)+ISNULL(NSEFO,0)+ISNULL(NSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Round Off'
										
										update #TradeDetailInfo set NseRoundofffee=@roundoffdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @roundoffdos=ISNULL(BSECM,0)+ISNULL(BSEFO,0)+ISNULL(BSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Round Off'
										
										update #TradeDetailInfo set BseRoundofffee=@roundoffdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @roundoffdos=ISNULL(MCXSXCM,0)+ISNULL(MCXSXFO,0)+ISNULL(MCXSXCDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Round Off'
										
										update #TradeDetailInfo set McxsxRoundofffee=@roundoffdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @roundoffdos=ISNULL(USECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='Round Off'
										
										update #TradeDetailInfo set OtherRoundofffee=@roundoffdos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										--------Stamp Duty end and net total start-------
										select @nettotaldos=ISNULL(NSECM,0)+ISNULL(NSEFO,0)+ISNULL(NSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='net total'
										
										update #TradeDetailInfo set Nsenettotal=@nettotaldos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @nettotaldos=ISNULL(BSECM,0)+ISNULL(BSEFO,0)+ISNULL(BSECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='net total'
										
										update #TradeDetailInfo set Bsenettotal=@nettotaldos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @nettotaldos=ISNULL(MCXSXCM,0)+ISNULL(MCXSXFO,0)+ISNULL(MCXSXCDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='net total'
										
										update #TradeDetailInfo set Mcxsxnettotal=@nettotaldos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @nettotaldos=ISNULL(USECDX,0) from #Chargesdetail
										where  #Chargesdetail.Clientid=@Clientidwithinloop
										and Chargesfield='net total'
										
										update #TradeDetailInfo set Othernettotal=@nettotaldos
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										
										update #TradeDetailInfo set Totaloblgallseg=ISNULL(cast(Nseobligation as numeric(28,2)),0)+isnull(cast(Bseobigation as numeric(28,2)),0)
										+ISNULL(cast(MCXSXobligation as numeric(28,2)),0)+isnull(cast(Otherobligation as numeric(28,2)),0),
										Totalsttallseg=ISNULL(cast(NseStt as numeric(28,2)),0)+isnull(cast(BseStt as numeric(28,2)),0)
										+ISNULL(cast(Mcxsxstt as numeric(28,2)),0)+isnull(cast(otherstt as numeric(28,2)),0),
										Totalstaxonbrkgallseg=ISNULL(cast(Nsestaxonbrkg as numeric(28,2)),0)+isnull(cast(Bsestaxonbrkg as numeric(28,2)),0)
										+ISNULL(cast(Mcxsxstaxonbrkg as numeric(28,2)),0)+isnull(cast(Otherstaxonbrkg as numeric(28,2)),0),
										Totaltrancgrgallseg=ISNULL(cast(Nsetranchrg as numeric(28,2)),0)+isnull(cast(Bsetranchrg as numeric(28,2)),0)
										+ISNULL(cast(Mcxsxtranchrg as numeric(28,2)),0)+isnull(cast(othertranchrg as numeric(28,2)),0),
										Totalstaxontranchargallseg=ISNULL(cast(Nsestaxontranchrg as numeric(28,2)),0)+isnull(cast(Bsestaxontranchrg as numeric(28,2)),0)
										+ISNULL(cast(Mcxsxstaxontranchrg as numeric(28,2)),0)+isnull(cast(Otherstaxontranchrg as numeric(28,2)),0),
										Totalclearingchrgallseg=ISNULL(cast(Nseclearingchrg as numeric(28,2)),0)+isnull(cast(Bseclearingchrg as numeric(28,2)),0)
										+ISNULL(cast(Mcxsxclearingchrg as numeric(28,2)),0)+isnull(cast(Otherclearingchrg as numeric(28,2)),0),
										Totalstaxonclearingchrgallseg=ISNULL(cast(Nsestaxonclearingchrg as numeric(28,2)),0)+isnull(cast(Bsestaxonclearingchrg as numeric(28,2)),0)
										+ISNULL(cast(Mcxsxstaxonclearingchrg as numeric(28,2)),0)+isnull(cast(Otherstaxonclearingchrg as numeric(28,2)),0),
										Totalsebifeeallseg=ISNULL(cast(Nsesebifee as numeric(28,2)),0)+isnull(cast(Bsesebifee as numeric(28,2)),0)
										+ISNULL(cast(Mcxsxsebifee as numeric(28,2)),0)+isnull(cast(Othersebifee as numeric(28,2)),0),
										 Totalstampdutyallseg=ISNULL(cast(Nsestampdutyfee as numeric(28,2)),0)+isnull(cast(Bsestampdutyfee as numeric(28,2)),0)
										+ISNULL(cast(Mcxsxstampdutyfee as numeric(28,2)),0)+isnull(cast(Otherstampdutyfee as numeric(28,2)),0),
										
										Totalroundoffallseg=ISNULL(cast(NseRoundofffee as numeric(28,2)),0)+isnull(cast(BseRoundofffee as numeric(28,2)),0)
										+ISNULL(cast(McxsxRoundofffee as numeric(28,2)),0)+isnull(cast(OtherRoundofffee as numeric(28,2)),0),
										
										Totalnettotalallseg=ISNULL(cast(Nsenettotal as numeric(28,2)),0)+isnull(cast(Bsenettotal as numeric(28,2)),0)
										+ISNULL(cast(Mcxsxnettotal as numeric(28,2)),0)+isnull(cast(Othernettotal as numeric(28,2)),0)
										where #TradeDetailInfo.clientid=@Clientidwithinloop
										
										select @cntrdynamicloop=@cntrdynamicloop+1
									End
									select *,cast(@Tradedate as datetime) as tradedatecast from #TradeDetailInfo 
									order by Clientid,contractnoteno,Segment,Exchange,tradedatecast,settno,ProductserirsId,id--,settno
							
									--select * from #Chargesdetail
						End
--select * from #TradeDetailInfo order by Clientid,Segment,Exchange,ProductserirsId,id
drop table #clientfetch
drop table #exchangefetch
drop table #TradeDetailInfo
drop table #contractnotedetail
drop table #distinctsettclient
drop table #parameterforcharges
drop table #distinctsettclientecn
drop table #paramvalue
drop table #Chargesdetail
End
