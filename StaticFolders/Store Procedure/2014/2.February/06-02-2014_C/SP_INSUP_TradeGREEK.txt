

ALTER  PROCEDURE [dbo].[SP_INSUP_TradeGREEK]
@ModifyUser	varchar(10)=null,
@ExcSegmt int,
@FilePath varchar(250)=null,
@ExchangeTrades_CompanyID char(10)=null,
@LckTradeDate datetime,
@ExpireDate datetime,
@LockMsg Varchar(250) Output

AS
BEGIN


				declare @ReadFrom as int
				declare @Q as varchar(250)
				declare @P int 
	
			CREATE TABLE  #tmpTrans_TradeGREEK (

				[TradeODIN_TradeNumber] varchar(100) null,
				[TradeODIN_TradeStatus]  varchar(100) null,
				[TradeODIN_SecuritySymbol] varchar(100) NULL,
				[TradeODIN_SecurityType] varchar(100) null,
				[TradeODIN_SecurityCode] varchar(100) NULL,
				[TradeODIN_InstrumentType] varchar(150) null,
				[TradeODIN_MarketType] varchar(100) null,
				[TradeODIN_BookType] varchar(200) null,
				[TradeODIN_CTCLID] varchar(100) null,
				[TradeODIN_BranchID] varchar(100) null,
				[TradeODIN_BuySellIndicator] varchar(100) null,
				[TradeODIN_TradeQuantity] varchar(100) null,
				[TradeODIN_TradePrice] varchar(100) null,
				[TradeODIN_ProClient] varchar(100) null,
				[TradeODIN_ClienUcc] varchar(100) null,
				[TradeODIN_ParticipantCode] varchar(100) null, 
				[TradeODIN_AuctionPartType] varchar(100) null,
				[TradeODIN_AuctionNo] varchar(100) null,
				[TradeODIN_Sett_Period] varchar(100) null,
				[TradeODIN_TradeEntryTime] varchar(100) null,
				[TradeODIN_TradeModifiedTime] varchar(100) null,
				[TradeODIN_OrderNumber] varchar(100) null,
				[TradeODIN_CPID] varchar(100) null,
				[TradeODIN_OrderEntryTime] varchar(100) null,
				)

				set @ReadFrom=1
				
				set @Q='BULK INSERT #tmpTrans_TradeGREEK FROM '+ char(39) + @FilePath + char(39) + ' with (firstrow = ' + convert(varchar,@ReadFrom) + ' , FIELDTERMINATOR = ' + char(39) + ',' + char(39) + ' , ROWTERMINATOR = ' + char(39) + char(10)+ + char(39) +')'
				print @Q
				exec (@Q)


				Declare @UpdateDate DateTime
				Set @UpdateDate=GETDATE()

				alter table #tmpTrans_TradeGREEK
						add  	[TradeODIN_ID] [bigint] IDENTITY(1,1) NOT NULL	,
								[TradeODIN_ProductSeriesID] varchar(100) null,
								[TradeODIN_CustomerID] varchar(10) null,
								[TradeODIN_BrokerID] varchar(10) null
								
				DECLARE @FY VARCHAR(25)  
				DECLARE @SETT_FY VARCHAR(250)
				DECLARE @DTDIFF	int
             
					set @FY=(select Top (1) Convert(varchar(11),[TradeODIN_TradeEntryTime],120) From #tmpTrans_TradeGREEK )

If (cast(@FY as datetime)>=@LckTradeDate and cast(@FY as datetime)<=@ExpireDate)
begin

					-------------------------------------------Financial Year-------------------------------------
					SET @DTDIFF=CAST(MONTH(@FY) AS INT)
					IF(@DTDIFF>=1 AND @DTDIFF<=3)
					BEGIN
						SET @SETT_FY=NULL
						SET @SETT_FY=  CAST((CAST(YEAR(@FY) AS INT)-1) AS VARCHAR(50) )+'-'+CAST(YEAR(@FY) AS VARCHAR(50))
					END
					IF(@DTDIFF>=4 AND @DTDIFF<=12)
					BEGIN
						SET @SETT_FY=NULL
						SET @SETT_FY=  CAST(YEAR(@FY) AS VARCHAR(50))+'-'+CAST((CAST(YEAR(@FY) AS INT)+1) AS VARCHAR(50) )
					END

	---------------------------------Update ProductSeriesID--------------------------------------------

					 UPDATE #tmpTrans_TradeGREEK set [TradeODIN_ProductSeriesID]=Equity_SeriesID
				     from Master_Equity
				     where Equity_TickerSymbol=ltrim(rtrim([TradeODIN_SecuritySymbol])) and Equity_ExchSegmentID=1
				     and Equity_Series=(case when ltrim(rtrim([TradeODIN_SecurityType]))='BE' then 'EQ'
												 when ltrim(rtrim([TradeODIN_SecurityType]))='BL' then 'EQ' 
												 when ltrim(rtrim([TradeODIN_SecurityType]))='IL' then 'EQ' 
												 when ltrim(rtrim([TradeODIN_SecurityType]))='RL' then 'EQ'  
												 when ltrim(rtrim([TradeODIN_SecurityType]))='IS' then 'EQ'  
												 else ltrim(rtrim([TradeODIN_SecurityType])) end)

	--------------------------------------CUSTOMERID---------------------------------------------------
					UPDATE #tmpTrans_TradeGREEK set [TradeODIN_CustomerID]=crg_cntID
					from tbl_master_contactExchange	where crg_tcode=ltrim(rtrim([TradeODIN_ClienUcc]))
					AND crg_exchange='NSE - CM' And crg_company=@ExchangeTrades_CompanyID
	---------------------------------------------------------------------------------------
			
					CREATE TABLE  #tmpTrans_TradeTemp 
						(	
							ExchangeTradesID int,
							Tradedate datetime,
							TradeNumber varchar(100) null,
							OrderNumber varchar(100) null,
							CustomerId varchar(100) null,
							BranchId varchar(100) null,
							CompanyID varchar(100) null,
							Segment varchar(100)null
				)


				insert into #tmpTrans_TradeTemp
				(
					ExchangeTradesID,
					Tradedate ,
					TradeNumber ,
					OrderNumber ,
					CustomerId ,
					BranchId,
					CompanyID ,
					Segment 
				)

				Select 
				ExchangeTrades_ID,
				ExchangeTrades_TradeDate,
				ExchangeTrades_TradeNumber,
				ExchangeTrades_OrderNumber,
				ExchangeTrades_CustomerID,
				ExchangeTrades_BranchID,
				ExchangeTrades_CompanyID,
				ExchangeTrades_Segment

				from
				Trans_ExchangeTrades,#tmpTrans_TradeGREEK
				where
				ExchangeTrades_CompanyID=@ExchangeTrades_CompanyID AND ExchangeTrades_Segment=@ExcSegmt
				AND convert(varchar(10),ExchangeTrades_TradeDate,105)=convert(varchar(10),cast(@FY as datetime),105 )
				AND LTRIM(RTRIM(ExchangeTrades_TradeNumber))=LTRIM(RTRIM([TradeODIN_TradeNumber])) and LTRIM(RTRIM(ExchangeTrades_OrderNumber))=LTRIM(RTRIM([TradeODIN_OrderNumber]))					

-------------------------------------------------------------------------------------
----Delete all unidentified trades from this segment of this date......
		Delete from trans_ExchangeTrades where ExchangeTrades_TradeDate=cast(@FY as datetime)
					and ExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
					and ExchangeTrades_FinYear=@SETT_FY
					and ExchangeTrades_Segment=@ExcSegmt
					and ExchangeTrades_CustTransactionID is NULL
					and (ExchangeTrades_ProductSeriesID is NULL Or ExchangeTrades_CustomerID is NULL)

---------------------------------------------------------------------------
		--------- Update the brokerID in case the terminalD are mapped to a broker -------------------
		Update #tmpTrans_TradeGREEK Set [TradeODIN_BrokerID]=TradingTerminal_BrokerID 
		from Master_TradingTerminal
		where TradingTerminal_CompanyID=@ExchangeTrades_CompanyID
		and TradingTerminal_ExchangeSegmentID=@ExcSegmt
		and ltrim(rtrim(TradingTerminal_TerminalID))=ltrim(rtrim(TradeODIN_CTCLID))

---------------------------Insert into Main Table
insert into Trans_ExchangeTrades
			(ExchangeTrades_FinYear,ExchangeTrades_CompanyID,ExchangeTrades_Segment,ExchangeTrades_BranchID,ExchangeTrades_TerminalID,
			ExchangeTrades_SettlementNumber,ExchangeTrades_SettlementType,ExchangeTrades_TradeDate,ExchangeTrades_TradeNumber,
			ExchangeTrades_TradeStatus,ExchangeTrades_TradeEntryTime,ExchangeTrades_TradeModifyTime,ExchangeTrades_OrderNumber,
			ExchangeTrades_OrderEntryTime,ExchangeTrades_TransactionType,ExchangeTrades_ProCli,ExchangeTrades_CustomerUcc,
			ExchangeTrades_CustodialParticipantCode,ExchangeTrades_CustomerID,ExchangeTrades_SecurityType,
			ExchangeTrades_SecuritySymbol,ExchangeTrades_SecuritySeries,ExchangeTrades_ProductSeriesID,ExchangeTrades_BookType,
			ExchangeTrades_MarketType,ExchangeTrades_CTCLID,ExchangeTrades_ExchangeBranchID,ExchangeTrades_BuySellFlag,
			ExchangeTrades_QuantityLots,ExchangeTrades_UnitPrice,ExchangeTrades_UnitPriceQuantity,ExchangeTrades_MarketValue,
			ExchangeTrades_AuctionPartType,ExchangeTrades_AuctionNumber,ExchangeTrades_SettPeriod,ExchangeTrades_CustodialFlag,
			ExchangeTrades_CreateUser,ExchangeTrades_CreateDateTime,ExchangeTrades_CustodianCode,ExchangeTrades_CounterPartyID,
			ExchangeTrades_LastUpdateDate)

		    select 
			@SETT_FY,
			@ExchangeTrades_CompanyID,
			@ExcSegmt,
			(select cnt_branchid from tbl_master_contact where cnt_internalId=isnull((Select CASE 
						WHEN  ([TradingTerminal_AllTradeID] is not null and LEN(REPLACE(isnull([TradingTerminal_AllTradeID],''),CHAR(13),''))>0) then TradingTerminal_AllTradeID
						when  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND (TradingTerminal_ProTradeID is null OR LEN(REPLACE(TradingTerminal_ProTradeID,CHAR(13),''))=0) AND (TradingTerminal_CliTradeID is null OR LEN(REPLACE(TradingTerminal_CliTradeID,CHAR(13),''))=0) then [TradeODIN_CustomerID] 
						WHEN  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND [TradeODIN_ProClient]='2' then TradingTerminal_ProTradeID
						when  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND [TradeODIN_ProClient]='1' then TradingTerminal_CliTradeID
						else [TradeODIN_CustomerID] end	
						from Master_TradingTerminal where LTRIM(RTRIM(TradingTerminal_TerminalID))=LTRIM(RTRIM([TradeODIN_CTCLID])) AND TradingTerminal_ExchangeSegmentID=@ExcSegmt AND TradingTerminal_CompanyID=@ExchangeTrades_CompanyID),[TradeODIN_CustomerID])),
			isnull((Select CASE When LEN(a1.TradingTerminal_ParentTerminalID)=0 then a1.TradingTerminal_TerminalID When LTRIM(RTRIM(a1.TradingTerminal_ParentTerminalID)) is not null then LTRIM(RTRIM(a1.TradingTerminal_ParentTerminalID)) When LTRIM(RTRIM(a1.TradingTerminal_ParentTerminalID)) is null then LTRIM(RTRIM(a1.TradingTerminal_TerminalID)) else [TradeODIN_CTCLID] end From (Select TradingTerminal_ParentTerminalID,TradingTerminal_TerminalID from Master_TradingTerminal WHERE LTRIM(RTRIM(Master_TradingTerminal.TradingTerminal_TerminalID)) IN(''+LTRIM(RTRIM([TradeODIN_CTCLID]))+'') AND Master_TradingTerminal.TradingTerminal_ExchangeSegmentID=@ExcSegmt AND Master_TradingTerminal.TradingTerminal_CompanyID=''+@ExchangeTrades_CompanyID+'')as a1),LTRIM(RTRIM([TradeODIN_CTCLID]))),
			(Select Top(1) Master_Settlements.Settlements_Number FROM #tmpTrans_TradeGREEK,Master_Settlements WHERE Master_Settlements.Settlements_ExchangeSegmentID=1 AND Substring(Convert(varchar(20),Convert(datetime,LTRIM(RTRIM(#tmpTrans_TradeGREEK.[TradeODIN_TradeEntryTime])),120),120),1,11) Between Settlements_StartDateTime AND Settlements_EndDateTime AND Master_Settlements.Settlements_Type in(select  case when #tmpTrans_TradeGREEK.[TradeODIN_MarketType]=1 then 'Normal Rolling' when #tmpTrans_TradeGREEK.[TradeODIN_MarketType]=2 then 'Trade For Trade - Rolling'  when #tmpTrans_TradeGREEK.[TradeODIN_MarketType]=3 then 'Retail Debt Market' when #tmpTrans_TradeGREEK.[TradeODIN_MarketType]=4 then 'Normal Auction' else '' end)),
			(case when [TradeODIN_BookType]=1 and [TradeODIN_SecurityType]='EQ' then 'N'
			when  [TradeODIN_BookType]=3 and [TradeODIN_SecurityType]='EQ' then 'N'
			when  [TradeODIN_BookType]=5 and [TradeODIN_SecurityType]='EQ' then 'N'
			when  [TradeODIN_BookType]=7 and [TradeODIN_SecurityType]='EQ' then 'A'
			when  [TradeODIN_BookType]=8 and [TradeODIN_SecurityType]='EQ' then 'N'
            when  [TradeODIN_BookType]=1 and [TradeODIN_SecurityType]='IL' then 'N'
			when  [TradeODIN_BookType]=3 and [TradeODIN_SecurityType]='IL' then 'N'
			when  [TradeODIN_BookType]=5 and [TradeODIN_SecurityType]='IL' then 'N'
			when  [TradeODIN_BookType]=7 and [TradeODIN_SecurityType]='IL' then 'A'
			when  [TradeODIN_BookType]=8 and [TradeODIN_SecurityType]='IL' then 'N'
            when  [TradeODIN_BookType]=1 and [TradeODIN_SecurityType]='IS' then 'H'
			when  [TradeODIN_BookType]=3 and [TradeODIN_SecurityType]='IS' then 'H'
			when  [TradeODIN_BookType]=5 and [TradeODIN_SecurityType]='IS' then 'H'
			when  [TradeODIN_BookType]=7 and [TradeODIN_SecurityType]='IS' then 'A'
			when  [TradeODIN_BookType]=8 and [TradeODIN_SecurityType]='IS' then 'H'
			when  [TradeODIN_BookType]=1 and [TradeODIN_SecurityType]='BE' then 'W'
			when  [TradeODIN_BookType]=3 and [TradeODIN_SecurityType]='BE' then 'W'
			when  [TradeODIN_BookType]=5 and [TradeODIN_SecurityType]='BE' then 'W'
			when  [TradeODIN_BookType]=7 and [TradeODIN_SecurityType]='BE' then 'W'
			when  [TradeODIN_BookType]=8 and [TradeODIN_SecurityType]='BE' then 'W'
            when  [TradeODIN_BookType]=1 and [TradeODIN_SecurityType] like 'Q%' then 'N'
			when  [TradeODIN_BookType]=3 and [TradeODIN_SecurityType] like 'Q%' then 'N'
			when  [TradeODIN_BookType]=5 and [TradeODIN_SecurityType] like 'Q%' then 'N'
			when  [TradeODIN_BookType]=7 and [TradeODIN_SecurityType] like 'Q%' then 'A'
			when  [TradeODIN_BookType]=8 and [TradeODIN_SecurityType] like 'Q%' then 'N'
            when  [TradeODIN_BookType]=1 and [TradeODIN_SecurityType]='E1' then 'N'
			when  [TradeODIN_BookType]=3 and [TradeODIN_SecurityType]='E1' then 'N'
			when  [TradeODIN_BookType]=5 and [TradeODIN_SecurityType]='E1' then 'N'
			when  [TradeODIN_BookType]=7 and [TradeODIN_SecurityType]='E1' then 'A'
			when  [TradeODIN_BookType]=8 and [TradeODIN_SecurityType]='E1' then 'N'
            when  [TradeODIN_BookType]=1 and [TradeODIN_SecurityType]='E2' then 'N'
			when  [TradeODIN_BookType]=3 and [TradeODIN_SecurityType]='E2' then 'N'
			when  [TradeODIN_BookType]=5 and [TradeODIN_SecurityType]='E2' then 'N'
			when  [TradeODIN_BookType]=7 and [TradeODIN_SecurityType]='E2' then 'A'
			when  [TradeODIN_BookType]=8 and [TradeODIN_SecurityType]='E2' then 'N'
            when  [TradeODIN_BookType]=1 and [TradeODIN_SecurityType]='E3' then 'N'
			when  [TradeODIN_BookType]=3 and [TradeODIN_SecurityType]='E3' then 'N'
			when  [TradeODIN_BookType]=5 and [TradeODIN_SecurityType]='E3' then 'N'
			when  [TradeODIN_BookType]=7 and [TradeODIN_SecurityType]='E3' then 'A'
			when  [TradeODIN_BookType]=8 and [TradeODIN_SecurityType]='E3' then 'N'
			when  [TradeODIN_BookType]=1 and [TradeODIN_SecurityType]='N1' then 'N'
			when  [TradeODIN_BookType]=3 and [TradeODIN_SecurityType]='N1' then 'N'
			when  [TradeODIN_BookType]=5 and [TradeODIN_SecurityType]='N1' then 'N'
			when  [TradeODIN_BookType]=7 and [TradeODIN_SecurityType]='N1' then 'A'
			when  [TradeODIN_BookType]=8 and [TradeODIN_SecurityType]='N1' then 'N'
			when  [TradeODIN_BookType]=1 and [TradeODIN_SecurityType]='N2' then 'N'
			when  [TradeODIN_BookType]=3 and [TradeODIN_SecurityType]='N2' then 'N'
			when  [TradeODIN_BookType]=5 and [TradeODIN_SecurityType]='N2' then 'N'
			when  [TradeODIN_BookType]=7 and [TradeODIN_SecurityType]='N2' then 'A'
			when  [TradeODIN_BookType]=8 and [TradeODIN_SecurityType]='N2' then 'N'
			when  [TradeODIN_BookType]=1 and [TradeODIN_SecurityType]='N3' then 'N'
			when  [TradeODIN_BookType]=3 and [TradeODIN_SecurityType]='N3' then 'N'
			when  [TradeODIN_BookType]=5 and [TradeODIN_SecurityType]='N3' then 'N'
			when  [TradeODIN_BookType]=7 and [TradeODIN_SecurityType]='N3' then 'A'
			when  [TradeODIN_BookType]=8 and [TradeODIN_SecurityType]='N3' then 'N'
			when  [TradeODIN_BookType]=1 and [TradeODIN_SecurityType]='N4' then 'N'
			when  [TradeODIN_BookType]=3 and [TradeODIN_SecurityType]='N4' then 'N'
			when  [TradeODIN_BookType]=5 and [TradeODIN_SecurityType]='N4' then 'N'
			when  [TradeODIN_BookType]=7 and [TradeODIN_SecurityType]='N4' then 'A'
			when  [TradeODIN_BookType]=8 and [TradeODIN_SecurityType]='N4' then 'N'
			when  [TradeODIN_BookType]=1 and [TradeODIN_SecurityType]='N5' then 'N'
			when  [TradeODIN_BookType]=3 and [TradeODIN_SecurityType]='N5' then 'N'
			when  [TradeODIN_BookType]=5 and [TradeODIN_SecurityType]='N5' then 'N'
			when  [TradeODIN_BookType]=7 and [TradeODIN_SecurityType]='N5' then 'A'
			when  [TradeODIN_BookType]=8 and [TradeODIN_SecurityType]='N5' then 'N'
			when  [TradeODIN_BookType]=1 and [TradeODIN_SecurityType]='N6' then 'N'
			when  [TradeODIN_BookType]=3 and [TradeODIN_SecurityType]='N6' then 'N'
			when  [TradeODIN_BookType]=5 and [TradeODIN_SecurityType]='N6' then 'N'
			when  [TradeODIN_BookType]=7 and [TradeODIN_SecurityType]='N6' then 'A'
			when  [TradeODIN_BookType]=8 and [TradeODIN_SecurityType]='N6' then 'N'
			when  [TradeODIN_BookType]=1 and [TradeODIN_SecurityType]='BL' then 'N'
			when  [TradeODIN_BookType]=3 and [TradeODIN_SecurityType]='BL' then 'N'
			when  [TradeODIN_BookType]=5 and [TradeODIN_SecurityType]='BL' then 'N'
			when  [TradeODIN_BookType]=7 and [TradeODIN_SecurityType]='BL' then 'A'
			when  [TradeODIN_BookType]=8 and [TradeODIN_SecurityType]='BL' then 'N'
			when  [TradeODIN_BookType]=1 and [TradeODIN_SecurityType]='P1' then 'N'
			when  [TradeODIN_BookType]=3 and [TradeODIN_SecurityType]='P1' then 'N'
			when  [TradeODIN_BookType]=5 and [TradeODIN_SecurityType]='P1' then 'N'
			when  [TradeODIN_BookType]=7 and [TradeODIN_SecurityType]='P1' then 'A'
			when  [TradeODIN_BookType]=8 and [TradeODIN_SecurityType]='P1' then 'N'
			when  [TradeODIN_BookType]=1 and [TradeODIN_SecurityType]='W1' then 'N'
			when  [TradeODIN_BookType]=3 and [TradeODIN_SecurityType]='W1' then 'N'
			when  [TradeODIN_BookType]=5 and [TradeODIN_SecurityType]='W1' then 'N'
			when  [TradeODIN_BookType]=7 and [TradeODIN_SecurityType]='W1' then 'A'
			when  [TradeODIN_BookType]=8 and [TradeODIN_SecurityType]='W1' then 'N'
			when  [TradeODIN_BookType]=1 and [TradeODIN_SecurityType]='DR' then 'N'
			when  [TradeODIN_BookType]=3 and [TradeODIN_SecurityType]='DR' then 'N'
			when  [TradeODIN_BookType]=5 and [TradeODIN_SecurityType]='DR' then 'N'
			when  [TradeODIN_BookType]=7 and [TradeODIN_SecurityType]='DR' then 'A'
			when  [TradeODIN_BookType]=8 and [TradeODIN_SecurityType]='DR' then 'N'
			else 'W' end),
			Substring(Convert(varchar(20),Convert(datetime,LTRIM(RTRIM([TradeODIN_TradeEntryTime])),120),120),1,11),
			[TradeODIN_TradeNumber],
			[TradeODIN_TradeStatus],
			convert(varchar(20),[TradeODIN_TradeEntryTime],120),
			convert(varchar(20),[TradeODIN_TradeModifiedTime],120),
			[TradeODIN_OrderNumber],
			convert(varchar(20),[TradeODIN_OrderEntryTime],120),
			'Orgnl',
			[TradeODIN_ProClient],
			[TradeODIN_ClienUcc],
			[TradeODIN_ParticipantCode],
			isnull((Select CASE 
						WHEN  ([TradingTerminal_AllTradeID] is not null and LEN(REPLACE(isnull([TradingTerminal_AllTradeID],''),CHAR(13),''))>0) then TradingTerminal_AllTradeID 
						when  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND (TradingTerminal_ProTradeID is null OR LEN(REPLACE(TradingTerminal_ProTradeID,CHAR(13),''))=0) AND (TradingTerminal_CliTradeID is null OR LEN(REPLACE(TradingTerminal_CliTradeID,CHAR(13),''))=0) then [TradeODIN_CustomerID] 
						WHEN  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND [TradeODIN_ProClient]='2' then TradingTerminal_ProTradeID
						when  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND [TradeODIN_ProClient]='1' then TradingTerminal_CliTradeID
						else [TradeODIN_CustomerID] end	
						from Master_TradingTerminal where LTRIM(RTRIM(TradingTerminal_TerminalID))=LTRIM(RTRIM([TradeODIN_CTCLID])) AND TradingTerminal_ExchangeSegmentID=@ExcSegmt AND TradingTerminal_CompanyID=@ExchangeTrades_CompanyID),[TradeODIN_CustomerID]),
			LTRIM(RTRIM([TradeODIN_SecurityType])),
			LTRIM(RTRIM([TradeODIN_SecuritySymbol])),
			LTRIM(RTRIM([TradeODIN_SecurityType])),
			[TradeODIN_ProductSeriesID],
			[TradeODIN_BookType],
			[TradeODIN_MarketType],
			isnull((Select CASE When LEN(a1.TradingTerminal_parentterminalID)=0 then null When LTRIM(RTRIM(a1.TradingTerminal_ParentTerminalID)) is not null then LTRIM(RTRIM(a1.TradingTerminal_TerminalID)) When LTRIM(RTRIM(a1.TradingTerminal_ParentTerminalID)) is null then null else null end From (Select TradingTerminal_ParentTerminalID,TradingTerminal_TerminalID from Master_TradingTerminal WHERE LTRIM(RTRIM(Master_TradingTerminal.TradingTerminal_TerminalID)) IN(''+LTRIM(RTRIM([TradeODIN_CTCLID]))+'') AND Master_TradingTerminal.TradingTerminal_ExchangeSegmentID=@ExcSegmt AND Master_TradingTerminal.TradingTerminal_CompanyID=''+@ExchangeTrades_CompanyID+'')as a1),null),
			(select cnt_branchid from tbl_master_contact where cnt_internalId=(select top(1)  T.crg_cntID from tbl_master_contactExchange T,#tmpTrans_TradeGREEK O  where T.crg_tcode=O.[TradeODIN_ClienUcc])),
			[TradeODIN_BuySellIndicator],
			[TradeODIN_TradeQuantity],
			[TradeODIN_TradePrice],
			[TradeODIN_TradeQuantity], 
			convert(decimal(12,2),[TradeODIN_TradePrice])*convert(decimal(12,2),[TradeODIN_TradeQuantity]),
			[TradeODIN_AuctionPartType],
			[TradeODIN_AuctionNo],
			[TradeODIN_Sett_Period],
			(Case When [TradeODIN_ParticipantCode] IN(Select [TradeODIN_ParticipantCode] from #tmpTrans_TradeGREEK O,tbl_master_companyExchange TE where O.[TradeODIN_ParticipantCode]=TE.exch_TMCode)
			THEN 'N' ELSE 'Y'
			end),
			@ModifyUser,
			getdate(),
			(Case When [TradeODIN_ParticipantCode] NOT IN(Select [TradeODIN_ParticipantCode] from #tmpTrans_TradeGREEK O,tbl_master_companyExchange TE where O.[TradeODIN_ParticipantCode]=TE.exch_TMCode)
			THEN SUBSTRING([TradeODIN_ParticipantCode],1,4) ELSE null
			end),
			[TradeODIN_BrokerID],
			Case when isnull([TradeODIN_BrokerID],'')='' then NULL else @UpdateDate End
			
			from #tmpTrans_TradeGREEK 
			Where not exists(select ExchangeTradesID 
			from #tmpTrans_TradeTemp where convert(varchar(10),Tradedate,105)=convert(varchar(10),cast([TradeODIN_TradeEntryTime] as datetime),105 ) 
			and LTRIM(RTRIM(TradeNumber))=LTRIM(RTRIM([TradeODIN_TradeNumber])) and LTRIM(RTRIM(OrderNumber))=LTRIM(RTRIM([TradeODIN_ORDERNUMBER])) 
			AND Segment=@ExcSegmt AND CompanyID=@ExchangeTrades_CompanyID)
					
-------------------------------------------------Checking For CustomerID Is Null---------------------------------

						SELECT DISTINCT EXCHANGETRADES_CUSTOMERUCC FROM TRANS_EXCHANGETRADES,#tmpTrans_TradeGREEK WHERE
						EXCHANGETRADES_SEGMENT=@ExcSegmt AND  ExchangeTrades_TradeDate=cast(@FY as datetime)
						AND (EXCHANGETRADES_CUSTOMERID IS NULL or len(EXCHANGETRADES_CUSTOMERID)=0) and ExchangeTrades_CompanyID=@ExchangeTrades_CompanyID

	-------------------------------------------------Showing the Import Summary --------------------------------

					select exchangetrades_settlementnumber as [Sett.No],exchangetrades_settlementtype as [Sett.Type],
					sum(rowcnt) as Records,
					sum(isnull(buy,0)) as [Buy Obligation],
					sum(isnull(sell,0)) as [Sell Obligation],
					(sum(isnull(sell,0))-sum(isnull(buy,0))) as [Net Obligation]
					 from
					(select exchangetrades_settlementnumber,exchangetrades_settlementtype,COUNT(exchangetrades_settlementtype) as rowcnt,
					case when exchangetrades_buysellflag=1 then sum(exchangetrades_marketvalue) else null end buy,
					case when  exchangetrades_buysellflag=2 then sum(exchangetrades_marketvalue)  else null end as sell
					from TRANS_EXCHANGETRADES WHERE
					EXCHANGETRADES_SEGMENT=@ExcSegmt AND Trans_ExchangeTrades.ExchangeTrades_TradeDate=cast(@FY as datetime)
					and ExchangeTrades_CompanyID=@ExchangeTrades_CompanyID and ExchangeTrades_TransactionType='Orgnl'
					group by exchangetrades_settlementnumber,exchangetrades_settlementtype,exchangetrades_buysellflag)as bb
					group by exchangetrades_settlementnumber,exchangetrades_settlementtype
				
	----------------------------------------------------------------------------------------------------------------------------				
					select cast(@FY as datetime) as TradeDate
	------------------------------------------------------------------------------------------------------------------------------------------ 
	-------------------------------------------------Delete  NULL CustomerID-----------------------------------------------------------------
			--Delete FROM Trans_exchangetrades WHERE
			--exchangetrades_Segment=@ExcSegmt AND exchangetrades_TradeDate=cast(@FY as datetime)
			--AND (exchangetrades_CustomerID IS NULL or len(exchangetrades_CustomerID)=0) and exchangetrades_CompanyID=@ExchangeTrades_CompanyID

	---And Now trades for the Broker ------------
	insert into Trans_ExchangeTrades
			(ExchangeTrades_FinYear,ExchangeTrades_CompanyID,ExchangeTrades_Segment,ExchangeTrades_BranchID,ExchangeTrades_TerminalID,
			ExchangeTrades_SettlementNumber,ExchangeTrades_SettlementType,ExchangeTrades_TradeDate,ExchangeTrades_TradeNumber,
			ExchangeTrades_TradeStatus,ExchangeTrades_TradeEntryTime,ExchangeTrades_TradeModifyTime,ExchangeTrades_OrderNumber,
			ExchangeTrades_OrderEntryTime,ExchangeTrades_TransactionType,ExchangeTrades_ProCli,ExchangeTrades_CustomerUcc,
			ExchangeTrades_CustodialParticipantCode,ExchangeTrades_CustomerID,ExchangeTrades_SecurityType,
			ExchangeTrades_SecuritySymbol,ExchangeTrades_SecuritySeries,ExchangeTrades_ProductSeriesID,ExchangeTrades_BookType,
			ExchangeTrades_MarketType,ExchangeTrades_CTCLID,ExchangeTrades_ExchangeBranchID,ExchangeTrades_BuySellFlag,
			ExchangeTrades_QuantityLots,ExchangeTrades_UnitPrice,ExchangeTrades_UnitPriceQuantity,ExchangeTrades_MarketValue,
			ExchangeTrades_AuctionPartType,ExchangeTrades_AuctionNumber,ExchangeTrades_SettPeriod,ExchangeTrades_CustodialFlag,
			ExchangeTrades_CreateUser,ExchangeTrades_CreateDateTime,ExchangeTrades_CustodianCode,ExchangeTrades_CounterPartyID,
			ExchangeTrades_LastUpdateDate)
	Select	ExchangeTrades_FinYear,ExchangeTrades_CompanyID,ExchangeTrades_Segment,ExchangeTrades_BranchID,ExchangeTrades_TerminalID,
			ExchangeTrades_SettlementNumber,ExchangeTrades_SettlementType,ExchangeTrades_TradeDate,ExchangeTrades_TradeNumber,
			ExchangeTrades_TradeStatus,ExchangeTrades_TradeEntryTime,ExchangeTrades_TradeModifyTime,ExchangeTrades_OrderNumber,
			ExchangeTrades_OrderEntryTime,ExchangeTrades_TransactionType,ExchangeTrades_ProCli,ExchangeTrades_CustomerUcc,
			ExchangeTrades_CustodialParticipantCode,ExchangeTrades_CounterPartyID,ExchangeTrades_SecurityType,
			ExchangeTrades_SecuritySymbol,ExchangeTrades_SecuritySeries,ExchangeTrades_ProductSeriesID,ExchangeTrades_BookType,
			ExchangeTrades_MarketType,ExchangeTrades_CTCLID,ExchangeTrades_ExchangeBranchID,
			Case when ExchangeTrades_BuySellFlag=1 then 2 Else 1 End,
			ExchangeTrades_QuantityLots,ExchangeTrades_UnitPrice,ExchangeTrades_UnitPriceQuantity,ExchangeTrades_MarketValue,
			ExchangeTrades_AuctionPartType,ExchangeTrades_AuctionNumber,ExchangeTrades_SettPeriod,ExchangeTrades_CustodialFlag,
			ExchangeTrades_CreateUser,GETDATE(),ExchangeTrades_CustodianCode,ExchangeTrades_CustomerID,
			ExchangeTrades_LastUpdateDate
		From Trans_ExchangeTrades where
		ExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
		and ExchangeTrades_FinYear=@SETT_FY
		and ExchangeTrades_Segment=@ExcSegmt
		and ExchangeTrades_TradeDate=cast(@FY as datetime)
		and ExchangeTrades_LastUpdateDate=@UpdateDate
		and ExchangeTrades_CreateUser=@ModifyUser
		and LEFT(ISNULL(ExchangeTrades_CounterPartyID,'NOR'),2)='BO'

	------------------------------------------------------------------------------------------------------------------------------------------ 
						Set @LockMsg=''

          END
else
begin
	Set @LockMsg= 'The Data is Locked' 
end
END

--exec [SP_INSUP_TradeGREEK] 'InsertTradeData',235,26,'\\anirban\CommonFolderInfluxCRM\grcm1104TRD.txt','COR0000002','2011-07-30','2015-01-01',''


