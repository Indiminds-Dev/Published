
-- EXEC [SP_INSUP_MCXODIN1] 'C:\MCXCOMM_07122012.txt',19,'COR0000002','2012-01-01','2015-01-01'


-- =============================================
-- =============================================
ALTER  procedure [dbo].[SP_INSUP_MCXODIN1]

	@FilePath as varchar(255)=null,
	@SegmentId  int,
	@COMPANY_ID varchar(255)=null,
	@LckTradeDate datetime,
	@ExpireDate datetime,
	@LockMsg Varchar(250) Output
AS
BEGIN
	
	declare @ReadFrom as int
	declare @Q as varchar(250)
	declare @P int 
	Declare @Min as Int
	Declare @Max As Int
	DECLARE @Status as int		
	

	
			CREATE TABLE  #tmpTrans_MCEXODIN (

				[MCEXODIN_TradeNumber] varchar(100) null,
				[MCEXODIN_TradeStatus]  varchar(100) null,
				[MCEXODIN_InstrumentID] varchar(100) NULL,
				[MCEXODIN_InstrumentName] varchar(100) NULL,
				[MCEXODIN_ContractCode] varchar(100) NULL,
				[MCEXODIN_ExpiryDate] varchar(200) null,
				[MCEXODIN_Reserved] varchar(200) null,
				[MCEXODIN_StrikePrice] varchar(200) null,
				[MCEXODIN_OptionType] varchar(200) null,
				[MCEXODIN_ContractDescription] varchar(100) null,
				[MCEXODIN_BookType] varchar(100) null,
				[MCEXODIN_BookTypeName] varchar(100) null,
				[MCEXODIN_MarketType] varchar(100) null,
				[MCEXODIN_TerminalID] varchar(100) null,
				[MCEXODIN_BranchID] varchar(100) null,
				[MCEXODIN_BuySellIndicator] varchar(100) null,
				[MCEXODIN_TradeQuantity] varchar(100) null,
				[MCEXODIN_Price] varchar(100) null,
				[MCEXODIN_AccountType] varchar(100) null,
				[MCEXODIN_Accounts] varchar(100) null,
				[MCEXODIN_ParticipantSettler] varchar(100) null,
				[MCEXODIN_SpreadPrice] varchar(100) null,
				[MCEXODIN_TradingMemberID] varchar(100) null,
				[MCEXODIN_Reserved1] varchar(100) null,
				[MCEXODIN_TradeTime] varchar(100) null,
				[MCEXODIN_LastModifiedTime] varchar(100) null,
				[MCEXODIN_OrderNumber] varchar(100) null,
				[MCEXODIN_Reserved2] varchar(100) null,
				[MCEXODIN_UserRemarks] varchar(100) null,
				[MCEXODIN_OrderUserLastModifiedTime] varchar(100) null,
				[MCEXODIN_Reserved3] varchar(100) null,
				[MCEXODIN_ReferenceNumber] varchar(100) null,
				[MCEXODIN_Reserved4] varchar(100) null
				
				)


				set @ReadFrom=1
				
				set @Q='BULK INSERT #tmpTrans_MCEXODIN FROM '+ char(39) + @FilePath + char(39) + ' with (firstrow = ' + convert(varchar,@ReadFrom) + ' , FIELDTERMINATOR = ' + char(39) + ',' + char(39) + ' , ROWTERMINATOR = ' + char(39) + char(10)+ + char(39) +')'
				print @Q
				exec (@Q)
		
		
				update #tmpTrans_MCEXODIN set [MCEXODIN_Accounts]= [MCEXODIN_TerminalID]
							where ([MCEXODIN_Accounts] is null or LEN([MCEXODIN_Accounts])=0)
		
				Declare @UpdateDate DateTime
				Set @UpdateDate=GETDATE()


				alter table #tmpTrans_MCEXODIN
						add  	[MCEXODIN_ID] [bigint] IDENTITY(1,1) NOT NULL,	
						        [MCEXODIN_ProductSeriesId] varchar(100) NULL,
								[MCEXODIN_UNITQuantity] varchar(100) NULL,
								[MCEXODIN_MARKETVALUE] varchar(100) NULL,
								[MCEXODIN_CustomerID] varchar(100) NULL,
								[MCEXODIN_TerminalModified] varchar(100) null,
								[MCEXODIN_CTCL] varchar(100) null,
								[MCEXODIN_BrokerID] varchar(10) NULL
								
				DECLARE @TransactionType varchar(20)
				DECLARE @FY VARCHAR(11)  
				DECLARE @SETT_FY VARCHAR(250)
				DECLARE @DTDIFF	int
                Declare @Cflag char(1)
                declare @ww char(20)

				set @FY=(select Top (1) Convert(datetime,[MCEXODIN_TradeTime],120) From #tmpTrans_MCEXODIN )

			If (cast(@FY as datetime)>=@LckTradeDate and cast(@FY as datetime)<=@ExpireDate)
			begin

				------------------------------Financial Year Calculation

				SET @DTDIFF=CAST(MONTH(@FY) AS INT)
				IF(@DTDIFF>=1 AND @DTDIFF<=3)
				BEGIN
					SET @SETT_FY=NULL
					SET @SETT_FY=  CAST((CAST(YEAR(@FY) AS INT)-1) AS VARCHAR(50) )+'-'+CAST(YEAR(@FY) AS VARCHAR(50))
				END
				IF(@DTDIFF>=4 AND @DTDIFF<=12)
				BEGIN
					SET @SETT_FY=NULL
					SET @SETT_FY=  CAST(YEAR(@FY) AS VARCHAR(50))+'-'+CAST((CAST(YEAR(@FY) AS INT)+1) AS VARCHAR(50) )
				END

				-----------------------------------update temp table for productseries id-----------------------------

				Update #tmpTrans_MCEXODIN
				SET [MCEXODIN_ProductSeriesId]=Commodity_ProductSeriesID
				From Master_Commodity WHERE 
				Commodity_Identifier=REPLACE('FUTCOM',CHAR(13),'') AND COMMODITY_EXCHANGESEGMENTID=7
				AND Commodity_EffectiveDate=SUBSTRING(CONVERT(varchar(12),CONVERT(DATETIME,[MCEXODIN_ExpiryDate],121),120),0,11) 
				AND Commodity_TickerSymbol=REPLACE([MCEXODIN_ContractCode],CHAR(13),'')
				-------------------------------------------------------------------------------------------------------

				-----------------------------------Update temp table for Unit Price Quantity---------------------------
				Update #tmpTrans_MCEXODIN 
				SET [MCEXODIN_UNITQuantity]=[MCEXODIN_TradeQuantity]*Commodity_ConvNumerator/Commodity_ConDenominator
				from Master_Commodity
				Where Commodity_ProductSeriesID=[MCEXODIN_ProductSeriesId]
				and Commodity_ExchangeSegmentID=7 
				---------------------------------------------------------------------------------------------------------

				--------------------------------------Customer ID--------------------------------------------------------

				Update #tmpTrans_MCEXODIN SET [MCEXODIN_CustomerID]=crg_cntID
				from tbl_master_contactExchange where crg_company=@COMPANY_ID And
				crg_tcode=Ltrim(Rtrim([MCEXODIN_Accounts])) AND crg_exchange='MCX - COMM'

-------------------------------------------------------------------------------------------
				---------------------------------------------------------------------------------------------------------
				--------- Update the brokerID in case the terminalD are mapped to a broker -------------------
				Update #tmpTrans_MCEXODIN Set [MCEXODIN_BrokerID]=TradingTerminal_BrokerID 
				from Master_TradingTerminal
				where TradingTerminal_CompanyID=@COMPANY_ID
				and TradingTerminal_ExchangeSegmentID=@SegmentId
				and ltrim(rtrim(TradingTerminal_TerminalID))=ltrim(rtrim([MCEXODIN_TerminalID]))
			
				---------------------------------------------------------------------------------------------------------

--------------------------------------------------Delete UnIdentified Trades---------------------------------------------------------------
				Delete FROM Trans_ComExchangeTrades WHERE
				ComExchangeTrades_CompanyID=@COMPANY_ID And
				ComExchangeTrades_Segment=@SegmentId AND  
				ComExchangeTrades_TradeDate=cast(@FY as datetime)
				AND (	ComExchangeTrades_ProductSeriesID IS NULL OR len(ComExchangeTrades_ProductSeriesID)=0
						OR ComExchangeTrades_CustomerID is NULL OR LEN(ComExchangeTrades_CustomerID)=0
						OR ComExchangeTrades_SettlementNumber is NULL)
				and ComExchangeTrades_CustTransactionID is NULL

--------------------------------------------------------------------------------------------------------------------------------------------
				CREATE TABLE  #tmpTrans_TradeTemp (

				ExchangeTradesID int,
				Tradedate datetime,
				TradeNumber varchar(100) null,
				OrderNumber varchar(100) null,
				CustomerId varchar(100) null,
				BranchId int,
                CompanyID varchar(100) null,
				Segment varchar(100)null
				)
				insert into #tmpTrans_TradeTemp
				(
					ExchangeTradesID,
					Tradedate ,
					TradeNumber ,
					OrderNumber ,
					CustomerId ,
					BranchId,
					CompanyID ,
					Segment 
				)
				Select 
				ComExchangeTrades_ID,
				ComExchangeTrades_TradeDate,
				ComExchangeTrades_TradeNumber,
				ComExchangeTrades_OrderNumber,
				ComExchangeTrades_CustomerID,
				ComExchangeTrades_BranchID,
				ComExchangeTrades_CompanyID,
				ComExchangeTrades_Segment

				from
				Trans_ComExchangeTrades INNER JOIN #tmpTrans_MCEXODIN
				ON(
				ComExchangeTrades_CompanyID=@COMPANY_ID AND ComExchangeTrades_Segment=@SegmentId
				AND convert(varchar(11),ComExchangeTrades_TradeDate,120)=convert(varchar(11),cast(@FY as datetime),120 )
				AND LTRIM(RTRIM(REPLACE(ComExchangeTrades_TradeNumber,CHAR(13),'')))=LTRIM(RTRIM(REPLACE([MCEXODIN_TradeNumber],CHAR(13),''))) and LTRIM(RTRIM(REPLACE(ComExchangeTrades_OrderNumber,CHAR(13),'')))=LTRIM(RTRIM(REPLACE([MCEXODIN_OrderNumber],CHAR(13),''))))

----------------Insert Into Main Table
				insert into Trans_ComExchangeTrades
				(ComExchangeTrades_FinYear,ComExchangeTrades_CompanyID,ComExchangeTrades_Segment,ComExchangeTrades_BranchID,
				ComExchangeTrades_SettlementNumber,ComExchangeTrades_SettlementType,ComExchangeTrades_ProductSeriesID,ComExchangeTrades_TradeDate,
				ComExchangeTrades_TradeNumber,ComExchangeTrades_TradeStatus,ComExchangeTrades_TradeEntryTime,ComExchangeTrades_TradeModifyTime,
				ComExchangeTrades_OrderNumber,ComExchangeTrades_TransactionType,ComExchangeTrades_CustomerUcc,ComExchangeTrades_ClearingMemberID,
				ComExchangeTrades_TradingMemberID,ComExchangeTrades_CustomerID,ComExchangeTrades_SecurityCode,ComExchangeTrades_SecuritySymbol,
				ComExchangeTrades_SecurityExpiry,ComExchangeTrades_BookType,ComExchangeTrades_MarketType,ComExchangeTrades_ProCli,
				ComExchangeTrades_TerminalId,ComExchangeTrades_CTCLId,ComExchangeTrades_BuySellFlag,ComExchangeTrades_Quantitylots,
				ComExchangeTrades_UnitPrice,ComExchangeTrades_UnitPriceQuantity,ComExchangeTrades_MarketValue,ComExchangeTrades_Remarks,
				ComExchangeTrades_ExchangeBranchID,ComExchangeTrades_ReferenceNumber,ComExchangeTrades_SpreadPrice,ComExchangeTrades_CreateDatetime,
				ComExchangeTrades_CounterPartyID,ComExchangeTrades_LastUpdateDate)

			    select 
				@SETT_FY,
				@COMPANY_ID,
				@SegmentId,
				(select cnt_branchid from tbl_master_contact where cnt_internalId=isnull((Select CASE 
							WHEN  ([TradingTerminal_AllTradeID] is not null and LEN(REPLACE(isnull([TradingTerminal_AllTradeID],''),CHAR(13),''))>0) then TradingTerminal_AllTradeID
							when  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND (TradingTerminal_ProTradeID is null OR LEN(REPLACE(TradingTerminal_ProTradeID,CHAR(13),''))=0) AND (TradingTerminal_CliTradeID is null OR LEN(REPLACE(TradingTerminal_CliTradeID,CHAR(13),''))=0) then [MCEXODIN_CustomerID] 
							WHEN  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND A.[MCEXODIN_AccountType]='2' then TradingTerminal_ProTradeID
							when  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND A.[MCEXODIN_AccountType]='1' then TradingTerminal_CliTradeID
							else [MCEXODIN_CustomerID] end	
							from Master_TradingTerminal where LTRIM(RTRIM(TradingTerminal_TerminalID))=A.[MCEXODIN_TerminalID] AND TradingTerminal_ExchangeSegmentID=@SegmentId),[MCEXODIN_CustomerID])),
				(Select Top(1) Master_Settlements.Settlements_Number FROM #tmpTrans_MCEXODIN,Master_Settlements WHERE Master_Settlements.Settlements_ExchangeSegmentID=7 AND Substring(Convert(varchar(20),Convert(datetime,LTRIM(RTRIM(#tmpTrans_MCEXODIN.[MCEXODIN_TradeTime])),120),120),1,11) Between Settlements_StartDateTime AND Settlements_EndDateTime And Settlements_TypeSuffix='F'), 
				'F',
				[MCEXODIN_ProductSeriesId],
				CONVERT(datetime,SUBSTRING(Convert(varchar(20),convert(datetime,[MCEXODIN_TradeTime],121),105),1,11),105),
				[MCEXODIN_TradeNumber],
				[MCEXODIN_TradeStatus],
				convert(varchar(20),[MCEXODIN_TradeTime],120),
				convert(varchar(20),[MCEXODIN_LastModifiedTime],120),
				[MCEXODIN_OrderNumber],
				(SELECT CASE WHEN MCEXODIN_TradeStatus=11 then 'Orgnl'
				when [MCEXODIN_TradeStatus]=12 then 'Modf'
				when [MCEXODIN_TradeStatus]=17 then 'Appr'
				when [MCEXODIN_TradeStatus]=18 then 'Rejc'
				END),
				[MCEXODIN_Accounts],
				[MCEXODIN_ParticipantSettler],
				[MCEXODIN_TradingMemberID],
				isnull((Select CASE 
							WHEN  ([TradingTerminal_AllTradeID] is not null and LEN(REPLACE(isnull([TradingTerminal_AllTradeID],''),CHAR(13),''))>0) then TradingTerminal_AllTradeID 
							when  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND (TradingTerminal_ProTradeID is null OR LEN(REPLACE(TradingTerminal_ProTradeID,CHAR(13),''))=0) AND (TradingTerminal_CliTradeID is null OR LEN(REPLACE(TradingTerminal_CliTradeID,CHAR(13),''))=0) then [MCEXODIN_CustomerID] 
							WHEN  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND A.[MCEXODIN_AccountType]='2' then TradingTerminal_ProTradeID
							when  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND A.[MCEXODIN_AccountType]='1' then TradingTerminal_CliTradeID
							else [MCEXODIN_CustomerID] end	
							from Master_TradingTerminal where LTRIM(RTRIM(TradingTerminal_TerminalID))=A.[MCEXODIN_TerminalID] AND TradingTerminal_ExchangeSegmentID=@SegmentId),[MCEXODIN_CustomerID]),
				'FUTCOM',
				[MCEXODIN_ContractCode],
				CAST([MCEXODIN_ExpiryDate] AS VARCHAR(20)),
				REPLACE([MCEXODIN_BookType],' ',''),
				REPLACE([MCEXODIN_MarketType],' ',''),
				[MCEXODIN_AccountType],
				isnull((Select CASE When LEN(a1.TradingTerminal_ParentTerminalID)=0 then LTRIM(RTRIM(a1.TradingTerminal_TerminalID)) When LTRIM(RTRIM(a1.TradingTerminal_ParentTerminalID)) is not null then LTRIM(RTRIM(a1.TradingTerminal_ParentTerminalID)) When LTRIM(RTRIM(a1.TradingTerminal_ParentTerminalID)) is null then LTRIM(RTRIM(a1.TradingTerminal_TerminalID)) else LTRIM(RTRIM(a1.TradingTerminal_TerminalID)) end From (Select TradingTerminal_ParentTerminalID,TradingTerminal_TerminalID from Master_TradingTerminal WHERE LTRIM(RTRIM(Master_TradingTerminal.TradingTerminal_TerminalID)) IN(''+LTRIM(RTRIM([MCEXODIN_TerminalID]))+'') AND Master_TradingTerminal.TradingTerminal_ExchangeSegmentID=@SegmentId AND Master_TradingTerminal.TradingTerminal_CompanyID=''+@COMPANY_ID+'')as a1),LTRIM(RTRIM([MCEXODIN_TerminalID]))),
				isnull((Select CASE When LEN(a1.TradingTerminal_parentterminalID)=0 then null When LTRIM(RTRIM(a1.TradingTerminal_ParentTerminalID)) is not null then LTRIM(RTRIM(a1.TradingTerminal_TerminalID)) When LTRIM(RTRIM(a1.TradingTerminal_ParentTerminalID)) is null then null else null end From (Select TradingTerminal_ParentTerminalID,TradingTerminal_TerminalID from Master_TradingTerminal WHERE LTRIM(RTRIM(Master_TradingTerminal.TradingTerminal_TerminalID)) IN(''+LTRIM(RTRIM([MCEXODIN_TerminalID]))+'') AND Master_TradingTerminal.TradingTerminal_ExchangeSegmentID=@SegmentId AND Master_TradingTerminal.TradingTerminal_CompanyID=''+@COMPANY_ID+'')as a1),null),
				[MCEXODIN_BuySellIndicator],
				[MCEXODIN_TradeQuantity],
				[MCEXODIN_Price],
				[MCEXODIN_UNITQuantity],
				CAST(Convert(numeric(18, 4),[MCEXODIN_Price])*Convert(numeric(14, 4),[MCEXODIN_UNITQuantity]) as decimal(28,4)),
				CAST(REPLACE([MCEXODIN_UserRemarks],' ','') as varchar(30)),
				[MCEXODIN_BranchID], 
				null,
				(CASE WHEN [MCEXODIN_SpreadPrice] is null then 0.0000 when LEN([MCEXODIN_SpreadPrice])=0 then 0.0000 else Convert(Numeric(9,4),[MCEXODIN_SpreadPrice]) end),
				Getdate(),
				[MCEXODIN_BrokerID],
				Case when isnull([MCEXODIN_BrokerID],'')='' then NULL else @UpdateDate End
              
				from #tmpTrans_MCEXODIN AS A
				LEFT OUTER JOIN
				tbl_master_contactExchange AS B ON 
				(B.crg_tcode=LTRIM(RTRIM(A.[MCEXODIN_Accounts])) AND B.crg_exchange='MCX - COMM')
				Where not exists(select ExchangeTradesID from #tmpTrans_TradeTemp where convert(varchar(10),Tradedate,105)=convert(varchar(10),cast(A.[MCEXODIN_TradeTime] as datetime),105 ) and LTRIM(RTRIM(REPLACE(TradeNumber,CHAR(13),'')))=LTRIM(RTRIM(REPLACE(A.[MCEXODIN_TradeNumber],CHAR(13),''))) and LTRIM(RTRIM(REPLACE(OrderNumber,CHAR(13),'')))=LTRIM(RTRIM(REPLACE(A.[MCEXODIN_OrderNumber],CHAR(13),''))) AND Segment=@SegmentId AND CompanyID=@COMPANY_ID)
				
-------------------------------------------------Checking For CustomerID Is Null---------------------------------

				SELECT DISTINCT ComExchangeTrades_CustomerUcc FROM Trans_ComExchangeTrades,#tmpTrans_MCEXODIN WHERE
				ComExchangeTrades_Segment=@SegmentId AND  convert(varchar(10),ComExchangeTrades_TradeDate,120)=convert(varchar(10),convert(datetime,@FY,120),120)
				AND (ComExchangeTrades_CustomerID IS NULL or len(ComExchangeTrades_CustomerID)=0) and ComExchangeTrades_CompanyID=@COMPANY_ID


-------------------------------------------------Showing the Import Summary --------------------------------------------------------
				select comexchangetrades_settlementnumber as [Sett.No],comexchangetrades_settlementtype as [Sett.Type],
				sum(rowcnt) as Records,
				sum(isnull(buy,0)) as [Buy Obligation],
				sum(isnull(sell,0)) as [Sell Obligation],
				(sum(isnull(sell,0))-sum(isnull(buy,0))) as [Net Obligation]
				from
				(select comexchangetrades_settlementnumber,comexchangetrades_settlementtype,COUNT(comexchangetrades_settlementtype) as rowcnt,
				case when comexchangetrades_buysellflag=1 then sum(comexchangetrades_marketvalue) else null end buy,
				case when  comexchangetrades_buysellflag=2 then sum(comexchangetrades_marketvalue)  else null end as sell
				from TRANS_COMEXCHANGETRADES WHERE
				COMEXCHANGETRADES_SEGMENT=@SegmentId 
				and ComExchangeTrades_TransactionType='Orgnl'
				AND convert(varchar(10),ComExchangeTrades_TradeDate,120)=convert(varchar(10),convert(datetime,@FY,120),120)
				and ComExchangeTrades_CompanyID=@COMPANY_ID
				and LEFT(ComExchangeTrades_CustomerID,2)='CL'
				group by comexchangetrades_settlementnumber,comexchangetrades_settlementtype,comexchangetrades_buysellflag)as bb
				group by comexchangetrades_settlementnumber,comexchangetrades_settlementtype

-------------------------------------------------Checking For ProductSeriesID Is null-------------------------------------------
				SELECT DISTINCT ComExchangeTrades_SecuritySymbol+'['+ComExchangeTrades_SecurityCode+']'+'['+Convert(varchar(20),ComExchangeTrades_SecurityExpiry,106)+']' AS ComExchangeTrades_SecuritySymbol FROM Trans_ComExchangeTrades WHERE
				ComExchangeTrades_Segment=@SegmentId AND  convert(varchar(10),ComExchangeTrades_TradeDate,120)=convert(varchar(10),convert(datetime,@FY,120),120)
				AND (ComExchangeTrades_ProductSeriesID IS NULL or len(ComExchangeTrades_ProductSeriesID)=0) and ComExchangeTrades_CompanyID=@COMPANY_ID


--------------------------------------------------Select Terminal ID not present in tradingterminal----------------------------------
				SELECT DISTINCT	[MCEXODIN_TerminalID] as TERMINALID from #tmpTrans_MCEXODIN WHERE [MCEXODIN_TerminalID] 
				NOT IN (Select TradingTerminal_TerminalID from Master_tradingTerminal 
				where tradingterminal_ExchangeSegmentID=@SegmentId AND tradingterminal_companyID=@COMPANY_ID)

----------------------------------------------------------------------------------------------------------------------------------------
				Select cast(@FY as datetime) as TradeDate

--------------------------------------------------Select Terminal IDs ----------------------------------
				SELECT DISTINCT	ComExchangeTrades_TerminalID from TRANS_COMEXCHANGETRADES WHERE
				ComExchangeTrades_Segment=@SegmentId AND ComExchangeTrades_TradeDate=cast(@FY as datetime)
				and ComExchangeTrades_CompanyID=@COMPANY_ID
				and ComExchangeTrades_TransactionType='Orgnl'
--------------------------------------------------------------------------------------------------------------
--------------------------------------------------Select UCC----------------------------------
				SELECT DISTINCT	ComExchangeTrades_CustomerUcc from TRANS_COMEXCHANGETRADES WHERE
				ComExchangeTrades_Segment=@SegmentId AND ComExchangeTrades_TradeDate=cast(@FY as datetime)
				and ComExchangeTrades_CompanyID=@COMPANY_ID
				and ComExchangeTrades_TransactionType='Orgnl'
						
----------------And Now trades for the Broker ------------
				insert into Trans_ComExchangeTrades
				(ComExchangeTrades_FinYear,ComExchangeTrades_CompanyID,ComExchangeTrades_Segment,ComExchangeTrades_BranchID,
				ComExchangeTrades_SettlementNumber,ComExchangeTrades_SettlementType,ComExchangeTrades_ProductSeriesID,ComExchangeTrades_TradeDate,
				ComExchangeTrades_TradeNumber,ComExchangeTrades_TradeStatus,ComExchangeTrades_TradeEntryTime,ComExchangeTrades_TradeModifyTime,
				ComExchangeTrades_OrderNumber,ComExchangeTrades_TransactionType,ComExchangeTrades_CustomerUcc,ComExchangeTrades_ClearingMemberID,
				ComExchangeTrades_TradingMemberID,ComExchangeTrades_CustomerID,ComExchangeTrades_SecurityCode,ComExchangeTrades_SecuritySymbol,
				ComExchangeTrades_SecurityExpiry,ComExchangeTrades_BookType,ComExchangeTrades_MarketType,ComExchangeTrades_ProCli,
				ComExchangeTrades_TerminalId,ComExchangeTrades_CTCLId,ComExchangeTrades_BuySellFlag,ComExchangeTrades_Quantitylots,
				ComExchangeTrades_UnitPrice,ComExchangeTrades_UnitPriceQuantity,ComExchangeTrades_MarketValue,ComExchangeTrades_Remarks,
				ComExchangeTrades_ExchangeBranchID,ComExchangeTrades_ReferenceNumber,ComExchangeTrades_SpreadPrice,ComExchangeTrades_CreateDatetime,
				ComExchangeTrades_CounterPartyID,ComExchangeTrades_LastUpdateDate)
				Select ComExchangeTrades_FinYear,ComExchangeTrades_CompanyID,ComExchangeTrades_Segment,ComExchangeTrades_BranchID,
				ComExchangeTrades_SettlementNumber,ComExchangeTrades_SettlementType,ComExchangeTrades_ProductSeriesID,ComExchangeTrades_TradeDate,
				ComExchangeTrades_TradeNumber,ComExchangeTrades_TradeStatus,ComExchangeTrades_TradeEntryTime,ComExchangeTrades_TradeModifyTime,
				ComExchangeTrades_OrderNumber,ComExchangeTrades_TransactionType,ComExchangeTrades_CustomerUcc,ComExchangeTrades_ClearingMemberID,
				ComExchangeTrades_TradingMemberID,ComExchangeTrades_CounterPartyID,ComExchangeTrades_SecurityCode,ComExchangeTrades_SecuritySymbol,
				ComExchangeTrades_SecurityExpiry,ComExchangeTrades_BookType,ComExchangeTrades_MarketType,ComExchangeTrades_ProCli,
				ComExchangeTrades_TerminalId,ComExchangeTrades_CTCLId,
				Case when ComExchangeTrades_BuySellFlag=1 then 2 Else 1 End,
				ComExchangeTrades_Quantitylots,
				ComExchangeTrades_UnitPrice,ComExchangeTrades_UnitPriceQuantity,ComExchangeTrades_MarketValue,ComExchangeTrades_Remarks,
				ComExchangeTrades_ExchangeBranchID,ComExchangeTrades_ReferenceNumber,ComExchangeTrades_SpreadPrice,GETDATE(),
				ComExchangeTrades_CustomerID,ComExchangeTrades_LastUpdateDate
				From Trans_ComExchangeTrades where
				ComExchangeTrades_CompanyID=@COMPANY_ID
				and ComExchangeTrades_FinYear=@SETT_FY
				and ComExchangeTrades_Segment=@SegmentId
				and ComExchangeTrades_TradeDate=cast(@FY As DateTime)
				and ComExchangeTrades_LastUpdateDate=@UpdateDate
				and LEFT(ISNULL(ComExchangeTrades_CounterPartyID,'NOR'),2)='BO'

	--------------------------------------------------------------------------------------------------------------
				Set @LockMsg=''
			End
			Else
			Begin
				Set @LockMsg= 'The Data is Locked' 

			End


END

