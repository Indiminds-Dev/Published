
---exec [Import_BSECDXTrades_CSV] 'C:\kredent\BSECDX\BFX_TRTM_3074_20131129.CSV',416,35,'COR0000002','2011-03-31','2013-12-29','ABCD'
---exec [Import_BSECDXTrades_CSV] 'C:\grd\BSECDX\291113\BFX_TRTM_3007_20131129.CSV',416,35,'COR0000002','2011-03-31','2013-12-29','ABCD'
---exec [Import_BSECDXTrades_CSV] 'C:\grd\BSECDX\021213\BFX_TRTM_3007_20131202.CSV',416,35,'COR0000002','2011-03-31','2013-12-29','ABCD'

ALTER  procedure [dbo].[Import_BSECDXTrades_CSV]

@FilePath as varchar(255)=null,
@ModifyUser	int,
@ExcSegmt int,
@ExchangeTrades_CompanyID char(10),
@LckTradeDate datetime,
@ExpireDate datetime,
@LockMsg Varchar(250) Output

AS
BEGIN


	CREATE TABLE #TempTradeBSECDXCsv
	(Trade_no int null,
	Trade_Date datetime null,
	Trade_Status tinyint null,
	Segment_Indicator varchar(10)null,
	Instrument_Type varchar(10) null,
	Symbol varchar(12)null,
	expiry_date DateTime null,
	Strike_Price numeric(15,4)null,
	Option_Type varchar(2)null,
	Filler1 numeric(10,0)null,-----10
	Buy_Broker varchar(10)null,
	Sell_Broker varchar(10)null,
	Price numeric(15,4)null,
	TradeDateTime Datetime null,
	Quantity numeric(10,0)null,--------------15
	Filler2 int null,
	Buy_Branch varchar(255)null,
	Buy_CmId varchar(20)null,
	Sell_CmId varchar(20)null,
	Sell_Branch varchar(255)null,------20
	Buy_CustodianParticipent varchar(20)null,
	Buy_SideConfirmation char(1)null,
	Sell_CustodianParticipent varchar(20)null,
	Sell_SideConfirmation varchar(1)null,
	Buy_CoveredUncovered char(1)null,-----25
	Sell_CoveredUncovered char(1)null,
	Buy_OldCustodianParticipent varchar(20)null,
	Buy_OldCMCode varchar(20)null,
	Sell_OldCustodianParticipent varchar(20)null,
	Sell_OldCMCode varchar(20)null,------30
	Buy_TerminalID varchar(15)null,
	Sell_TerminalID varchar(15)null,
	Buy_orderno varchar(20)null,
	Sell_Orderno varchar(20)null,
	Buy_Ucc varchar(12)null,-----------35
	Sell_Ucc varchar(12)null,
	Buy_Remarks varchar(20)null,
	Sell_Remarks varchar(20)null,
	Buy_Position char(1)null,
	Sell_Position char(1)null,------40
	Buy_PropiterClientFlag char(1)null,
	Sell_PropiterClientFlag char(1)null,
	ActiveFlag char(1)null,
	TradeExecutionTimeStamp DateTime null,
	OrderTimeStamp DateTime null)----------------45
                     
                declare @ReadFrom1 as int
				declare @Q1 as varchar(200)
				set @ReadFrom1=1
				
				set @Q1='BULK INSERT #TempTradeBSECDXCsv FROM '+ char(39) + @FilePath + char(39) + ' with (firstrow = ' + convert(varchar,@ReadFrom1) + ' , FIELDTERMINATOR = ' + char(39) + ',' + char(39) + ' , ROWTERMINATOR = ' + char(39) + char(10) + char(39) +')'
				exec (@Q1)

				Declare @UpdateDate DateTime,@CreateDate DateTime
				Set @UpdateDate=GETDATE()
				Set @CreateDate=(SELECT DATEADD(D, 0, DATEDIFF(D, 0, GETDATE())))

				alter table #TempTradeBSECDXCsv
						add  	[BRANCH_ID]  varchar(100) null,
						        [Customer_ID] varchar(100) null,
								[Productseries_ID] varchar(100) null,
								[Pro_Cli] varchar(5) null,
								[Buy_Location] Varchar(20) null,
								[Sell_Location] varchar(20) null,
								[BrokerID] varchar(10) null,
								[ProductID] bigint null,
								[UnitPriceQuantity] numeric(15,0) null

--------------------------------------Insert AND Update #TempTradeBSECDXCsv------------------------------------------------------------

Insert Into #TempTradeBSECDXCsv
					(
						Trade_no
						,Trade_Date
						,Trade_Status
						,Segment_Indicator
						,Instrument_Type---------------------5
						,Symbol
						,expiry_date
						,Strike_Price
						,Option_Type
						,Filler1---------------------10
						,Buy_Broker
						,Sell_Broker
						,Price
						,TradeDateTime
						,Quantity---------------------15
						,Filler2
						,Buy_Branch
						,Buy_CmId
						,Sell_CmId
						,Sell_Branch---------------------20
						,Buy_CustodianParticipent
						,Buy_SideConfirmation
						,Sell_CustodianParticipent
						,Sell_SideConfirmation
						,Buy_CoveredUncovered---------------------25
						,Sell_CoveredUncovered
						,Buy_OldCustodianParticipent
						,Buy_OldCMCode
						,Sell_OldCustodianParticipent
						,Sell_OldCMCode---------------------30
						,Buy_TerminalID
						,Sell_TerminalID
						,Buy_orderno
						,Sell_Orderno
						,Buy_Ucc---------------------35
						,Sell_Ucc
						,Buy_Remarks
						,Sell_Remarks
						,Buy_Position
						,Sell_Position---------------------40
						,Buy_PropiterClientFlag
						,Sell_PropiterClientFlag
						,ActiveFlag
						,TradeExecutionTimeStamp
						,OrderTimeStamp---------------------45
					)
		Select                    
						Trade_no
						,Trade_Date
						,Trade_Status
						,Segment_Indicator
						,Instrument_Type---------------------5
						,Symbol
						,expiry_date
						,Strike_Price
						,Option_Type
						,Filler1---------------------10
						,null
						,Sell_Broker
						,Price
						,TradeDateTime
						,Quantity---------------------15
						,Filler2
						,NULL
						,NULL
						,Sell_CmId
						,Sell_Branch---------------------20
						,null
						,null
						,Sell_CustodianParticipent
						,Sell_SideConfirmation
						,null---------------------25
						,Sell_CoveredUncovered
						,null
						,null
						,Sell_OldCustodianParticipent
						,Sell_OldCMCode---------------------30
						,null
						,Sell_TerminalID
						,null
						,Sell_Orderno
						,null---------------------35
						,Sell_Ucc
						,null
						,Sell_Remarks
						,null
						,Sell_Position---------------------40
						,null
						,Sell_PropiterClientFlag
						,ActiveFlag
						,TradeExecutionTimeStamp
						,OrderTimeStamp---------------------45
from #TempTradeBSECDXCsv where Buy_Ucc is not null AND Sell_Ucc is not null

Update #TempTradeBSECDXCsv 
SET Sell_Broker=null,Sell_CmId=null,Sell_Branch=null,Sell_CustodianParticipent=null,
Sell_SideConfirmation=null,Sell_CoveredUncovered=null,Sell_OldCustodianParticipent=null,Sell_OldCMCode=null,
Sell_TerminalID=null,Sell_Orderno=null,Sell_Ucc=null,Sell_Remarks=null,
Sell_Position=null,Sell_PropiterClientFlag=null
Where Buy_Ucc is not null AND Sell_Ucc is not null

-----------------------Financial Year Calculation----------------------------------------------------------------------------------------------------------
                
				DECLARE @DATE VARCHAR(20)
				DECLARE @FY datetime
				DECLARE @SETT_FY VARCHAR(250)
				DECLARE @DTDIFF	int

               set @FY=(select top(1) Trade_Date from #TempTradeBSECDXCsv)

If (@FY >=@LckTradeDate and @FY<=@ExpireDate)
begin

	            SET @DTDIFF=CAST(MONTH(@FY) AS INT)
				IF(@DTDIFF>=1 AND @DTDIFF<=3)
				BEGIN
					SET @SETT_FY=NULL
					SET @SETT_FY=  CAST((CAST(YEAR(@FY) AS INT)-1) AS VARCHAR(50) )+'-'+CAST(YEAR(@FY) AS VARCHAR(50))
				END
				IF(@DTDIFF>=4 AND @DTDIFF<=12)
				BEGIN
					SET @SETT_FY=NULL
					SET @SETT_FY=  CAST(YEAR(@FY) AS VARCHAR(50))+'-'+CAST((CAST(YEAR(@FY) AS INT)+1) AS VARCHAR(50) )
				END

-----------------------------------------ProductSeriesID
	UPDATE #TempTradeBSECDXCsv set [Productseries_ID]=Commodity_ProductSeriesID
					from Master_Commodity where Commodity_TickerSymbol=Ltrim(Rtrim(Symbol))and  Commodity_ExchangeSegmentID=6
					and ltrim(rtrim(Commodity_Identifier))=ltrim(rtrim(Instrument_Type))
					and Commodity_ExpiryDate=expiry_date
					and Commodity_StrikePrice=Strike_Price
					and isnull(Commodity_TickerSeries,'FF')=isnull(Option_Type,'FF')
					

----	We can create the missing products from the information contained in the trade file itself for the missing ProductSeries
	
----	First we can create the entry in master_commodity if ProductID already exists

	Update #TempTradeBSECDXCsv Set [ProductID]=(select top(1) Commodity_ProductID 
												from Master_Commodity where
												Commodity_ExchangeSegmentID=6
												and ltrim(rtrim(Symbol))=ltrim(rtrim(Commodity_TickerSymbol))
												and ltrim(rtrim(Instrument_Type))=ltrim(rtrim(Commodity_Identifier))
												and ltrim(rtrim(isnull(Option_Type,'FF')))=ltrim(rtrim(isnull(Commodity_TickerSeries,'FF')))	
												and ProductSeries_ID is NULL)
	
----	Next we might have a situation where ProductID still is un-identified. In that case we find the ProductID from the Master_Products itself
----	provided the derivative type product have been already opened manually by the user using 'Masters-Products' link

	Update #TempTradeBSECDXCsv Set [ProductID]=Products_ID from Master_Products
												where ltrim(rtrim(Symbol))=ltrim(rtrim(Products_ShortName))
												and ltrim(rtrim(Instrument_Type))='OPTCUR'
												AND Products_ProductTypeID=9
												and Products_ProductSubTypeID=21 
												and Products_OptionType=
														case when left(ltrim(rtrim(isnull(Option_Type,'FF'))),1)='C' then 'CALL' 
														when left(ltrim(rtrim(isnull(Option_Type,'FF'))),1)='P' then 'PUT' 
														Else NULL End
												and Products_ExerciseStyle=
														case when right(ltrim(rtrim(isnull(Option_Type,'FF'))),1)='E' then 'EUROPEAN' 
														when right(ltrim(rtrim(isnull(Option_Type,'FF'))),1)='A' then 'AMERICAN' 
														Else NULL End
												and ProductSeries_ID is NULL
												and ProductID is NULL									

		Update #TempTradeBSECDXCsv Set ProductID=Products_ID from Master_Products
												where ltrim(rtrim(Instrument_Type))='FUTCUR'
												and Products_ProductTypeID=9
												and Products_ProductSubTypeID=20
												and ltrim(rtrim(Products_ShortName))=ltrim(rtrim(Symbol))
												and ProductSeries_ID is NULL
												and ProductID is NULL							


----	Now we create entries in Master_Commodity for the missing products whose ProductID is identified
INSERT INTO [Master_Commodity]
           ([Commodity_ProductID]
           ,[Commodity_ExchangeSegmentID]
           ,[Commodity_EffectiveDate]
           ,[Commodity_TickerSymbol]
           ,[Commodity_Identifier]
           ,[Commodity_TickerSeries]
           ,[Commodity_StrikePrice]
           ,[Commodity_TradingLot]
           ,[Commodity_TradingUnitID]
           ,[Commodity_QuoteCurrencyID]
           ,[Commodity_QuoteLot]
           ,[Commodity_QuoteUnitID]
           ,[Commodity_ContractEndDate]
           ,[Commodity_TenderEndDate]
           ,[Commodity_DeliveryEndDate]
           ,[Commodity_ExpiryDate]
           ,[Commodity_ConvNumerator]
           ,[Commodity_ConDenominator]
           ,[Commodity_CreateUser]
           ,[Commodity_CreateDateTime]
           ,[Commodity_GeneralNumerator]
           ,[Commodity_GeneralDenominator]
           ,[Commodity_LotNumerator]
           ,[Commodity_LotDenominator]
           ,[Commodity_PriceNumerator]
           ,[Commodity_PriceDenominator])

SELECT Distinct ProductID,6,@CreateDate,ltrim(rtrim(Symbol)),ltrim(rtrim(Instrument_Type)),isnull(Option_Type,'FF'),isnull(Strike_Price,0.00),
		Case when Symbol='JPYINR' then 100000.00 Else 1000.00 End,1,1,
		Case when Symbol='JPYINR' then 100.00 Else 1.00 End,1,expiry_date,expiry_date,expiry_date,expiry_date,
		1000,1,@ModifyUser,GETDATE(),1000,1,1000,1,1,1
FROM #TempTradeBSECDXCsv where ProductSeries_ID is NULL and ProductID is Not NULL

--- Once again Update the Temp table with the productseriesid now created .........

	UPDATE #TempTradeBSECDXCsv set [Productseries_ID]=Commodity_ProductSeriesID
					from Master_Commodity where Commodity_TickerSymbol=Ltrim(Rtrim(Symbol))and  Commodity_ExchangeSegmentID=6
					and ltrim(rtrim(Commodity_Identifier))=ltrim(rtrim(Instrument_Type))
					and Commodity_ExpiryDate=expiry_date
					and Commodity_StrikePrice=Strike_Price
					and isnull(Commodity_TickerSeries,'FF')=isnull(Option_Type,'FF')
					and [Productseries_ID] is NULL


	Update #TempTradeBSECDXCsv Set [UnitPriceQuantity]=Quantity*(isnull(Commodity_LotNumerator,1)/isnull(Commodity_LotDenominator,1))
									from Master_Commodity
									where ProductSeries_ID=Commodity_ProductSeriesID

--select * from #TempTradeBSECDXCsv
----------------------------------------CUSTOMER ID--------------------------------------------------------------------
					UPDATE #TempTradeBSECDXCsv set [Customer_ID]=crg_cntID
					from tbl_master_contactExchange
					where ltrim(rtrim(crg_tcode))=(case when Buy_Ucc is null then ltrim(rtrim(Sell_Ucc)) else ltrim(rtrim(Buy_Ucc)) end)
					and crg_exchange='BSE - CDX'
------------------------------------------------------------- ---------------------------------------------------------------
------------------------------------Pro_Cli--------------- ---------------------------------------------------------------
					Update #TempTradeBSECDXCsv
					SET [Pro_Cli]= (case when Buy_Ucc is not null and ltrim(rtrim(Buy_Ucc))='Own' then 2
											when Sell_Ucc is not null and ltrim(rtrim(Sell_Ucc))='Own' then 2 else 1 end)

----------- Update the brokerID in case the terminalD are mapped to a broker -------------------
			Update #TempTradeBSECDXCsv Set [BrokerID]=TradingTerminal_BrokerID 
								from Master_TradingTerminal
								where TradingTerminal_CompanyID=@ExchangeTrades_CompanyID
								and TradingTerminal_ExchangeSegmentID=@ExcSegmt
								and ltrim(rtrim(TradingTerminal_TerminalID))=
								(CASE WHEN Buy_TerminalID IS NULL THEN Sell_TerminalID ELSE  Buy_TerminalID END)


----select * from #TempTradeBSECDXCsv
----------------------------------------------------Delete All Unidentified Trades for this instance---------------------------------------
								Delete from trans_comexchangetrades where
								ComExchangeTrades_FinYear=@SETT_FY
								and ComExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
								and ComExchangeTrades_Segment=@ExcSegmt
								and ComExchangeTrades_TradeDate=@FY
								and (ComExchangeTrades_CustomerID IS NULL or ComExchangeTrades_ProductSeriesID is NULL)
------------------------------------------------------------INSRT START-------------------------------------------------------------------

                       insert into trans_comexchangetrades
                    (
					ComExchangeTrades_FinYear,
					ComExchangeTrades_CompanyID,
					ComExchangeTrades_Segment,
					ComExchangeTrades_BranchID,
					ComExchangeTrades_CustomerID,-----------------------------5
					ComExchangeTrades_TerminalID,
					ComExchangeTrades_CTCLID,
					ComExchangeTrades_SettlementNumber,
					ComExchangeTrades_SettlementType,
					ComExchangeTrades_TradeDate,-----------------------------10
					ComExchangeTrades_TradeNumber,
					ComExchangeTrades_TradeEntryTime,
					ComExchangeTrades_TradeModifyTime,
					ComExchangeTrades_OrderNumber,
					ComExchangeTrades_OrderEntryTime,-----------------------------15
					ComExchangeTrades_OrderModifyTime,
					ComExchangeTrades_TransactionType,
					ComExchangeTrades_ProCli,
					ComExchangeTrades_CustomerUcc,
					ComExchangeTrades_CustodialParticipantCode,-----------------------------20
					ComExchangeTrades_SecurityType,
				    ComExchangeTrades_SecurityCode,
					ComExchangeTrades_SecuritySymbol,
					ComExchangeTrades_SecuritySeries,
					ComExchangeTrades_SecurityExpiry,-----------------------------25
					ComExchangeTrades_SecurityOptionType,
					ComExchangeTrades_SecurityStrikePrice,
					ComExchangeTrades_ProductSeriesID,
					ComExchangeTrades_BuySellFlag,
					ComExchangeTrades_QuantityLots,-----------------------------30
					ComExchangeTrades_UnitPrice,
					ComExchangeTrades_UnitPriceQuantity,
					ComExchangeTrades_MarketValue,
					ComExchangeTrades_CustodialFlag,
					ComExchangeTrades_CreateUser,-----------------------------35
					ComExchangeTrades_CreateDateTime,
					ComExchangeTrades_TradingMemberID,
					ComExchangeTrades_Remarks,
					ComExchangeTrades_ImportType,-----------------------------40
					ComExchangeTrades_StrikePrice,------ use this for active/passive flag...as there is already a field for strike price called 'ComExchangeTrades_SecurityStrikePrice'
					ComExchangeTrades_ClearingMemberID,
					ComExchangeTrades_TradeStatus,
					ComExchangeTrades_OldCustodialParticipantCode,
					ComExchangeTrades_CounterPartyID,
					ComExchangeTrades_LastUpdateDate-----------------------------50
					)

			select  
					@SETT_FY,
					@ExchangeTrades_CompanyID,
					@ExcSegmt,
						(Select Cnt_BranchID From Tbl_Master_Contact Where Cnt_InternalID=
						((Select
						(Case 
							When ((Select Case When Len(ISNULL(TradingTerminal_AllTradeID,''))>0 or Len(ISNULL(TradingTerminal_CliTradeID,''))>0 or Len(ISNULL(TradingTerminal_ProTradeID,''))>0 
									Then 1 Else 2 End from Master_TradingTerminal where TradingTerminal_TerminalID=(CASE WHEN Buy_TerminalID IS NULL THEN Sell_TerminalID ELSE  Buy_TerminalID END)
									and TradingTerminal_ExchangeSegmentID=@ExcSegmt)=1)
							Then (Select 
									Case
										When Pro_Cli=1 Then 
											Case
												When ltrim(rtrim(ISNULL(TradingTerminal_AllTradeID,'')))<>'' Then TradingTerminal_AllTradeID  
												When ltrim(rtrim(ISNULL(TradingTerminal_AllTradeID,'')))='' And ltrim(rtrim(ISNULL(TradingTerminal_CliTradeID,'')))<>'' Then TradingTerminal_CliTradeID
												Else (Select Crg_CntID from Tbl_Master_ContactExchange 
													Where Crg_Company=@ExchangeTrades_CompanyID and Crg_Exchange='BSE - CDX' and Crg_TCode=(case when Buy_Ucc is null then Sell_Ucc else Buy_Ucc end)) 
											End
										When Pro_Cli=2 Then
											Case
												When ltrim(rtrim(ISNULL(TradingTerminal_AllTradeID,'')))<>'' Then TradingTerminal_AllTradeID 
												When ltrim(rtrim(ISNULL(TradingTerminal_AllTradeID,'')))='' And ltrim(rtrim(ISNULL(TradingTerminal_ProTradeID,'')))<>'' Then TradingTerminal_ProTradeID
												Else (Select Crg_CntID from Tbl_Master_ContactExchange 
													Where Crg_Company=@ExchangeTrades_CompanyID and Crg_Exchange='BSE - CDX' and Crg_TCode=(case when Buy_Ucc is null then Sell_Ucc else Buy_Ucc end)) 
											End
									End
									from Master_TradingTerminal where TradingTerminal_TerminalID=(CASE WHEN Buy_TerminalID IS NULL THEN Sell_TerminalID ELSE  Buy_TerminalID END) and TradingTerminal_ExchangeSegmentID=@ExcSegmt)
									
							Else
								(Select Crg_CntID from Tbl_Master_ContactExchange 
								Where Crg_Company=@ExchangeTrades_CompanyID and Crg_Exchange='BSE - CDX' and Crg_TCode=(case when Buy_Ucc is null then Sell_Ucc else Buy_Ucc end)) 
						End)))),

				(Select
				(Case 
					When ((Select Case When Len(ISNULL(TradingTerminal_AllTradeID,''))>0 or Len(ISNULL(TradingTerminal_CliTradeID,''))>0 or Len(ISNULL(TradingTerminal_ProTradeID,''))>0 
							Then 1 Else 2 End from Master_TradingTerminal where TradingTerminal_TerminalID=(CASE WHEN Buy_TerminalID IS NULL THEN Sell_TerminalID ELSE  Buy_TerminalID END)
							and TradingTerminal_ExchangeSegmentID=@ExcSegmt)=1)
					Then (Select 
							Case
								When Pro_Cli=1 Then 
									Case
										When ltrim(rtrim(ISNULL(TradingTerminal_AllTradeID,'')))<>'' Then TradingTerminal_AllTradeID  
										When ltrim(rtrim(ISNULL(TradingTerminal_AllTradeID,'')))='' And ltrim(rtrim(ISNULL(TradingTerminal_CliTradeID,'')))<>'' Then TradingTerminal_CliTradeID
										Else (Select Crg_CntID from Tbl_Master_ContactExchange 
											Where Crg_Company=@ExchangeTrades_CompanyID and Crg_Exchange='BSE - CDX' and Crg_TCode=(case when Buy_Ucc is null then Sell_Ucc else Buy_Ucc end)) 
									End
								When Pro_Cli=2 Then
									Case
										When ltrim(rtrim(ISNULL(TradingTerminal_AllTradeID,'')))<>'' Then TradingTerminal_AllTradeID 
										When ltrim(rtrim(ISNULL(TradingTerminal_AllTradeID,'')))='' And ltrim(rtrim(ISNULL(TradingTerminal_ProTradeID,'')))<>'' Then TradingTerminal_ProTradeID
										Else (Select Crg_CntID from Tbl_Master_ContactExchange 
											Where Crg_Company=@ExchangeTrades_CompanyID and Crg_Exchange='BSE - CDX' and Crg_TCode=(case when Buy_Ucc is null then Sell_Ucc else Buy_Ucc end)) 
									End
							End
							from Master_TradingTerminal where TradingTerminal_TerminalID=(CASE WHEN Buy_TerminalID IS NULL THEN Sell_TerminalID ELSE  Buy_TerminalID END) and TradingTerminal_ExchangeSegmentID=@ExcSegmt)
							
					Else
						(Select Crg_CntID from Tbl_Master_ContactExchange 
						Where Crg_Company=@ExchangeTrades_CompanyID and Crg_Exchange='BSE - CDX' and Crg_TCode=(case when Buy_Ucc is null then Sell_Ucc else Buy_Ucc end)) 
				End)),

					(case when Buy_TerminalID is  null then Sell_TerminalID else Buy_TerminalID end),
					
	
					(case when Buy_Branch is  null then 
							substring(Sell_Branch,5,16) 
							else 
							substring(Buy_Branch,5,16) end),


				(select top(1) Settlements_Number from Master_Settlements where
					@FY between Settlements_StartDateTime and Settlements_EndDateTime
					 and Settlements_ExchangeSegmentID=6 and Settlements_TypeSuffix='F' AND Settlements_FinYear=@SETT_FY),
				'F',
                @FY,
				Trade_No,
				cast(Trade_Date as datetime),
				cast(Trade_Date as datetime),
				(case when Buy_orderno is null then Sell_Orderno else Buy_orderno end),
				OrderTimeStamp,
				OrderTimeStamp,
				'Orgnl',
                Pro_Cli,
                 (case when Buy_Ucc is  null then Sell_Ucc else Buy_Ucc end),
                 (case when Buy_CustodianParticipent is null then Sell_CustodianParticipent else Buy_CustodianParticipent end),
				LTRIM(RTRIM(Instrument_Type)),
					null,
					LTRIM(RTRIM(Symbol)),
					LTRIM(RTRIM(ISNULL(Option_Type,'FF'))),
                    expiry_date,     
                    LTRIM(RTRIM(ISNULL(Option_Type,'FF'))),
					ISNULL(Strike_Price,0.00),
					[Productseries_ID],
					(case when Buy_Ucc is not null then 1 else 2 end), 
                    Quantity,
					Price,
					[UnitPriceQuantity],
					convert(float,[UnitPriceQuantity])*convert(float,Price),
					(case when Buy_SideConfirmation is null 
						then 
							case when Sell_SideConfirmation in ('0','N') then 'N' else 'Y' end
						else 
							case when Buy_SideConfirmation in ('0','N') then 'N' else 'Y' end 
					end),	
                   @ModifyUser,
				   getdate(),
				  --ActiveFlag,
				  (case when Buy_Broker is null then Sell_Broker else Buy_Broker end),
				 (case when Buy_Remarks is null then Sell_Remarks else Buy_Remarks end),
				  '1',
				 cast(ActiveFlag as int),
				 (case when Buy_CmId is null then Sell_CmId else Buy_CmId end),
				 Trade_Status,
				 (case when Buy_OldCustodianParticipent is null then Sell_OldCustodianParticipent else Buy_OldCustodianParticipent end),
				 [BrokerID],
				 Case when isnull([BrokerID],'')='' then NULL else @UpdateDate End

				
				from #TempTradeBSECDXCsv 
				where  
				 not exists(select ComExchangeTrades_ID from trans_comexchangetrades 
				 where ComExchangeTrades_TradeDate=@FY 
				 AND ComExchangeTrades_TradeNumber=Trade_No
				 and ComExchangeTrades_Segment=@ExcSegmt
				 and ComExchangeTrades_OrderNumber=(CASE WHEN Buy_orderno IS NULL THEN Sell_Orderno when Sell_Orderno is null then Buy_orderno end))

-----------------------------------------------Update ActivePassive Flag--------------------------------------------------------------------------------------------------------------------------				
---------------------------------------------------Checking For Product SeriesID Is Null---------------------------------
					Select top(1)Ltrim(Rtrim(Trade_Date)) From #TempTradeBSECDXCsv,trans_comexchangetrades
					where @FY=trans_comexchangetrades.ComExchangeTrades_TradeDate
					and (ComExchangeTrades_ProductSeriesID is null or len (ComExchangeTrades_ProductSeriesID)=0)
					and ComExchangeTrades_Segment=@ExcSegmt
					and ComExchangeTrades_CompanyID=@ExchangeTrades_CompanyID

---------------------------------------------------Checking For CustomerID Is Null---------------------------------

					SELECT DISTINCT ComExchangeTrades_CustomerUcc FROM trans_comexchangetrades,#TempTradeBSECDXCsv WHERE
					ComExchangeTrades_Segment=@ExcSegmt AND ComExchangeTrades_TradeDate=@FY
					AND (ComExchangeTrades_CustomerID IS NULL or len(ComExchangeTrades_CustomerID)=0) 
						and ComExchangeTrades_CompanyID=@ExchangeTrades_CompanyID

---------------------------------------------------Showing the Import Summary -------------------------------------------------

				select COMexchangetrades_settlementnumber as [Sett.No],ComExchangeTrades_SettlementType as [Sett.Type],
				sum(rowcnt) as Records,
				sum(isnull(buy,0)) as [Buy Obligation],
				sum(isnull(sell,0)) as [Sell Obligation],
				(sum(isnull(sell,0))-sum(isnull(buy,0))) as [Net Obligation]
				 from
				(select ComExchangeTrades_SettlementNumber,ComExchangeTrades_SettlementType,COUNT(ComExchangeTrades_SettlementType) as rowcnt,
				case when ComExchangeTrades_BuySellFlag=1 then sum(ComExchangeTrades_MarketValue) else null end buy,
				case when  ComExchangeTrades_BuySellFlag=2 then sum(ComExchangeTrades_MarketValue)  else null end as sell
				from trans_comexchangetrades WHERE
				ComExchangeTrades_Segment=@ExcSegmt AND trans_comexchangetrades.ComExchangeTrades_TradeDate=@FY
				and ComExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
				and ComExchangeTrades_TransactionType='Orgnl'
				group by ComExchangeTrades_SettlementNumber,ComExchangeTrades_SettlementType,ComExchangeTrades_BuySellFlag)as bb
				 group by ComExchangeTrades_SettlementNumber,ComExchangeTrades_SettlementType
			
------------------------------------------------------------------------------------------------------------------------------				
----------------------------------------------------Select Terminal ID not present in tradingterminal----------------------------------
					SELECT DISTINCT	(case when Buy_TerminalID is  null then Sell_TerminalID else Buy_TerminalID end) as TERMINALID 
					from #TempTradeBSECDXCsv WHERE (case when Buy_TerminalID is  null then Sell_TerminalID else Buy_TerminalID end)
					NOT IN (Select TradingTerminal_TerminalID from Master_tradingTerminal 
					where tradingterminal_ExchangeSegmentID=@ExcSegmt AND tradingterminal_companyID=@ExchangeTrades_CompanyID)
----------------------------------------------------------------------------------------------------------------
					Select cast(@FY as datetime) as TradeDate

----------------------------------------------------Select Terminal IDs ----------------------------------
					SELECT DISTINCT	ComExchangeTrades_TerminalID from trans_comexchangetrades WHERE
						ComExchangeTrades_Segment=@ExcSegmt AND ComExchangeTrades_TradeDate=@FY
						and ComExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
						and ComExchangeTrades_TransactionType='Orgnl'
--------------------------------------------------------------------------------------------------------------
----------------------------------------------------Select UCC----------------------------------
						SELECT DISTINCT	ComExchangeTrades_CustomerUcc from trans_comexchangetrades WHERE
						ComExchangeTrades_Segment=@ExcSegmt AND ComExchangeTrades_TradeDate=@FY
						and ComExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
						and ComExchangeTrades_TransactionType='Orgnl'

------ And now the brokers part -------
			insert into trans_comexchangetrades
			(ComExchangeTrades_FinYear,ComExchangeTrades_CompanyID,ComExchangeTrades_Segment,ComExchangeTrades_BranchID,ComExchangeTrades_CustomerID,
			ComExchangeTrades_TerminalID,ComExchangeTrades_CTCLID,ComExchangeTrades_SettlementNumber,ComExchangeTrades_SettlementType,ComExchangeTrades_TradeDate,
			ComExchangeTrades_TradeNumber,ComExchangeTrades_TradeEntryTime,ComExchangeTrades_TradeModifyTime,ComExchangeTrades_OrderNumber,
			ComExchangeTrades_OrderEntryTime,ComExchangeTrades_OrderModifyTime,ComExchangeTrades_TransactionType,ComExchangeTrades_ProCli,
			ComExchangeTrades_CustomerUcc,ComExchangeTrades_CustodialParticipantCode,ComExchangeTrades_SecurityType,ComExchangeTrades_SecurityCode,
			ComExchangeTrades_SecuritySymbol,ComExchangeTrades_SecuritySeries,ComExchangeTrades_SecurityExpiry,ComExchangeTrades_SecurityOptionType,
			ComExchangeTrades_SecurityStrikePrice,ComExchangeTrades_ProductSeriesID,ComExchangeTrades_BuySellFlag,ComExchangeTrades_QuantityLots,
			ComExchangeTrades_UnitPrice,ComExchangeTrades_UnitPriceQuantity,ComExchangeTrades_MarketValue,ComExchangeTrades_CustodialFlag,
			ComExchangeTrades_CreateUser,ComExchangeTrades_CreateDateTime,ComExchangeTrades_TradingMemberID,
			ComExchangeTrades_Remarks,ComExchangeTrades_ImportType,ComExchangeTrades_StrikePrice,ComExchangeTrades_ClearingMemberID,
			ComExchangeTrades_TradeStatus,
			ComExchangeTrades_OldCustodialParticipantCode,ComExchangeTrades_CounterPartyID,ComExchangeTrades_LastUpdateDate)

			Select ComExchangeTrades_FinYear,ComExchangeTrades_CompanyID,ComExchangeTrades_Segment,ComExchangeTrades_BranchID,ComExchangeTrades_CounterPartyID,
			ComExchangeTrades_TerminalID,ComExchangeTrades_CTCLID,ComExchangeTrades_SettlementNumber,ComExchangeTrades_SettlementType,ComExchangeTrades_TradeDate,
			ComExchangeTrades_TradeNumber,ComExchangeTrades_TradeEntryTime,ComExchangeTrades_TradeModifyTime,ComExchangeTrades_OrderNumber,
			ComExchangeTrades_OrderEntryTime,ComExchangeTrades_OrderModifyTime,ComExchangeTrades_TransactionType,ComExchangeTrades_ProCli,
			ComExchangeTrades_CustomerUcc,ComExchangeTrades_CustodialParticipantCode,ComExchangeTrades_SecurityType,ComExchangeTrades_SecurityCode,
			ComExchangeTrades_SecuritySymbol,ComExchangeTrades_SecuritySeries,ComExchangeTrades_SecurityExpiry,ComExchangeTrades_SecurityOptionType,
			ComExchangeTrades_SecurityStrikePrice,ComExchangeTrades_ProductSeriesID,
			Case When ComExchangeTrades_BuySellFlag=1 then 2 Else 1 End,
			ComExchangeTrades_QuantityLots,ComExchangeTrades_UnitPrice,ComExchangeTrades_UnitPriceQuantity,ComExchangeTrades_MarketValue,
			ComExchangeTrades_CustodialFlag,ComExchangeTrades_CreateUser,GETDATE(),ComExchangeTrades_TradingMemberID,
			ComExchangeTrades_Remarks,ComExchangeTrades_ImportType,ComExchangeTrades_StrikePrice,ComExchangeTrades_ClearingMemberID,
			ComExchangeTrades_TradeStatus,
			ComExchangeTrades_OldCustodialParticipantCode,ComExchangeTrades_CustomerID,ComExchangeTrades_LastUpdateDate
			From trans_comexchangetrades
			where ComExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
			and ComExchangeTrades_Segment=@ExcSegmt
			and ComExchangeTrades_FinYear=@SETT_FY
			and ComExchangeTrades_LastUpdateDate=@UpdateDate
			and ComExchangeTrades_CreateUser=@ModifyUser
			and ComExchangeTrades_TradeDate=cast(@FY as DateTime)
			and LEFT(ISNULL(ComExchangeTrades_CounterPartyID,'NOR'),2)='BO'

----------------------------------------------------------------------------------------------------------------

					Set @LockMsg=''

	end
	Else
	begin
		Set @LockMsg= 'The Data is Locked' 

	end

END 


---exec [Import_BSECDXTrades_CSV] '\\influxserver\CommonFolderInfluxCRM\TRTM_6286_20111014.CSV',416,66,'COR0000002','','2015-01-01',''


--Select * from trans_comexchangetrades where ExchangeTrades_Segment=66 and ExchangeTrades_TradeDate='2011-04-15' AND  AND Exchangetrades_BranchID is null

--Delete from trans_comexchangetrades where ExchangeTrades_Segment=66

--select * from Master_Commodity where Equity_ExchsegmentID=5
--select * from Master_Products where Products_ID in (17306,17307)









GO

