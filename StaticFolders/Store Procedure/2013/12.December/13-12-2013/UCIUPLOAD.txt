
-- exec [UCIUPLOAD] 'NSE - CDX','COR0000002','''CLS0000004'',''CLS0000006'',''CLS0000942''','2012-01-01','2013-04-01'
-- exec [UCIUPLOAD] 'BSE - CM','COR0000002','''CLE0000001''','2000-04-01','2013-07-25','',''


ALTER proc [dbo].[UCIUPLOAD]
@Segmentname varchar(50),
@Company varchar(20),
@Clientsinternalid varchar(max),
@Fromdate varchar(25),
@Todate varchar(25),
@BseAccounttype varchar(10),
@Batuser varchar(10)

As
   Begin
		--------------------Main Table Creation------------------------------------------------
	Create Table #ClientUccNSE 
							(SrlNo int Identity,clientid varchar(max),Segment char(1),[ClientCode] varchar(max),[ClientName] varchar(max),Category varchar(max),Pan varchar(max),Gender char(20),
							[FathersHGName] varchar (max),Maritalstatus varchar(max),Nationality varchar(max),[NationalityOther] varchar(max),ClientEmail varchar(max),ClientAddress1 varchar(max),
							ClientAddress2 varchar(max),ClientAddress3 varchar(max),Clientcity varchar(max),Clientstatecode varchar(max),Clientstateother varchar(max),
							Clientcountrycode varchar(max),Clientpin varchar(max),AddressFlag Char(1),PermanantClientAddress1 varchar(max),
							PermanantClientAddress2 varchar(max),PermanantClientAddress3 varchar(max),PermanantClientcity varchar(max),PermanantClientstatecode varchar(max),
							PermanantClientstateother varchar(max),PermanantClientcountrycode char(3),PermanantClientpin varchar(max),Residenceisdcode varchar(max),
							Residencestdcode varchar(max),Residencephone varchar(max),Mobileno varchar(max),Offcisdcode varchar(max),Offcstdcode varchar(max),
							Officephone varchar(max),DOB varchar(max),UIDNO varchar(max),Bankname1 varchar(max),Bankaddress1 varchar(max),BankAccNo1 varchar(max),BankAcctype1 varchar(max),
							Bankname2 varchar(max),Bankaddress2 varchar(max),BankAccNo2 varchar(max),BankAcctype2 varchar(max),Bankname3 varchar(max),Bankaddress3 varchar(max),BankAccNo3 varchar(max),BankAcctype3 varchar(max),
							DPname1 varchar(max),DPID1 varchar(max),BenAccno1 varchar(max),DPname2 varchar(max),DPID2 varchar(max),BenAccno2 varchar(max),DPname3 varchar(max),DPID3 varchar(max),BenAccno3 varchar(max),
							CIN varchar(max),AnnualIncome varchar(max),AnnualIncomedate varchar(max),Networth varchar (15),Networthdate varchar(max),PEP varchar(max),Incorporationplace varchar(max),
							Occupation varchar(max),OtherOccupation varchar(max),Commencementdate varchar(max),CPcode varchar(max),Regnoclient varchar(max),RegistringAuth varchar(max),Regnplace varchar(max),
							Regndate varchar(max),Inpersonverification varchar(max),ClientAgreementdate varchar(max),SLBUCC varchar(max),UpdationSMSEmailFlag char(1),Relationship varchar(max),
							SMSEmailfacility char(10),Prooftype varchar(max),Proofnumber varchar(max),Proofplace varchar(max),Proofdate varchar(max),Clientstatus varchar(max),Remarks varchar(max),Corporateclienttype char(1),
							Contpersonname1 varchar(500),Contpersondeg1 varchar(500),Contpersonpan1 varchar(500),contpersonaddress1 varchar(500),contpersonphone1 varchar(60),Contpersondin1 varchar(500),Contpersonuid1 varchar(500),Contpersonemail1 varchar(500),
							Contpersonname2 varchar(500),Contpersondeg2 varchar(500),Contpersonpan2 varchar(500),contpersonaddress2 varchar(500),contpersonphone2 varchar(500),Contpersondin2 varchar(500),Contpersonuid2 varchar(500),Contpersonemail2 varchar(500),
							Contpersonname3 varchar(500),Contpersondeg3 varchar(500),Contpersonpan3 varchar(500),contpersonaddress3 varchar(500),contpersonphone3 varchar(500),Contpersondin3 varchar(500),Contpersonuid3 varchar(500),Contpersonemail3 varchar(500),
							Contpersonname4 varchar(500),Contpersondeg4 varchar(500),Contpersonpan4 varchar(500),contpersonaddress4 varchar(500),contpersonphone4 varchar(500),Contpersondin4 varchar(500),Contpersonuid4 varchar(500),Contpersonemail4 varchar(500),
							Contpersonname5 varchar(500),Contpersondeg5 varchar(500),Contpersonpan5 varchar(500),contpersonaddress5 varchar(500),contpersonphone5 varchar(500),Contpersondin5 varchar(500),Contpersonuid5 varchar(500),Contpersonemail5 varchar(500),
							Contpersonname6 varchar(500),Contpersondeg6 varchar(500),Contpersonpan6 varchar(500),contpersonaddress6 varchar(500),contpersonphone6 varchar(500),Contpersondin6 varchar(500),Contpersonuid6 varchar(500),Contpersonemail6 varchar(500),
							Contpersonname7 varchar(500),Contpersondeg7 varchar(500),Contpersonpan7 varchar(500),contpersonaddress7 varchar(500),contpersonphone7 varchar(500),Contpersondin7 varchar(500),Contpersonuid7 varchar(500),Contpersonemail7 varchar(500),
							Contpersonname8 varchar(500),Contpersondeg8 varchar(500),Contpersonpan8 varchar(500),contpersonaddress8 varchar(500),contpersonphone8 varchar(500),Contpersondin8 varchar(500),Contpersonuid8 varchar(500),Contpersonemail8 varchar(500),
							Contpersonname9 varchar(500),Contpersondeg9 varchar(500),Contpersonpan9 varchar(500),contpersonaddress9 varchar(500),contpersonphone9 varchar(500),Contpersondin9 varchar(500),Contpersonuid9 varchar(500),Contpersonemail9 varchar(500),
							Contpersonname10 varchar(500),Contpersondeg10 varchar(500),Contpersonpan10 varchar(500),contpersonaddress10 varchar(500),contpersonphone10 varchar(500),Contpersondin10 varchar(500),Contpersonuid10 varchar(500),Contpersonemail10 varchar(500),
							Contpersonname11 varchar(500),Contpersondeg11 varchar(500),Contpersonpan11 varchar(500),contpersonaddress11 varchar(500),contpersonphone11 varchar(500),Contpersondin11 varchar(500),Contpersonuid11 varchar(500),Contpersonemail11 varchar(500),
							Contpersonname12 varchar(500),Contpersondeg12 varchar(500),Contpersonpan12 varchar(500),contpersonaddress12 varchar(500),contpersonphone12 varchar(500),Contpersondin12 varchar(500),Contpersonuid12 varchar(500),Contpersonemail12 varchar(500),
							Contpersonname13 varchar(500),Contpersondeg13 varchar(500),Contpersonpan13 varchar(500),contpersonaddress13 varchar(500),contpersonphone13 varchar(500),Contpersondin13 varchar(500),Contpersonuid13 varchar(500),Contpersonemail13 varchar(500),
							Contpersonname14 varchar(500),Contpersondeg14 varchar(500),Contpersonpan14 varchar(500),contpersonaddress14 varchar(500),contpersonphone14 varchar(500),Contpersondin14 varchar(500),Contpersonuid14 varchar(500),Contpersonemail14 varchar(500),
							Contpersonname15 varchar(500),Contpersondeg15 varchar(500),Contpersonpan15 varchar(500),contpersonaddress15 varchar(500),contpersonphone15 varchar(500),Contpersondin15 varchar(500),Contpersonuid15 varchar(500),Contpersonemail15 varchar(500),
							Contpersonname16 varchar(500),Contpersondeg16 varchar(500),Contpersonpan16 varchar(500),contpersonaddress16 varchar(500),contpersonphone16 varchar(500),Contpersondin16 varchar(500),Contpersonuid16 varchar(500),Contpersonemail16 varchar(500),
							Contpersonname17 varchar(500),Contpersondeg17 varchar(500),Contpersonpan17 varchar(500),contpersonaddress17 varchar(500),contpersonphone17 varchar(500),Contpersondin17 varchar(500),Contpersonuid17 varchar(500),Contpersonemail17 varchar(500),
							Contpersonname18 varchar(500),Contpersondeg18 varchar(500),Contpersonpan18 varchar(500),contpersonaddress18 varchar(500),contpersonphone18 varchar(500),Contpersondin18 varchar(500),Contpersonuid18 varchar(500),Contpersonemail18 varchar(500),
							Contpersonname19 varchar(500),Contpersondeg19 varchar(500),Contpersonpan19 varchar(500),contpersonaddress19 varchar(500),contpersonphone19 varchar(500),Contpersondin19 varchar(500),Contpersonuid19 varchar(500),Contpersonemail19 varchar(500),
							Contpersonname20 varchar(500),Contpersondeg20 varchar(500),Contpersonpan20 varchar(500),contpersonaddress20 varchar(500),contpersonphone20 varchar(500),Contpersondin20 varchar(500),Contpersonuid20 varchar(500),Contpersonemail20 varchar(500),
							Fileendflag char(1),ValidationForInternal varchar(50))
							
		Create Table #Nsemasterfiled (masterautoid int identity,fieldname varchar(max),Path varchar(max))
		insert into #Nsemasterfiled
		select '[ClientCode]','General-->Client Id (UCC)' union all select 'ClientName','General-->First Name' union all 
		select 'Category','General-->Legal Status/Category' union all 
		select 'Pan','Registration-->Add New' union all select 'Gender','General-->Select Gender' union all select 'FathersHGName','Family-->Add New (Mandatory for Individual)'union all 
		select 'Maritalstatus','General-->Select Marital Status' union all 
		select 'Nationality','Correspondence-->Address (Mandatory for Individual)' union all select 'NationalityOther','Correspondence-->Address (Case Of Other Than India)' union all 
		select 'ClientEmail','Correspondence-->Email' union all select 'ClientAddress1','Correspondence-->Address' union all 
		select 'ClientAddress2','Correspondence-->Address' union all 
		select 'ClientAddress3','Correspondence-->Address' union all select 'Clientcity','Correspondence-->Address' union all 
		select 'Clientstatecode ','Correspondence-->Address' union all 
		select 'Clientstateother','Correspondence-->Address' union all select 'Clientcountrycode','Correspondence-->Address' union all 
		select 'Clientpin','Correspondence-->Address' union all 
		select 'PermanantClientAddress1','Correspondence-->Address' union all select 'PermanantClientAddress2','Correspondence-->Address' union all 
		select 'PermanantClientAddress3','Correspondence-->Address' union all select 'PermanantClientcity','Correspondence-->Address' union all 
		select 'PermanantClientstatecode', 'Correspondence-->Address' union all 
		select 'PermanantClientcountrycode', 'Correspondence-->Address' union all select 'PermanantClientpin', 'Correspondence-->Address' union all 
		select 'Residenceisdcode','Correspondence-->Phone' union all select 'Residencestdcode','Correspondence-->Phone' union all 
		select 'Residencephone','Correspondence-->Phone' union all select 'Mobileno','Correspondence-->Phone' union all select 'Offcisdcode','Correspondence-->Phone'union all 
		select 'Offcstdcode','Correspondence-->Phone' union all select 'Officephone','Correspondence-->Phone' union all select 'DOB','General-->D.O.B'union all 
		select 'UIDNO','Registration-->Statutory Registration' union all select 'Bankname1','Bank-->Bank Details' union all select 'Bankaddress1','Bank-->Bank Details' union all 
		select 'BankAccNo1' ,'Bank-->Bank Details' union all select 'BankAcctype1','Bank-->Bank Details' union all select 'Bankname2','Bank-->Bank Details'union all 
		select 'Bankaddress2','Bank-->Bank Details' union all select 'BankAccNo2','Bank-->Bank Details' union all select 'BankAcctype2','Bank-->Bank Details'union all 
		select 'Bankname3','Bank-->Bank Details' union all select 'Bankaddress3','Bank-->Bank Details' union all select 'BankAccNo3','Bank-->Bank Details'union all 
		select 'BankAcctype3','Bank-->Bank Details' union all select 'DPname1','DP-->Add New'union all select 'DPID1','DP-->Add New'union all 
		select 'BenAccno1','DP-->Add New' union all select 'DPname2','DP-->Add New' union all select 'DPID2','DP-->Add New' union all 
		select 'BenAccno2','DP-->Add New' union all select 'DPname3','DP-->Add New' union all select 'DPID3 ','DP-->Add New' union all 
		select 'BenAccno3','DP-->Add New'union all select 'CIN ','Registration-->Statutory Registration' union all select 'AnnualIncome ','Bank-->Investment'union all 
		select 'AnnualIncomedate ','Bank-->Investment (Mandatory field if Net worth details is not provided)'union all select 'Networth','Bank-->Investment'union all select 'Networthdate ','Bank-->Investment (Mandatory if Gross Annual Income  is not provided)'union all 
		select 'PEP ','Other-->PEP'union all select 'Incorporationplace ','General-->Place of Incorporation'union all select 'Occupation ','General-->Profession'union all 
		select 'Commencementdate ','General-->Date of Commencement of business' union all 
		select 'Regnoclient','Registration-->Statutory Registration (Type always Other and Registration Authority Name Remarks always "ROC")'union all select 'RegistringAuth ','Registration-->Statutory Registration'union all 
		select 'Regnplace ','Registration-->Statutory Registration'union all 
		select 'Regndate ','Registration-->Statutory Registration' union all select 'Inpersonverification ','Other-->In person Verification'union all 
		select 'ClientAgreementdate ','Registration-->Exchange/DP Segment Registrations'union all 
	     
		select 'SMSEmailfacility','Correspondence-->Email/Phone (Type of Facility column shall be 1 (Email), 2 (SMS) or 3 (SMS & Email))'union all select 'Prooftype','Registration-->Statutory Registration (Case of Pan_Exempt)'union all select 'Proofnumber','Registration-->Statutory Registration (Case of Pan_Exempt)'union all 
		select 'Proofplace','Registration-->Statutory Registration (Case of Pan_Exempt)'union all select 'Proofdate','Registration-->Statutory Registration (Case of Pan_Exempt)'union all select 'Clientstatus','General-->Contact Status'union all 
		select 'Contpersonname1','General-->Add Contact Person'union all 
		select 'Contpersondeg1','General-->Add Contact Person'union all select 'Contpersonpan1','General-->Add Contact Person'union all 
		select 'contpersonaddress1','General-->Add Contact Person'union all select 'contpersonphone1','General-->Add Contact Person'union all 
		select 'Contpersondin1','General-->Add Contact Person'union all select 'Contpersonuid1','General-->Add Contact Person'union all select 'Contpersonemail1','General-->Add Contact Person'union all 
		select 'Contpersonname2','General-->Add Contact Person'union all select 'Contpersondeg2','General-->Add Contact Person'union all select 'Contpersonpan2','General-->Add Contact Person'union all 
		select 'contpersonaddress2','General-->Add Contact Person'union all select 'contpersonphone2','General-->Add Contact Person'union all select 'Contpersondin2','General-->Add Contact Person'union all 
		select 'Contpersonuid2','General-->Add Contact Person'union all select 'Contpersonemail2','General-->Add Contact Person'union all select 'Contpersonname3 ','General-->Add Contact Person'union all 
		select 'Contpersondeg3','General-->Add Contact Person'union all select 'Contpersonpan3','General-->Add Contact Person'union all select 'contpersonaddress3','General-->Add Contact Person'union all 
		select 'contpersonphone3','General-->Add Contact Person'union all select 'Contpersondin3','General-->Add Contact Person'union all select 'Contpersonuid3','General-->Add Contact Person'union all 
		select 'Contpersonemail3','General-->Add Contact Person'
		
		
		
	
		
		
		Create Table #ClientUccmcxcomm
					(srno int identity,clientid varchar(50),clientucc varchar(10),clientfirstname varchar(100),clientmiddlename varchar(50),clientlastname varchar(50),
					category varchar(2),address1 varchar(100),address2 varchar(100),address3 varchar(100),city varchar(50),state varchar(50),country varchar(100),pin varchar(10),
					phonenumber varchar(25),agreementdate varchar(15),dateofbirth varchar(15),pan varchar(15),wardno varchar(25),uin varchar(25),bankname varchar(75),bankaddress varchar(300),
					bankaccno varchar(30),bankacctype varchar(5),dpname varchar(4),dpid varchar(16),dpparticipantname varchar (500),benaccid varchar(100),dpnamecdsl varchar(4),dpidcdsl varchar(160),
					dpparticipantnamecdsl varchar (250),benaccidcdsl varchar(100),passportno varchar(30),passportplace varchar(50),passportdate varchar(15),passportexpdate varchar(15),drvlicence varchar(25),
					drvlicencenceplace varchar(50),drvlicencedate varchar(15),drvlicenceexpdate varchar(15),voterid varchar(25),voteridplace varchar(50),voteriddate varchar(15),retioncardno varchar(25),rationcardplace varchar(25),
					rationcarddate varchar(15),clientregnno varchar(30),clientregauth varchar(100),clientregplace varchar(100),clientregdate varchar(15),introducername varchar(60),introducerclientid varchar(10),introrelation varchar(25),
					dealingwithoth varchar(5),relationcode varchar(10),status varchar(2),reserved1 varchar(1),Mobileno varchar(20),Emailid varchar(60),reserved2 varchar(1),reserved3 varchar(1),reserved4 varchar(1),EndFlag varchar(1),ValidationForInternal varchar(20))
		
		Create Table #Mcxmasterfiled (masterautoid int identity,fieldname varchar(max),Path varchar(max))
		Insert Into #Mcxmasterfiled
		select 'clientucc','General-->Client Id (UCC)' union all select 'clientfirstname','General-->First Name'union all select 'clientmiddlename','General-->Middle Name'union all select 'clientlastname','General-->Last Name'union all select 
					'category','General-->Legal Status/Category'union all select 'address1','Correspondence-->Address'union all select 'address2','Correspondence-->Address'union all select 'address3','Correspondence-->Address'union all select 'city','Correspondence-->Address'union all select 'state','Correspondence-->Address'union all select 'country','Correspondence-->Address'union all select 'pin','Correspondence-->Address'
					union all select 
					'phonenumber','Correspondence-->Phone'union all select 'agreementdate','Registration-->Exchange/DP Segment Registrations'union all select 'dateofbirth','General-->DOB'union all select 'pan','Registration-->Statutory Registrations'union all select 'wardno','Registration-->Statutory Registrations'union all select 'uin','Registration-->Statutory Registrations'union all select 'bankname','Registration-->Statutory Registrations'union all select 'bankaddress','Bank-->Bank Details'
					union all select 
					'bankaccno','Bank-->Bank Details'union all select 'bankacctype','Bank-->Bank Details'union all select 'dpname','DP-->Add New'union all select 'dpid','DP-->Add New'union all select 'dpparticipantname','DP-->Add New'union all select 'benaccid','DP-->Add New'union all select 'dpnamecdsl','DP-->Add New'union all select 'dpidcdsl','DP-->Add New'union all select 
					'dpparticipantnamecdsl','DP-->Add New'union all select 'benaccidcdsl','DP-->Add New'union all select 'passportno','Registration-->Statutory Registrations'union all select 'passportplace','Registration-->Statutory Registrations'union all select 'passportdate','Registration-->Statutory Registrations'union all select 'passportexpdate','Registration-->Statutory Registrations'union all select 'drvlicence','Registration-->Statutory Registrations'
					union all select 
					'drvlicencenceplace','Registration-->Statutory Registrations'union all select 'drvlicencedate','Registration-->Statutory Registrations'union all select 'drvlicenceexpdate','Registration-->Statutory Registrations'union all select 'voterid','Registration-->Statutory Registrations'union all select 'voteridplace','Registration-->Statutory Registrations'union all select 'voteriddate','Registration-->Statutory Registrations'union all select 'retioncardno','Registration-->Statutory Registrations'union all select 'rationcardplace','Registration-->Statutory Registrations'
					union all select 
					'rationcarddate','Registration-->Statutory Registrations'union all select 'clientregnno','Registration-->Statutory Registration (Type always Other and Registration Authority Name Remarks always "ROC")'union all select 'clientregauth','Registration-->Statutory Registration (Type always Other and Registration Authority Name Remarks always "ROC")'union all select 'clientregplace','Registration-->Statutory Registration (Type always Other and Registration Authority Name Remarks always "ROC")'union all select 'clientregdate','Registration-->Statutory Registration (Type always Other and Registration Authority Name Remarks always "ROC")'
					union all  
					select 'status','General-->Contact Status' union all select 'Emailid','Correspondence-->Email' union all select 'Mobileno','Correspondence-->Phone'
		
		
		Create Table #ClientUccBse
					(srno int identity,clientid varchar(max),clientnewmodify varchar(max),clientbatuser varchar(max),clienttype varchar(max),clientstatus varchar(max),clientcategory varchar(max),
					clientcode varchar(max),clientpan varchar(max),clientpep varchar(max),clientaddresspermanant varchar(max),clientaddressflag varchar(max),clientaddresscorespondence varchar(max),
					country varchar(max),state varchar(max),city varchar(max),pin varchar(max),Typeofservice varchar(max),Contactdetailsflag varchar(max),Clientemail varchar(max),Mobnumber varchar(max),
					Stdcode varchar(max),Phonenumber varchar(max),equitycpcode varchar(max),equitycmid varchar(max),Fnocpcode varchar(max),Fnocmid varchar(max),dpname1 varchar(max),dematid1 varchar(max),dp1 varchar(max),
					dpname2 varchar(max),dematid2 varchar(max),dp2 varchar(max),dpname3 varchar(max),dematid3 varchar(max),dp3 varchar(max),bankname1 varchar(max),bankaccno1 varchar(max),bankaddress1 varchar(max),
					bankname2 varchar(max),bankaccno2 varchar(max),bankaddress2 varchar(max),bankname3 varchar(max),bankaccno3 varchar(max),bankaddress3 varchar(max),Clientaggreedate varchar(max),Clientprovidedetails varchar(max),
					Income varchar(max),Incomedate varchar(max),Networth varchar(max),Networthdate varchar(max),Clinetactive varchar(max),Reason varchar(max),clientfirstname varchar(max),clientmiddlename varchar(max),clientlastname varchar(max),
					Andharcard varchar(max),Dateofbirth varchar(max),Clientfullname varchar(max),clientregnno varchar(max),clientregauth varchar(max),clientregdate varchar(max),clientregplace varchar(max),CINyesorno varchar(max),CINNo varchar(max),
					Noofdirectors varchar(max),partner_kartauid varchar(max),partner_coparseneruid varchar(max),contactname1 varchar(max),contactdeg1 varchar(max),contactaddress1 varchar(max),contactemail1 varchar(max),contactpan1 varchar(max),contactphone1 varchar(max),
					contactname2 varchar(max),contactdeg2 varchar(max),contactaddress2 varchar(max),contactemail2 varchar(max),contactpan2 varchar(max),contactphone2 varchar(max),ValidationForInternal varchar(max))
		
		Create Table #Bsemasterfiled (masterautoid int identity,fieldname varchar(max),Path varchar(max))	
		Insert Into #Bsemasterfiled 
		Select 
		 'clientcategory','General-->Legal Status/Category'union all select
		'clientcode','General-->Client Id (UCC)'union all select'clientpan','Registration-->Statutory Registrations'union all select'clientpep','Other-->Pep'union all select'clientaddresspermanant','Correspondence-->Address'union all select'clientaddresscorespondence','Correspondence-->Address'union all select
		'country','Correspondence-->Address'union all select'state','Correspondence-->Address'union all select'city','Correspondence-->Address'union all select'pin','Correspondence-->Address'union all select'Typeofservice','Correspondence-->Phone/Email (1-->SMS,2-->EMAIL,3-->Both,4-->NONE)'union all select'Contactdetailsflag','Correspondence-->Phone (1-->Telephone,2-->Mobile,3-->Both)'union all select'Clientemail','Correspondence-->Email'union all select'Mobnumber','Correspondence-->Phone'union all select
		'Stdcode','Correspondence-->Phone'union all select'Phonenumber','Correspondence-->Phone'union all select'dpname1','DP-->Add New'union all select'dematid1','DP-->Add New'union all select'dp1','DP-->Add New'union all select
		'dpname2 ','DP-->Add New'union all select'dematid2 ','DP-->Add New'union all select'dp2 ','DP-->Add New'union all select'dpname3 ','DP-->Add New'union all select'dematid3 ','DP-->Add New'union all select'dp3 ','DP-->Add New'union all select'bankname1 ','Bank-->Bank Details'union all select'bankaccno1 ','Bank-->Bank Details'union all select'bankaddress1 ','Bank-->Bank Details'union all select
		'bankname2 ','Bank-->Bank Details'union all select'bankaccno2 ','Bank-->Bank Details'union all select'bankaddress2 ','Bank-->Bank Details'union all select'bankname3 ','Bank-->Bank Details'union all select'bankaccno3 ','Bank-->Bank Details'union all select'bankaddress3 ','Bank-->Bank Details'union all select'Clientprovidedetails ','Bank-->Investment (Either Gross Imcome Or Networth should be provide)'union all select
		'Income ','Bank-->Investment (Mandatory field if Net worth details is not provided)'union all select'Incomedate ','Bank-->Investment'union all select'Networth ','Bank-->Investment (Mandatory field if Gross Annual Income details is not provided)'union all select'Networthdate ','Bank-->Investment 'union all select'Clinetactive ','General-->Contact Status'union all select'clientlastname ','General-->Last Name'union all select
		'Dateofbirth ','General-->DOB'union all select'Clientfullname ','General--> Name Options'union all select'clientregnno ','Registration-->Statutory Registration (Type always Other and Registration Authority Name Remarks always "ROC")'union all select'clientregauth ','Registration-->Statutory Registration (Type always Other and Registration Authority Name Remarks always "ROC")'union all select'clientregdate ','Registration-->Statutory Registration (Type always Other and Registration Authority Name Remarks always "ROC")'union all select'clientregplace ','Registration-->Statutory Registration (Type always Other and Registration Authority Name Remarks always "ROC")'union all select'CINNo ','Registration-->Statutory Registration 'union all select
		'Noofdirectors ','General-->Add Contact Person'union all select'partner_kartauid ','General-->Add Contact Person'union all select'partner_coparseneruid ','General-->Add Contact Person'union all select'contactname1 ','General-->Add Contact Person'union all select'contactdeg1 ','General-->Add Contact Person'union all select'contactaddress1 ','General-->Add Contact Person'union all select'contactemail1 ','General-->Add Contact Person'union all select'contactpan1 ','General-->Add Contact Person'union all select'contactphone1 ','General-->Add Contact Person'union all select
		'contactname2 ','General-->Add Contact Person'union all select'contactdeg2 ','General-->Add Contact Person'union all select'contactaddress2 ','General-->Add Contact Person'union all select'contactemail2 ','General-->Add Contact Person'union all select'contactpan2 ','General-->Add Contact Person'union all select'contactphone2 ','General-->Add Contact Person'
			
		Create Table #ContactPersonForBse(Srlno int identity,ClientId varchar(10),Directorflag char(2),ClientUCC varchar(25),Directorname varchar(500),Din varchar(10),Foreginresidenttag char(1),DirPanNo varchar(10),validationerr varchar(5))
		Create Table #FinalExportBse (Finalfield varchar(max))
		--------------------Global Variable Declaretion-----------------------------------------
		Declare @Sqlquery varchar(max),@Errormessage varchar(1000),@Loopcounterstaticforclient bigint,
				@Loopcounterincrementalforclient bigint,@Legalcodevalue varchar(10),@LegalType varchar(10),@Clientid varchar(10),
				@Segmentcol varchar(5),@Clientaddressflag varchar(5),@smsfacility varchar(5),@emailfacility varchar(5),
				@smsemailfacility varchar(5),@smsemailupdationflag varchar(5),@clienttype varchar(5),@sqlupdate varchar(max),
				@dynamicmaritalstatus varchar(10),@dynamiccity varchar(50),@dynamicstate varchar(50),@dynamiccountry varchar(50),@dynamicannualincome varchar(10)
				,@dynamicpolitics varchar(10),@dynamicprofession varchar(10),@dynamicfamily varchar(10),@dynamicstate2 varchar(10),@dynamiccountry2 varchar(10),
				@Clientphonedetail varchar(5),@Clientphonedetailcount varchar(5),@dynamicincomebse varchar(5),@dynamicnetworth varchar(10),
				@Bsecash char(1),@Bsederivative char(1),@Bsecdx char(1),@finyear varchar(10)
				
				select @finyear=FinYear_Code from Master_FinYear where @Todate between FinYear_StartDate and FinYear_EndDate
				
				
				Create Table #tempdpdetailnsdl (dpsrno int identity,Dpname varchar(max),Dpid varchar(max),Dpbenaccno varchar(max),dpparticipatename varchar(max))
				Create Table #tempdpdetailcdsl (dpsrno int identity,Dpname varchar(max),Dpid varchar(max),Dpbenaccno varchar(max),dpparticipatename varchar(max))
				
		if(@Segmentname='BSE - CM')
			Begin
				Select @Bsecash='Y'
				Select @Bsederivative='N'
				Select @Bsecdx='N'
			End
		if(@Segmentname='BSE - FO')
			Begin
				Select @Bsecash='N'
				Select @Bsederivative='Y'
				Select @Bsecdx='N'
			End
		if(@Segmentname='BSE - CDX')
			Begin
				Select @Bsecash='N'
				Select @Bsederivative='N'
				Select @Bsecdx='Y'
			End
		
		If (@Segmentname='NSE - CM')
			Select @Segmentcol='C'
		If (@Segmentname='NSE - FO')
			Select @Segmentcol='F'
		If (@Segmentname='NSE - CDX')
			Select @Segmentcol='X'
		--------------------Client Insert Start----------------------------------------
		
		Create Table #Clientinternalidinsert (Srlno int identity,Internalid varchar(max))
			If (@Clientsinternalid='NA')
				Begin
					Select @Sqlquery='Select Distinct LTRIM(rtrim(crg_cntID)) from tbl_master_contactExchange 
								where crg_regisDate between '''+ @Fromdate +''' and '''+ @Todate +''' 
								and crg_Exchange ='''+@Segmentname+'''' 
										
				
				End
			Else
				Begin
					Select @Sqlquery='Select Distinct cnt_internalid from tbl_master_contact 
									 Where Cnt_internalid in ('+@Clientsinternalid+')'
				End
			Insert into #Clientinternalidinsert exec(@Sqlquery)
			
			--------------------Client Insert End----------------------------------------
			Set @Sqlquery=''
			Select @Loopcounterincrementalforclient=Max(Srlno) From #Clientinternalidinsert
			Set @Loopcounterstaticforclient=1
			While (@Loopcounterstaticforclient<=@Loopcounterincrementalforclient)
					Begin------------Client Loop Begin
						Select @Clientid=Internalid from #Clientinternalidinsert where Srlno=@Loopcounterstaticforclient
						If (@Segmentname='NSE - CM' or @Segmentname='NSE - FO' or @Segmentname='NSE - CDX')
							Begin	
								Select @dynamicmaritalstatus=MTS_NSECode from tbl_master_maritalstatus,tbl_master_contact
															 where cnt_maritalStatus=mts_id and cnt_internalId=@Clientid
								
								Select @dynamicannualincome=AnnualIncome_NSECode  from Master_AnnualIncome,tbl_master_contactfinance 
															where cfc_AnnualIncomeRange=AnnualIncome_ID and cfc_cntId=@Clientid and cfc_FinYear=@finyear
								Select @dynamicpolitics=isnull(PoliticalConnection_NSECode,'0') from tbl_master_contact,Master_PoliticalConnection 
														where cnt_pep=PoliticalConnection_ID and cnt_internalId=@Clientid
								Select @dynamicprofession=PRO_NSECode from tbl_master_contact,tbl_master_profession 
														where cnt_profession=pro_id and cnt_internalId=@Clientid
								Select @dynamicfamily=ltrim(rtrim(FAM_NSECode)) from tbl_master_contactFamilyRelationship,tbl_master_familyRelationship 
														where femrel_relationId=fam_id and femrel_cntId=@Clientid
								Select @dynamicstate=tbl_master_state.State_NSECode from tbl_master_state,tbl_master_address where tbl_master_address.add_state=tbl_master_state.id 
													AND tbl_master_address.add_cntID=@Clientid AND add_addressType=
													(select top 1 add_addressType from (select add_addressType,
													case when rtrim(ltrim(add_addressType))='Registered' then 1
													when rtrim(ltrim(add_addressType))='Correspondence' then 2
													when rtrim(ltrim(add_addressType))='Residence' then 3
													when rtrim(ltrim(add_addressType))='Office' then 4
													else 5 end as addreorder from tbl_master_address 
													where add_cntID=@Clientid and add_entity='Customer/Client') tb
													order by addreorder)
								Select @dynamiccountry=tbl_master_country.Country_NSECode from tbl_master_country,tbl_master_address where tbl_master_address.add_country=tbl_master_country.cou_id 
													AND tbl_master_address.add_cntID=@Clientid AND add_addressType=
													(select top 1 add_addressType from (select add_addressType,
													case when rtrim(ltrim(add_addressType))='Registered' then 1
													when rtrim(ltrim(add_addressType))='Correspondence' then 2
													when rtrim(ltrim(add_addressType))='Residence' then 3
													when rtrim(ltrim(add_addressType))='Office' then 4
													else 5 end as addreorder from tbl_master_address 
													where add_cntID=@Clientid and add_entity='Customer/Client') tb
													order by addreorder)
								Select @dynamicstate2=tbl_master_state.State_NSECode from tbl_master_state,tbl_master_address where tbl_master_address.add_state=tbl_master_state.id 
													  AND tbl_master_address.add_cntID=@Clientid AND add_addressType in ('Correspondence','Residence','Office')
								Select @dynamiccountry2=tbl_master_country.Country_NSECode from tbl_master_country,tbl_master_address where tbl_master_address.add_country=tbl_master_country.cou_id 
													  AND tbl_master_address.add_cntID=@Clientid AND add_addressType in ('Correspondence','Residence','Office')
							
							End
						If (@Segmentname='MCXSX - CM' or @Segmentname='MCXSX - FO' or @Segmentname='MCXSX - CDX')
							Begin	
								Select @dynamicmaritalstatus=MTS_MCXSXCode from tbl_master_maritalstatus,tbl_master_contact
															 where cnt_maritalStatus=mts_id and cnt_internalId=@Clientid
								
								Select @dynamicannualincome=AnnualIncome_MCXSXCode  from Master_AnnualIncome,tbl_master_contactfinance 
															where cfc_AnnualIncomeRange=AnnualIncome_ID and cfc_cntId=@Clientid and cfc_FinYear=@finyear
								Select @dynamicpolitics=PoliticalConnection_MCXSXCode from tbl_master_contact,Master_PoliticalConnection 
														where cnt_pep=PoliticalConnection_ID and cnt_internalId=@Clientid
								Select @dynamicprofession=PRO_MCXSXCode from tbl_master_contact,tbl_master_profession 
														where cnt_profession=pro_id and cnt_internalId=@Clientid
								Select @dynamicfamily=ltrim(rtrim(FAM_MCXSXCode)) from tbl_master_contactFamilyRelationship,tbl_master_familyRelationship 
														where femrel_relationId=fam_id and femrel_cntId=@Clientid
								Select @dynamicstate=tbl_master_city.City_MCXSXCode from tbl_master_city,tbl_master_address where tbl_master_address.add_city=tbl_master_city.city_id 
													AND tbl_master_address.add_cntID=@Clientid AND add_addressType=
													(select top 1 add_addressType from (select add_addressType,
													case when rtrim(ltrim(add_addressType))='Registered' then 1
													when rtrim(ltrim(add_addressType))='Correspondence' then 2
													when rtrim(ltrim(add_addressType))='Residence' then 3
													when rtrim(ltrim(add_addressType))='Office' then 4
													else 5 end as addreorder from tbl_master_address 
													where add_cntID=@Clientid and add_entity='Customer/Client') tb
													order by addreorder)
								Select @dynamiccountry=isnull(tbl_master_country.Country_MCXSXCode,'85') from tbl_master_country,tbl_master_address where tbl_master_address.add_country=tbl_master_country.cou_id 
													AND tbl_master_address.add_cntID=@Clientid AND add_addressType=
													(select top 1 add_addressType from (select add_addressType,
													case when rtrim(ltrim(add_addressType))='Registered' then 1
													when rtrim(ltrim(add_addressType))='Correspondence' then 2
													when rtrim(ltrim(add_addressType))='Residence' then 3
													when rtrim(ltrim(add_addressType))='Office' then 4
													else 5 end as addreorder from tbl_master_address 
													where add_cntID=@Clientid and add_entity='Customer/Client') tb
													order by addreorder)
								Select @dynamicstate2=tbl_master_city.City_MCXSXCode from tbl_master_city,tbl_master_address where tbl_master_address.add_city=tbl_master_city.city_id 
													  AND tbl_master_address.add_cntID=@Clientid AND add_addressType in ('Correspondence','Residence','Office')
								Select @dynamiccountry2=tbl_master_country.Country_MCXSXCode from tbl_master_country,tbl_master_address where tbl_master_address.add_country=tbl_master_country.cou_id 
													  AND tbl_master_address.add_cntID=@Clientid AND add_addressType in ('Correspondence','Residence','Office')
								
							
							End
						If (@Segmentname='MCX - COMM')
							Begin
								Select @dynamicstate=tbl_master_state.state from tbl_master_state,tbl_master_address where tbl_master_address.add_state=tbl_master_state.id 
													AND tbl_master_address.add_cntID=@Clientid AND add_addressType=
													(select top 1 add_addressType from (select add_addressType,
													case when rtrim(ltrim(add_addressType))='Registered' then 1
													when rtrim(ltrim(add_addressType))='Correspondence' then 2
													when rtrim(ltrim(add_addressType))='Residence' then 3
													when rtrim(ltrim(add_addressType))='Office' then 4
													else 5 end as addreorder from tbl_master_address 
													where add_cntID=@Clientid and add_entity='Customer/Client') tb
													order by addreorder)
								Select @dynamiccountry=tbl_master_country.cou_country from tbl_master_country,tbl_master_address where tbl_master_address.add_country=tbl_master_country.cou_id 
													AND tbl_master_address.add_cntID=@Clientid AND add_addressType=
													(select top 1 add_addressType from (select add_addressType,
													case when rtrim(ltrim(add_addressType))='Registered' then 1
													when rtrim(ltrim(add_addressType))='Correspondence' then 2
													when rtrim(ltrim(add_addressType))='Residence' then 3
													when rtrim(ltrim(add_addressType))='Office' then 4
													else 5 end as addreorder from tbl_master_address 
													where add_cntID=@Clientid and add_entity='Customer/Client') tb
													order by addreorder)
								Select @dynamiccity=tbl_master_city.city_name from tbl_master_city,tbl_master_address where tbl_master_address.add_city=tbl_master_city.city_id 
													AND tbl_master_address.add_cntID=@Clientid AND add_addressType=
													(select top 1 add_addressType from (select add_addressType,
													case when rtrim(ltrim(add_addressType))='Registered' then 1
													when rtrim(ltrim(add_addressType))='Correspondence' then 2
													when rtrim(ltrim(add_addressType))='Residence' then 3
													when rtrim(ltrim(add_addressType))='Office' then 4
													else 5 end as addreorder from tbl_master_address 
													where add_cntID=@Clientid and add_entity='Customer/Client') tb
													order by addreorder)
							End
						If (@Segmentname='BSE - CM' or @Segmentname='BSE - FO')
							Begin
								Select @dynamicpolitics=isnull(PoliticalConnection_BSECode,'N') from tbl_master_contact,Master_PoliticalConnection 
														where isnull(cnt_pep,4)=PoliticalConnection_ID and cnt_internalId=@Clientid
													
								Select @dynamicannualincome=Annualincome_bsecode  from Master_AnnualIncome,tbl_master_contactfinance 
															where cfc_AnnualIncomeRange=AnnualIncome_ID and cfc_cntId=@Clientid and cfc_FinYear=@finyear
															
							End
						Select @Clientaddressflag=case when COUNT(add_cntid)>1 then 'N' else 'Y' 
													end from tbl_master_address where add_cntId=@Clientid
													group by add_cntId
						Set @smsfacility=''
						Set @emailfacility=''
						Set @smsemailfacility=''
						Set @smsemailupdationflag=''
						Set @clienttype=''
						If Exists (Select * from tbl_master_phonefax where phf_cntId=@Clientid and isnull(phf_SMSFacility,'2')='1')
							Begin
								Set @smsfacility='1'
							End
						
							If Exists (Select * from tbl_master_email where eml_cntId=@Clientid and isnull(eml_facility,'2')='1')
							Begin
								Set @emailfacility='1'
							End
							If (@smsfacility='1' and @emailfacility='1')
								Begin
									Set @smsemailfacility='3'
								End
								If (@smsfacility='1' and @emailfacility<>'1')
								Begin
									Set @smsemailfacility='2'
								End
								If (@smsfacility<>'1' and @emailfacility='1')
								Begin
									Set @smsemailfacility='1'
								End
								If(@smsemailfacility='1' or @smsemailfacility='2' or @smsemailfacility='3')
									Begin
										Set @smsemailupdationflag='Y'
									End
								Else
									Begin
										Set @smsemailupdationflag='N'
									End
						IF(@Segmentname='BSE - CM' or @Segmentname='BSE - FO')
							Begin
								If Exists (Select * from tbl_master_contactfinance where cfc_cntId=@Clientid and (cfc_AnnualIncomeRange<>'' or cfc_AnnualIncomeRange is not null) and cfc_FinYear=@finyear)
										Begin
											Set @dynamicincomebse='1'
										End
									
									If Exists (Select * from tbl_master_contactfinance where cfc_cntId=@Clientid 
									and ( cfc_Networth is not null or cfc_Networth<>0.000)and cfc_FinYear=@finyear)
										Begin
											Set @dynamicnetworth='1'
										End
										
								if (@dynamicincomebse='1' and @dynamicnetworth='1')
										Begin
											Set @dynamicnetworth='3'
										End
									if (@dynamicincomebse='1' and @dynamicnetworth<>'1')
										Begin
											Set @dynamicnetworth='1'
										End
									if (@dynamicincomebse<>'1' and @dynamicnetworth='1')
										Begin
											Set @dynamicnetworth='2'
										End
									if (@dynamicincomebse<>'1' and @dynamicnetworth<>'1')
										Begin
											Set @dynamicnetworth=''
										End
										set @Clientphonedetailcount=''
								If Exists (Select * from tbl_master_phonefax where phf_cntId=@Clientid and phf_type='Mobile')
									Begin
										Set @Clientphonedetail='1'
									End
								
									If Exists (Select * from tbl_master_phonefax where phf_cntId=@Clientid and phf_type<>'Mobile')
									Begin
										Set @Clientphonedetailcount='1'
									End
									
									if (@Clientphonedetail='1' and @Clientphonedetailcount='1')
										Begin
											Set @Clientphonedetailcount='3'
										End
									if (@Clientphonedetail='1' and @Clientphonedetailcount<>'1')
										Begin
										
											Set @Clientphonedetailcount='2'
										End
									if (@Clientphonedetail<>'1' and @Clientphonedetailcount='1')
										Begin
											Set @Clientphonedetailcount='1'
										End
									if (@Clientphonedetail<>'1' and @Clientphonedetailcount<>'1')
										Begin
											Set @Clientphonedetailcount='4'
										End
									If (@smsfacility='1' and @emailfacility='1')
										Begin
											Set @smsemailfacility='3'
										End
									If (@smsfacility='1' and @emailfacility<>'1')
										Begin
											Set @smsemailfacility='1'
										End
									If (@smsfacility<>'1' and @emailfacility='1')
										Begin
											Set @smsemailfacility='2'
										End
									If (@smsfacility<>'1' and @emailfacility<>'1')
										Begin
											Set @smsemailfacility='4'
										End
								End
						
						-------------------Table Creation For bank-----------------------------------------
						Create Table #tempbankdetail (bnksrno int identity,clientid varchar(max),Bankname varchar(max),Bankbrnchadd varchar(max),
									Bankaccno varchar(30),Bankacctype varchar(5))
						-------------------Table Creation For bank-----------------------------------------
						Create Table #tempdpdetail (dpsrno int identity,Dpname varchar(max),Dpid varchar(max),Dpbenaccno varchar(max))
						-------------------Table Creation For Contact Person-----------------------------------------
						Create Table #tempcontactperson (cntsrno int identity,Clientid varchar(20),CntperName varchar(200),Cntperdeg varchar(50),
									Cntperpan varchar(30),cntperadd varchar(500),cntperphone varchar(50),Cntperdin varchar(8),
									Cntperuid varchar(15),cntperemail varchar(60))
						-------------------Table Creation and Data Fetch For Legal Status-------------------
						Create Table #ClientLegalStatus (Legalcode varchar(10),LegalType varchar(10))
							If (@Segmentname='NSE - CM' or @Segmentname='NSE - FO' or @Segmentname='NSE - CDX')
								Begin
									Insert into #ClientLegalStatus
									select case when lgl_legalStatus= 'Individual - Resident' then '1' when lgl_legalStatus= 'Proprietorship Firm' then '1' when lgl_legalStatus = 'Partnership' then '2' 
									when lgl_legalStatus = 'HUF' then '3' when lgl_legalStatus = 'Public Ltd. Co.' then '4' when lgl_legalStatus = 'Private Limited Co.' then '4' 
									when lgl_legalStatus = 'Company' then '4' when lgl_legalStatus = 'Body Corporate' then '4' 
									when lgl_legalStatus = 'Trust' then '5' when lgl_legalStatus = 'Society' then '5' 
									when lgl_legalStatus = 'Mutual Fund' then '6' when lgl_legalStatus = 'FI' then '7' 
									when lgl_legalStatus = 'Bank' then '8' when lgl_legalStatus = 'Insurance Company' then '9' 
									when lgl_legalStatus = 'Statutory Body' then '10' when lgl_legalStatus = 'NRI - Non-Repartriable (NRO)' then '11' 
									when lgl_legalStatus = 'NRI - Repatriable (NRE)' then '11' when lgl_legalStatus = 'FII' then '12' 
									when lgl_legalStatus = 'OCB' then '13' when lgl_legalStatus = 'Foreign Direct Investment [FDI]' then '14' 
									when lgl_legalStatus = 'PMS Clients' then '15'
									when lgl_legalStatus = 'Pension System [New]' then '16'
									when lgl_legalStatus = 'Foreign Investor - Groups/Association [QFI-G/A]' then '17'
									when lgl_legalStatus = 'Foreign Investor - Individual [QFI-I]' then '18'
									when lgl_legalStatus = 'Non Government Organisation' then '19'
									when lgl_legalStatus = 'Foreign Venture Capital Fund' then '20' 
									else '' end,''   from tbl_master_legalstatus,tbl_master_contact,#Clientinternalidinsert 
									where lgl_id=cnt_legalStatus and cnt_internalId=Internalid
									and Srlno= @Loopcounterstaticforclient
							End
							If (@Segmentname='MCXSX - CM' or @Segmentname='MCXSX - FO' or @Segmentname='MCXSX - CDX')
								Begin
									Insert into #ClientLegalStatus
									select case when lgl_legalStatus= 'Individual - Resident' then '01' when lgl_legalStatus= 'Proprietorship Firm' then '01' 
										when lgl_legalStatus = 'NRI - Non-Repartriable (NRO)' then '02'
										when lgl_legalStatus = 'NRI - Repatriable (NRE)' then '02' 
										when lgl_legalStatus = 'Statutory Body' then '03' 
										when lgl_legalStatus = 'FII' then '04'
										when lgl_legalStatus = 'OCB' then '05'
										when lgl_legalStatus = 'Mutual Fund' then '06'
										when lgl_legalStatus = 'Foreign Direct Investment [FDI]' then '07'
										when lgl_legalStatus = 'PMS Clients' then '08'
										when lgl_legalStatus = 'NBFC' then '09'
										when lgl_legalStatus = 'Foreign Investor - Groups/Association [QFI-G/A]' then '10'
										when lgl_legalStatus = 'Foreign Investor - Individual [QFI-I]' then '11'
										when lgl_legalStatus = 'Pension System [New]' then '12' 
										when lgl_legalStatus = 'Public Ltd. Co.' then '13' when lgl_legalStatus = 'Private Limited Co.' then '13'  when lgl_legalStatus = 'Body Corporate' then '13' when lgl_legalStatus = 'Company' then '13'
										when lgl_legalStatus = 'Partnership' then '15' 
										when lgl_legalStatus = 'HUF' then '16' 
										when lgl_legalStatus = 'Trust' then '17' when lgl_legalStatus = 'Society' then '17' 
										when lgl_legalStatus = 'FI' then '18' 
										when lgl_legalStatus = 'Bank' then '19'
										when lgl_legalStatus = 'Insurance Company' then '20'
										when lgl_legalStatus = 'Foreign Venture Capital Fund' then '21'
										when lgl_legalStatus = 'Non Government Organisation' then '22'
									  
									else '' end,''   from tbl_master_legalstatus,tbl_master_contact,#Clientinternalidinsert 
									where lgl_id=cnt_legalStatus and cnt_internalId=Internalid
									and Srlno= @Loopcounterstaticforclient
									
							End
							If (@Segmentname='MCX - COMM')
								Begin
									Insert into #ClientLegalStatus
									select case when lgl_legalStatus= 'Individual - Resident' then '01' when lgl_legalStatus= 'Proprietorship Firm' then '01' 
										when lgl_legalStatus = 'NRI - Non-Repartriable (NRO)' then '02'
										when lgl_legalStatus = 'NRI - Repatriable (NRE)' then '02' 
										when lgl_legalStatus = 'Statutory Body' then '03'  
										when lgl_legalStatus = 'FII' then '04'
										when lgl_legalStatus = 'OCB' then '05'
										when lgl_legalStatus = 'Mutual Fund' then '06'
										when lgl_legalStatus = 'Foreign Direct Investment [FDI]' then '07'
										when lgl_legalStatus = 'PMS Clients' then '08'
										when lgl_legalStatus = 'NBFC' then '09'
										when lgl_legalStatus = 'Public Ltd. Co.' then '13' when lgl_legalStatus = 'Private Limited Co.' then '13'  when lgl_legalStatus = 'Body Corporate' then '13' when lgl_legalStatus = 'Company' then '13'
										When lgl_legalStatus='Non Tax Paying Entity' then '14'
										when lgl_legalStatus = 'Partnership' then '15' 
										when lgl_legalStatus = 'HUF' then '16' 
										when lgl_legalStatus = 'Trust' then '17' when lgl_legalStatus = 'Society' then '17' 
										when lgl_legalStatus = 'FI' then '18' 
										when lgl_legalStatus = 'Bank' then '19'
										when lgl_legalStatus = 'Insurance Company' then '20'
										
									  
									else '99' end,''   from tbl_master_legalstatus,tbl_master_contact,#Clientinternalidinsert 
									where lgl_id=cnt_legalStatus and cnt_internalId=Internalid
									and Srlno= @Loopcounterstaticforclient
									
							End
						If (@Segmentname='BSE - CM' or @Segmentname='BSE - FO')
								Begin
									
									Insert into #ClientLegalStatus
									select 
									case when lgl_legalStatus= 'Individual - Resident' then 'I' when lgl_legalStatus = 'NRI - Repatriable (NRE)' then 'NRI'
									when lgl_legalStatus= 'HIGH NETWORTH INDIVIDUALS' then 'HNI' when lgl_legalStatus = 'FOREIGN NATIONALS' then 'FN' 
									when lgl_legalStatus = 'PORTFOLIO MANGT SERVICES - INDIVIDUAL' then 'PMSI' when lgl_legalStatus = 'Foreign Investor - Individual [QFI-I]' then 'QFII'
									
									when lgl_legalStatus = 'Body Corporate' then 'BCO'
									when lgl_legalStatus = 'Public Ltd. Co.' then 'BCO' when lgl_legalStatus = 'Private Limited Co.' then 'BCO' 
									when lgl_legalStatus = 'Company' then 'BCO' when lgl_legalStatus = 'Other' then 'O'
									when lgl_legalStatus = 'Partnership' then 'PF' when lgl_legalStatus = 'Limited Liability Partnership [LLP]' then 'LLP'
									when lgl_legalStatus = 'PORTFOLIO MANGT SERVICES - NON-INDIVIDUAL' then 'PMSN' when lgl_legalStatus = 'Foreign Investor - Groups/Association [QFI-G/A]' then 'QFII'
									when lgl_legalStatus = 'Association Of People [AOP]' then 'AOP' when lgl_legalStatus = 'Foreign Venture Capital Fund [FVCI]' then 'FVCF'
									when lgl_legalStatus = 'HUF' then 'HUF' when lgl_legalStatus = 'MERCHANT BANKERS' then 'MB'
									when lgl_legalStatus = 'Trust' then 'T' when lgl_legalStatus = 'Overseas Corporate Bodies [OCB]' then 'OCB'
									when lgl_legalStatus = 'Body Of Individuals' then 'BOI' when lgl_legalStatus like 'NGO%' then 'NGO'
									when lgl_legalStatus = 'VENTURE CAPITAL FUNDS' then 'VCF' when lgl_legalStatus = 'Defence Establishment' then 'DEF'
									when lgl_legalStatus = 'Society' then 'SOC' when lgl_legalStatus = 'Charities' then 'CH'
									
									when lgl_legalStatus = 'Bank' then 'B' when lgl_legalStatus = 'FII' then 'FII' 
									when lgl_legalStatus = 'DOMESTIC FINANCIAL INSTITUTIONS' then 'DFI'  
									when lgl_legalStatus = 'Insurance Company' then 'INS' when lgl_legalStatus = 'Mutual Fund' then 'MF' 
									when lgl_legalStatus = 'Pension System [New]' then 'NPS' 
									else '' end,
									case when lgl_legalStatus= 'Individual - Resident' then 'I' when lgl_legalStatus = 'NRI - Repatriable (NRE)' then 'I'
									when lgl_legalStatus= 'HIGH NETWORTH INDIVIDUALS' then 'I' when lgl_legalStatus = 'FOREIGN NATIONALS' then 'I' 
									when lgl_legalStatus = 'PORTFOLIO MANGT SERVICES - INDIVIDUAL' then 'I' when lgl_legalStatus = 'Foreign Investor - Individual [QFI-I]' then 'I'
									
									when lgl_legalStatus = 'Body Corporate' then 'NI' 
									when lgl_legalStatus = 'Public Ltd. Co.' then 'NI' when lgl_legalStatus = 'Private Limited Co.' then 'NI' 
									when lgl_legalStatus = 'Company' then 'NI'
									
									when lgl_legalStatus = 'Other' then 'NI'
									when lgl_legalStatus = 'Partnership' then 'NI' when lgl_legalStatus = 'Limited Liability Partnership [LLP]' then 'NI'
									when lgl_legalStatus = 'PORTFOLIO MANGT SERVICES - NON-INDIVIDUAL' then 'NI' when lgl_legalStatus = 'Foreign Investor - Groups/Association [QFI-G/A]' then 'NI'
									when lgl_legalStatus = 'Association Of People [AOP]' then 'NI' when lgl_legalStatus = 'Foreign Venture Capital Fund [FVCI]' then 'NI'
									when lgl_legalStatus = 'HUF' then 'NI' when lgl_legalStatus = 'MERCHANT BANKERS' then 'NI'
									when lgl_legalStatus = 'Trust' then 'NI' when lgl_legalStatus = 'Overseas Corporate Bodies [OCB]' then 'NI'
									when lgl_legalStatus = 'Body Of Individuals' then 'NI' when lgl_legalStatus like 'NGO%' then 'NI'
									when lgl_legalStatus = 'VENTURE CAPITAL FUNDS' then 'NI' when lgl_legalStatus = 'Defence Establishment' then 'NI'
									when lgl_legalStatus = 'Society' then 'NI' when lgl_legalStatus = 'Charities' then 'NI'
									when lgl_legalStatus = 'Bank' then 'INS' when lgl_legalStatus = 'FII' then 'INS' 
									when lgl_legalStatus = 'DOMESTIC FINANCIAL INSTITUTIONS' then 'INS'  
									when lgl_legalStatus = 'Insurance Company' then 'INS' when lgl_legalStatus = 'Mutual Fund' then 'INS' 
									when lgl_legalStatus = 'Pension System [New]' then 'INS' 
									else '' end
									   from tbl_master_legalstatus,tbl_master_contact,#Clientinternalidinsert 
									where lgl_id=cnt_legalStatus and cnt_internalId=Internalid
									and Srlno= @Loopcounterstaticforclient
							End
								Select @Legalcodevalue=Legalcode from #ClientLegalStatus
								Select @LegalType=LegalType from #ClientLegalStatus
							If (@Segmentname='NSE - CM' or @Segmentname='NSE - FO' or @Segmentname='NSE - CDX')
								Begin
									IF (@Legalcodevalue='4')
										Begin
												Set @clienttype='Y'
										End
									IF (@Legalcodevalue='6' or @Legalcodevalue='7' or @Legalcodevalue='8' or @Legalcodevalue='9' or @Legalcodevalue='10' or @Legalcodevalue='12' or @Legalcodevalue='13' or @Legalcodevalue='14' or @Legalcodevalue='15' or @Legalcodevalue='16' or @Legalcodevalue='17' or @Legalcodevalue='19' or @Legalcodevalue='20')
										Begin
												Set @clienttype='N'
										End
								End
							If (@Segmentname='MCXSX - CM' or @Segmentname='MCXSX - FO' or @Segmentname='MCXSX - CDX')
								Begin
									IF (@Legalcodevalue='01' or @Legalcodevalue='02' or @Legalcodevalue='11' or @Legalcodevalue='15' or @Legalcodevalue='16' or @Legalcodevalue='17')
										Set @clienttype='N'
									Else
										Set @clienttype='Y'
										
								End
								Drop Table #ClientLegalStatus
								-------------------------Insert For Main Table------------------------------
					If (@Segmentname='NSE - CM' or @Segmentname='NSE - FO' or @Segmentname='NSE - CDX' or @Segmentname='MCXSX - CM' or @Segmentname='MCXSX - FO' or @Segmentname='MCXSX - CDX')
						Begin
							
								Insert into #ClientUccNSE (Segment,clientid,[ClientCode],[ClientName],Category,Pan,Gender,[FathersHGName],Maritalstatus
								,Nationality,[NationalityOther],ClientEmail,ClientAddress1,ClientAddress2,ClientAddress3,Clientcity,Clientstatecode,
								Clientstateother,Clientcountrycode,Clientpin,AddressFlag,PermanantClientAddress1,PermanantClientAddress2,PermanantClientAddress3,
								PermanantClientcity,PermanantClientstatecode,PermanantClientstateother,PermanantClientcountrycode,PermanantClientpin,
								Residenceisdcode,Residencestdcode,Residencephone,Mobileno,Offcisdcode,Offcstdcode,Officephone,DOB,UIDNO,CIN,AnnualIncome,AnnualIncomedate,
								Networth,Networthdate,PEP,Incorporationplace,Occupation,OtherOccupation,Commencementdate,CPcode,Regnoclient,RegistringAuth,Regnplace,Regndate,
								Inpersonverification,ClientAgreementdate,SLBUCC,UpdationSMSEmailFlag,Relationship,SMSEmailfacility,Prooftype,Proofnumber,Proofplace,Proofdate,
								Clientstatus,Remarks,Corporateclienttype,Fileendflag)
								
								(select @Segmentcol,@Clientid,isnull(ltrim(rtrim(cnt_ucc)),''),
								isnull(ltrim(rtrim(cnt_lastname)),'')+' '+isnull(ltrim(rtrim(cnt_firstname)),'')+' '+isnull(ltrim(rtrim(cnt_middlename)),''),
								@Legalcodevalue,(select top 1 isnull(crg_Number,' ') from tbl_master_contactRegistration where crg_cntID=@Clientid 
								and crg_type='Pancard'),case when isnull(cnt_sex,'0')='0' then 'M' when cnt_sex='1' then 'F' when cnt_sex='2' then 'NA' end,
								(Select ltrim(rtrim(femrel_memberName)) from tbl_master_contactFamilyRelationship,tbl_master_familyRelationship 
								where femrel_relationId=fam_id and femrel_cntId=@Clientid),@dynamicmaritalstatus,
								(select case when isnull(cnt_nationality,'1')='1' then '1' else '2' end from tbl_master_contact where cnt_internalId=@Clientid),
								(select case when isnull(cnt_nationality,'1')<>'1' then  cou_country else '' 
								 end from tbl_master_contact,tbl_master_country where cou_id=cnt_nationality and cnt_internalId=@Clientid),
								 (select top 1 eml_email from tbl_master_email where  eml_cntId=@Clientid and eml_type='Official'),
								
								
										
										(Select top 1 isnull(add_address1,'') as add1
										from tbl_master_address  where add_cntID=@Clientid 
										AND add_entity='Customer/Client' AND add_addressType 
										
										=(select top 1 add_addressType from 
											(select add_addressType,
											  case when rtrim(ltrim(add_addressType))='Registered' then 1
												when rtrim(ltrim(add_addressType))='Correspondence' then 2
												when rtrim(ltrim(add_addressType))='Residence' then 3
												when rtrim(ltrim(add_addressType))='Office' then 4
												else 5 end as addreorder
												from tbl_master_address where 
												add_cntID=@Clientid
						                        and add_entity='Customer/Client') tb
												order by addreorder)),
												
												(Select top 1  isnull(add_address2,'') as add2
												from tbl_master_address  where add_cntID=@Clientid 
												AND add_entity='Customer/Client'  AND add_addressType 
												=(select top 1 add_addressType from 
												(select add_addressType,
												  case when rtrim(ltrim(add_addressType))='Registered' then 1
													when rtrim(ltrim(add_addressType))='Correspondence' then 2
													when rtrim(ltrim(add_addressType))='Residence' then 3
													when rtrim(ltrim(add_addressType))='Office' then 4
													else 5 end as addreorder
													from tbl_master_address where 
													add_cntID=@Clientid
							                        and add_entity='Customer/Client') tb
													order by addreorder)),
													
												(Select top 1 isnull(add_address3,'') as add3
												from tbl_master_address  where add_cntID=@Clientid 
												AND add_entity='Customer/Client' AND add_addressType 
												=(select top 1 add_addressType from 
												(select add_addressType,
												  case when rtrim(ltrim(add_addressType))='Registered' then 1
													when rtrim(ltrim(add_addressType))='Correspondence' then 2
													when rtrim(ltrim(add_addressType))='Residence' then 3
													when rtrim(ltrim(add_addressType))='Office' then 4
													else 5 end as addreorder
													from tbl_master_address where 
													add_cntID=@Clientid
							                        and add_entity='Customer/Client') tb
													order by addreorder)),
													(Select  tbl_master_city.City_Name from tbl_master_city,tbl_master_address where tbl_master_address.add_city=tbl_master_city.city_id AND tbl_master_address.add_cntID=@Clientid
													AND add_addressType 
													=
													(select top 1 add_addressType from 
															(select add_addressType,
															  case when rtrim(ltrim(add_addressType))='Registered' then 1
																when rtrim(ltrim(add_addressType))='Correspondence' then 2
																when rtrim(ltrim(add_addressType))='Residence' then 3
																when rtrim(ltrim(add_addressType))='Office' then 4
																else 5 end as addreorder
																from tbl_master_address where 
																add_cntID=@Clientid
										                       
																and add_entity='Customer/Client') tb
																order by addreorder)),
																@dynamicstate,(select '' as stateoth),@dynamiccountry,
																(Select top 1 isnull(add_pin,'') as pin
																from tbl_master_address  where add_cntID=@Clientid 
																AND add_entity='Customer/Client' 
																AND add_addressType=(select top 1 add_addressType from 
																	(select add_addressType,
																	  case when rtrim(ltrim(add_addressType))='Registered' then 1
																		when rtrim(ltrim(add_addressType))='Correspondence' then 2
																		when rtrim(ltrim(add_addressType))='Residence' then 3
																		when rtrim(ltrim(add_addressType))='Office' then 4
																		else 5 end as addreorder
																		from tbl_master_address where 
																		add_cntID=@Clientid
																		and add_entity='Customer/Client') tb
																		order by addreorder)),@Clientaddressflag,
																(Select top 1 isnull(add_address1,'') as add1
																from tbl_master_address  where add_cntID=@Clientid 
																AND add_entity='Customer/Client' AND add_addressType in ('Correspondence','Residence','Office')),
												
																(Select top 1 isnull(add_address2,'') as add2
																from tbl_master_address  where add_cntID=@Clientid 
																AND add_entity='Customer/Client' AND add_addressType in ('Correspondence','Residence','Office')),
																				
																						
																(Select top 1 isnull(add_address3,'') as add3
																from tbl_master_address  where add_cntID=@Clientid 
																AND add_entity='Customer/Client' AND add_addressType in ('Correspondence','Residence','Office')),
																
																(Select top (1) tbl_master_city.City_Name from tbl_master_city,tbl_master_address where tbl_master_address.add_city=tbl_master_city.city_id AND tbl_master_address.add_cntID=@Clientid
																AND add_addressType in ('Correspondence','Residence','Office')),
																@dynamicstate2,(select '' as stateoth),@dynamiccountry2,
																(Select top 1 isnull(add_pin,'') as pin
																from tbl_master_address  where add_cntID=@Clientid 
																AND add_entity='Customer/Client'  AND add_addressType in ('Correspondence','Residence','Office')),
																					
																(select top 1  ltrim(rtrim(phf_countryCode)) from tbl_master_phonefax  where phf_cntId=@Clientid  and phf_type='Residence'),
																(select top 1  ltrim(rtrim(phf_areaCode)) from tbl_master_phonefax  where phf_cntId=@Clientid  and phf_type='Residence'),
																(select top 1  ltrim(rtrim(phf_phoneNumber)) from tbl_master_phonefax  where phf_cntId=@Clientid  and phf_type='Residence'),
																(select top 1  ltrim(rtrim(phf_phoneNumber)) from tbl_master_phonefax  where phf_cntId=@Clientid  and phf_type='Mobile'),
																(select top 1  ltrim(rtrim(phf_countryCode)) from tbl_master_phonefax  where phf_cntId=@Clientid  and phf_type='Office'),
																(select top 1  ltrim(rtrim(phf_areaCode)) from tbl_master_phonefax  where phf_cntId=@Clientid  and phf_type='Office'),
																(select top 1  ltrim(rtrim(phf_phoneNumber)) from tbl_master_phonefax  where phf_cntId=@Clientid  and phf_type='Office'),
																Case When (@Segmentname='NSE - CM' or @Segmentname='NSE - CDX' or @Segmentname='NSE - FO') then REPLACE(CONVERT(VARCHAR(11), cnt_dOB, 106), ' ', '-')
																 When  (@Segmentname='MCXSX - CM' or @Segmentname='MCXSX - FO' or @Segmentname='MCXSX - CDX' or @Segmentname='MCX - COMM') then REPLACE(CONVERT(CHAR(10), cnt_dOB, 103), '/', '') end as DateOfBirth,
																'' as uidno,
																(Select isnull(rtrim(crg_Number),'') as crg_Number from tbl_master_contactRegistration where crg_cntId=@Clientid and crg_type='CIN'),
																@dynamicannualincome,
																(select Case When (@Segmentname='NSE - CM' or @Segmentname='NSE - CDX' or @Segmentname='NSE - FO') Then REPLACE(CONVERT(VARCHAR(11), cfc_EffectDate, 106), ' ', '-')  
																When  (@Segmentname='MCXSX - CM' or @Segmentname='MCXSX - FO' or @Segmentname='MCXSX - CDX') then REPLACE(CONVERT(CHAR(10), cfc_EffectDate, 103), '/', '') end from tbl_master_contactfinance where cfc_cntId=@Clientid and cfc_FinYear=@finyear),
																(select cfc_Networth  from tbl_master_contactfinance where cfc_cntId=@Clientid and cfc_Networth<>'0.000' and cfc_FinYear=@finyear),
																--(select REPLACE(CONVERT(VARCHAR(11), cfc_EffectDate, 106), ' ', '-')  from tbl_master_contactfinance where cfc_cntId=@Clientid),
																(select Case When (@Segmentname='NSE - CM' or @Segmentname='NSE - CDX' or @Segmentname='NSE - FO') Then REPLACE(CONVERT(VARCHAR(11), cfc_EffectDate, 106), ' ', '-')  
																When  (@Segmentname='MCXSX - CM' or @Segmentname='MCXSX - FO' or @Segmentname='MCXSX - CDX') then REPLACE(CONVERT(CHAR(10), cfc_EffectDate, 103), '/', '') end from tbl_master_contactfinance where cfc_cntId=@Clientid and cfc_Networth<>'0.000' and cfc_FinYear=@finyear),
																@dynamicpolitics,cnt_PlaceOfIncorporation,@dynamicprofession,
																(select cnt_OtherOccupation from tbl_master_contact where cnt_internalId=@Clientid and cnt_profession='20'),
																Case When (@Segmentname='NSE - CM' or @Segmentname='NSE - CDX' or @Segmentname='NSE - FO') then REPLACE(CONVERT(VARCHAR(11), isnull(cnt_BusinessComncDate,'1900-01-01 00:00:00.000'), 106), ' ', '-')
																 When  (@Segmentname='MCXSX - CM' or @Segmentname='MCXSX - FO' or @Segmentname='MCXSX - CDX') then REPLACE(CONVERT(CHAR(10), cnt_BusinessComncDate, 103), '/', '') end,
																(select top 1 crg_SchemeCode from tbl_master_contactExchange where crg_cntID=@Clientid and crg_exchange=@Segmentname),
																(select top 1 crg_Number from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Other' and crg_registrationAuthority='ROC') as  RegNo,
																(select top 1 crg_registrationAuthority from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Other' and crg_registrationAuthority='ROC') as  RegAuthority,
																(select top 1 crg_place from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Other' and crg_registrationAuthority='ROC') as  RegPlace,
																(select Case When (@Segmentname='NSE - CM' or @Segmentname='NSE - CDX' or @Segmentname='NSE - FO') Then isnull(REPLACE(CONVERT(VARCHAR(11), crg_Date, 106), ' ', '-'),' ') 
																When  (@Segmentname='MCXSX - CM' or @Segmentname='MCXSX - FO' or @Segmentname='MCXSX - CDX') then REPLACE(CONVERT(CHAR(10), crg_Date, 103), '/', '') end 
																from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Other' 
																and crg_registrationAuthority='ROC') as RegistrationDate ,
																isnull(cnt_InPersonVerificationDone,'Y'),
																
																(select  Case When (@Segmentname='NSE - CM' or @Segmentname='NSE - CDX' or @Segmentname='NSE - FO') Then REPLACE(CONVERT(VARCHAR(11), crg_regisDate, 106), ' ', '-') 
																When  (@Segmentname='MCXSX - CM' or @Segmentname='MCXSX - FO' or @Segmentname='MCXSX - CDX' or @Segmentname='MCX - COMM') then REPLACE(CONVERT(CHAR(10), crg_regisDate, 103), '/', '') end 
																from tbl_master_contactExchange  where crg_cntID=@Clientid and crg_company=@Company and  crg_exchange =@Segmentname ) as ClientAgrementDate,
																'' as slbucc,
																(Select Case when @Legalcodevalue in ('6','7','8','9','12','14','16') then @smsemailupdationflag else '' end),
																-- Change for non-alpha
																--  @dynamicfamily,
																'',@smsemailfacility,
																(select Case when (@Segmentname='MCXSX - CM' or @Segmentname='MCXSX - CDX' or @Segmentname='MCXSX - FO')
																then ('0'+isnull(crg_PanExmptProofType,'')) else crg_PanExmptProofType end from tbl_master_contactRegistration where crg_cntId=@Clientid and ltrim(rtrim(crg_type))='Pancard' and ltrim(rtrim(crg_Number))='PAN_EXEMPT'),
																(select crg_PanExmptProofNumber from tbl_master_contactRegistration where crg_cntId=@Clientid and ltrim(rtrim(crg_type))='Pancard' and ltrim(rtrim(crg_Number))='PAN_EXEMPT'),
																(select crg_place from tbl_master_contactRegistration where crg_cntId=@Clientid and ltrim(rtrim(crg_type))='Pancard' and ltrim(rtrim(crg_Number))='PAN_EXEMPT'),
																(select Case When (@Segmentname='NSE - CM' or @Segmentname='NSE - CDX' or @Segmentname='NSE - FO') Then REPLACE(CONVERT(VARCHAR(11), crg_Date, 106), ' ', '-') 
																When (@Segmentname='MCXSX - CM' or @Segmentname='MCXSX - CDX' or @Segmentname='MCXSX - FO') Then REPLACE(CONVERT(CHAR(10), crg_Date, 103), '/', '')  end from tbl_master_contactRegistration where crg_cntId=@Clientid and ltrim(rtrim(crg_type))='Pancard' and ltrim(rtrim(crg_Number))='PAN_EXEMPT'),
																 Case When (@Segmentname='NSE - CM' or @Segmentname='NSE - CDX' or @Segmentname='NSE - FO')
																then 'A' else '1' end,
																--When (@Segmentname='MCXSX - CM' or @Segmentname='MCXSX - CDX' or @Segmentname='MCXSX - FO') 
																--then '1' End)
																 --from tbl_master_contact where cnt_internalId=@Clientid),
																 isnull(cnt_reason,''),@clienttype,'E'
																from tbl_master_contact where cnt_internalId=@Clientid)
																
																			--------------------------------End Insertion-----------------------------
																					if (@Clientaddressflag='Y')
																						Begin
																							Update #ClientUccNSE set PermanantClientAddress1=null,PermanantClientAddress2=null,
																							 PermanantClientAddress3=null,PermanantClientcity=null,
																							 PermanantClientcountrycode=null,PermanantClientstatecode=null,
																							PermanantClientstateother=null,PermanantClientpin=null 
																							where #ClientUccNSE.clientid=@Clientid
																							
									
																						End
																					Declare @dynamicloopcounter bigint,@staticcountforcntperson bigint
												Insert Into #tempdpdetail
												Select  (case when dpd_dpcode like 'IN%' then 'NSDL' else 'CDSL' end) as DipositoryName ,dpd_dpCode as dipositoryID,
												case when dpd_dpcode like 'IN%' then dpd_ClientId else LTRIM(RTRIM(dpd_dpcode))+LTRIM(RTRIM(dpd_ClientId)) end as  BenOwnerAccNo from tbl_master_contactDPDetails 
												WHERE dpd_cntID=@Clientid
													
												If Exists (select * from #tempdpdetail)
													Begin
														Select @dynamicloopcounter=MAX(dpsrno) from #tempdpdetail 
														if (@dynamicloopcounter=1)
															Begin
																
																	update #ClientUccNSE Set DPname1=#tempdpdetail.Dpname,
																	DPID1=Case When #tempdpdetail.Dpname='NSDL' then  #tempdpdetail.Dpid else '' end,
																	BenAccno1=#tempdpdetail.Dpbenaccno
																	 from #tempdpdetail 
																	 where dpsrno=1 and #ClientUccNSE.clientid=@Clientid
																
															End
															if (@dynamicloopcounter=2)
															Begin
																	
																	update #ClientUccNSE Set DPname1=#tempdpdetail.Dpname,
																	DPID1=Case When #tempdpdetail.Dpname='NSDL' then  #tempdpdetail.Dpid else '' end,
																	BenAccno1=#tempdpdetail.Dpbenaccno
																	 from #tempdpdetail 
																	 where dpsrno=1 and #ClientUccNSE.clientid=@Clientid
																	 update #ClientUccNSE Set DPname2=#tempdpdetail.Dpname,
																	DPID2=Case When #tempdpdetail.Dpname='NSDL' then  #tempdpdetail.Dpid else '' end,
																	BenAccno2=#tempdpdetail.Dpbenaccno
																	 from #tempdpdetail 
																	 where dpsrno=2 and #ClientUccNSE.clientid=@Clientid
																
															End
															if (@dynamicloopcounter=3)
															Begin
																	
																	update #ClientUccNSE Set DPname1=#tempdpdetail.Dpname,
																	DPID1=Case When #tempdpdetail.Dpname='NSDL' then  #tempdpdetail.Dpid else '' end,
																	BenAccno1=#tempdpdetail.Dpbenaccno
																	 from #tempdpdetail 
																	 where dpsrno=1 and #ClientUccNSE.clientid=@Clientid
																	 update #ClientUccNSE Set DPname2=#tempdpdetail.Dpname,
																	DPID2=Case When #tempdpdetail.Dpname='NSDL' then  #tempdpdetail.Dpid else '' end,
																	BenAccno2=#tempdpdetail.Dpbenaccno
																	 from #tempdpdetail 
																	 where dpsrno=2 and #ClientUccNSE.clientid=@Clientid
																	 update #ClientUccNSE Set DPname3=#tempdpdetail.Dpname,
																	DPID3=Case When #tempdpdetail.Dpname='NSDL' then  #tempdpdetail.Dpid else '' end,
																	BenAccno3=#tempdpdetail.Dpbenaccno
																	 from #tempdpdetail 
																	 where dpsrno=3 and #ClientUccNSE.clientid=@Clientid
																
															End
															Set @dynamicloopcounter=''
													
												End
												
												Insert Into #tempcontactperson
												Select A.cp_agentInternalId,A.cp_name as name,(select upper(deg_designation) from tbl_master_designation where  deg_id=cp_designation)  as designation,
												isnull(A.cp_Pan,'FOREIGNDIR') as ContactPan,
												(select isnull(ltrim(rtrim(add_address1)),'') +' '+ isnull(ltrim(rtrim(add_address2)),'')+' '+ 
												(select top 1 city_name from tbl_master_city  where city_id=tbl_master_address.add_city)+'-'+ 
												isnull(ltrim(rtrim(add_pin)),'') +' ' +(select top 1 state from tbl_master_state where id=tbl_master_address.add_state)
												+' '+(select top 1 cou_country from tbl_master_country where cou_id=tbl_master_address.add_country) 
												from tbl_master_address WHERE  add_cntId=A.cp_contactId ) as Address,
												(select top 1 isnull(phf_phonenumber,'') from tbl_master_phonefax where phf_cntId=A.cp_contactId
												and isnull(phf_phonenumber,'')<>'') as Officephone,
												isnull(cp_Din,'NO_DIN') as din,'' as uidno,
												(select eml_email from tbl_master_email where eml_cntId=A.cp_contactId) as email
												from tbl_master_contactperson A WHERE cp_agentInternalId=@Clientid 
												ORDER BY cp_status desc
												If Exists (select * from #tempcontactperson)
													Begin
														Select @dynamicloopcounter=MAX(cntsrno) from #tempcontactperson 
														Set @staticcountforcntperson=1
															
													While(@staticcountforcntperson<=@dynamicloopcounter)
														Begin
															
																Select @sqlupdate='	update #ClientUccNSE Set Contpersonname'+cast(@staticcountforcntperson as varchar(50))+'=#tempcontactperson.CntperName,
																	Contpersondeg'+cast(@staticcountforcntperson as varchar(50))+'=#tempcontactperson.Cntperdeg,Contpersonpan'+cast(@staticcountforcntperson as varchar(50))+'=#tempcontactperson.Cntperpan,
																	contpersonaddress'+cast(@staticcountforcntperson as varchar(50))+'=#tempcontactperson.cntperadd,contpersonphone'+cast(@staticcountforcntperson as varchar(50))+'=#tempcontactperson.cntperphone,
																	Contpersondin'+cast(@staticcountforcntperson as varchar(50))+'=#tempcontactperson.Cntperdin,Contpersonuid'+cast(@staticcountforcntperson as varchar(50))+'=#tempcontactperson.Cntperuid,
																	Contpersonemail'+cast(@staticcountforcntperson as varchar(50))+'=#tempcontactperson.cntperemail
																	 from #tempcontactperson 
																	 where cntsrno='+cast(@staticcountforcntperson as varchar(50))+' and #ClientUccNSE.clientid in ('''+@Clientid+''')'
															
															exec(@sqlupdate)
															
															Set @staticcountforcntperson=@staticcountforcntperson+1
														End-------------While Loop End-----------------
													End-----------Exists condition End---------------
												End------------Segment End-----------
												
					If (@Segmentname='MCX - COMM')
						Begin--------------MCX-COMM Start------------------
													
													insert into #ClientUccmcxcomm 
														select 
														cnt_internalId,cnt_UCC,LTRIM(rtrim(cnt_firstName)),LTRIM(rtrim(cnt_middleName)),LTRIM(rtrim(cnt_lastName)),
														@Legalcodevalue,
														(Select top 1 isnull(add_address1,'') as add1
														from tbl_master_address  where add_cntID=@Clientid 
														AND add_entity='Customer/Client' AND add_addressType 
														=(select top 1 add_addressType from 
															(select add_addressType,
															  case when rtrim(ltrim(add_addressType))='Registered' then 1
																when rtrim(ltrim(add_addressType))='Correspondence' then 2
																when rtrim(ltrim(add_addressType))='Residence' then 3
																when rtrim(ltrim(add_addressType))='Office' then 4
																else 5 end as addreorder
																from tbl_master_address where 
																add_cntID=@Clientid
																and add_entity='Customer/Client') tb
																order by addreorder)),
												
												(Select top 1 isnull(add_address2,'') as add2
												from tbl_master_address  where add_cntID=@Clientid 
												AND add_entity='Customer/Client' AND add_addressType 
												=(select top 1 add_addressType from 
													(select add_addressType,
													  case when rtrim(ltrim(add_addressType))='Registered' then 1
														when rtrim(ltrim(add_addressType))='Correspondence' then 2
														when rtrim(ltrim(add_addressType))='Residence' then 3
														when rtrim(ltrim(add_addressType))='Office' then 4
														else 5 end as addreorder
														from tbl_master_address where 
														add_cntID=@Clientid
														and add_entity='Customer/Client') tb
														order by addreorder)),
												
												(Select top 1 isnull(add_address3,'') as add3
												from tbl_master_address  where add_cntID=@Clientid 
												AND add_entity='Customer/Client' AND add_addressType 
												=(select top 1 add_addressType from 
													(select add_addressType,
													  case when rtrim(ltrim(add_addressType))='Registered' then 1
														when rtrim(ltrim(add_addressType))='Correspondence' then 2
														when rtrim(ltrim(add_addressType))='Residence' then 3
														when rtrim(ltrim(add_addressType))='Office' then 4
														else 5 end as addreorder
														from tbl_master_address where 
														add_cntID=@Clientid
						                        and add_entity='Customer/Client') tb
												order by addreorder)),@dynamiccity,@dynamicstate,@dynamiccountry,
												(Select top 1 isnull(add_pin,'') as pin
												from tbl_master_address  where add_cntID=@Clientid 
												AND add_entity='Customer/Client' AND add_addressType 
												=(select top 1 add_addressType from 
												(select add_addressType,
												  case when rtrim(ltrim(add_addressType))='Registered' then 1
													when rtrim(ltrim(add_addressType))='Correspondence' then 2
													when rtrim(ltrim(add_addressType))='Residence' then 3
													when rtrim(ltrim(add_addressType))='Office' then 4
													else 5 end as addreorder
													from tbl_master_address where 
													add_cntID=@Clientid
							                        and add_entity='Customer/Client') tb
													order by addreorder)),
													(select top 1  ltrim(rtrim(phf_countryCode))+ltrim(rtrim(phf_areaCode))+ltrim(rtrim(phf_phoneNumber)) 
													from tbl_master_phonefax  where phf_cntId=@Clientid  and phf_type='Office'),
													(select REPLACE(CONVERT(CHAR(10), crg_regisDate, 103), '/', '') from tbl_master_contactExchange  
													where crg_cntID=@Clientid and crg_company=@Company and  crg_exchange =@Segmentname),
													REPLACE(CONVERT(CHAR(10), cnt_dOB, 103), '/', '') ,
													(select top 1 isnull(crg_Number,' ') from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Pancard'),
													'','','','','','','','','','','','','','',
													(select top 1 isnull(crg_Number,' ') from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Passport'),
													(select top 1 isnull(crg_place,' ') from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Passport'),
													(select top 1 isnull(REPLACE(CONVERT(CHAR(10), crg_Date, 103), '/', ''),' ') from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Passport'),
													(select top 1 isnull(REPLACE(CONVERT(CHAR(10), crg_validDate, 103), '/', ''),' ') from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Passport'),
													(select top 1 isnull(crg_Number,' ') from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Driving License'),
													(select top 1 isnull(crg_place,' ') from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Driving License'),
													(select top 1 isnull(REPLACE(CONVERT(CHAR(10), crg_Date, 103), '/', ''),' ') from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Driving License'),
													(select top 1 isnull(REPLACE(CONVERT(CHAR(10), crg_validDate, 103), '/', ''),' ') from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Driving License'),
													(select top 1 isnull(crg_Number,' ') from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Voter ID'),
													(select top 1 isnull(crg_place,' ') from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Voter ID'),
													(select top 1 isnull(REPLACE(CONVERT(CHAR(10), crg_Date, 103), '/', ''),' ') from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Voter ID'),
													(select top 1 isnull(crg_Number,' ') from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Ration Card'),
													(select top 1 isnull(crg_place,' ') from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Ration Card'),
													(select top 1 isnull(REPLACE(CONVERT(CHAR(10), crg_Date, 103), '/', ''),' ') from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Ration Card'),
													(select top 1 crg_Number from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Other' and crg_registrationAuthority='ROC') as  RegNo,
													(select top 1 crg_registrationAuthority from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Other' and crg_registrationAuthority='ROC') as  RegAuthority,
													(select top 1 crg_place from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Other' and crg_registrationAuthority='ROC') as  RegPlace,
													(select top 1 isnull(REPLACE(CONVERT(CHAR(10), crg_Date, 103), '/', ''),' ') from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Other' and crg_registrationAuthority='ROC'),
													'','','','','','1','',
													(select top 1 ltrim(rtrim(phf_phoneNumber)) 
													from tbl_master_phonefax  where phf_cntId=@Clientid  and phf_type='Mobile'),
													(select top 1 ltrim(rtrim(eml_email))
													from tbl_master_email  where eml_cntId=@Clientid  and eml_type='Official'),'','','','E',''
													
													 from tbl_master_contact where cnt_internalId=@Clientid
													 
															--(clientid,clientucc,clientfirstname,clientmiddlename,clientlastname,category,address1,address2,address3,
															--city,state,country,pin,phonenumber,agreementdate,dateofbirth,pan,wardno,uin,)
													
													Insert Into #tempdpdetailnsdl
													Select top 1 (case when dpd_dpcode like 'IN%' then 'NSDL' else 'CDSL' end) as DipositoryName ,dpd_dpCode as dipositoryID,
													case when dpd_dpcode like 'IN%' then dpd_ClientId else LTRIM(RTRIM(dpd_dpcode))+LTRIM(RTRIM(dpd_ClientId)) end as  BenOwnerAccNo,
													(select top 1 ltrim(rtrim(dp_dpname)) from tbl_master_depositoryParticipants where dp_dpid=dpd_dpcode) from tbl_master_contactDPDetails 
													WHERE dpd_cntID=@Clientid and dpd_dpcode like 'IN%'  and dpd_accountType like   'Defaul%'
													Insert Into #tempdpdetailcdsl
													Select top 1 (case when dpd_dpcode like 'IN%' then 'NSDL' else 'CDSL' end) as DipositoryName ,dpd_dpCode as dipositoryID,
													case when dpd_dpcode like 'IN%' then dpd_ClientId else LTRIM(RTRIM(dpd_dpcode))+LTRIM(RTRIM(dpd_ClientId)) end as  BenOwnerAccNo,
													(select top 1 ltrim(rtrim(dp_dpname)) from tbl_master_depositoryParticipants where dp_dpid=dpd_dpcode) from tbl_master_contactDPDetails 
													WHERE dpd_cntID=@Clientid and dpd_dpcode not like 'IN%' and dpd_accountType like   'Defaul%'
													--select * from #tempdpdetailnsdl
													If Exists (select * from #tempdpdetailnsdl)
														Begin
															update #ClientUccmcxcomm Set dpname=#tempdpdetailnsdl.Dpname,
																		dpid=#tempdpdetailnsdl.Dpid ,
																		dpparticipantname=#tempdpdetailnsdl.dpparticipatename,
																		benaccid=#tempdpdetailnsdl.Dpbenaccno
																		 from #tempdpdetailnsdl 
																		 where  clientid=@Clientid
														End
													
													If Exists (select * from #tempdpdetailcdsl)
														Begin
															update #ClientUccmcxcomm Set dpnamecdsl=#tempdpdetailcdsl.Dpname,
																		dpidcdsl=#tempdpdetailcdsl.Dpid ,
																		dpparticipantnamecdsl=#tempdpdetailcdsl.dpparticipatename,
																		benaccidcdsl=#tempdpdetailcdsl.Dpbenaccno
																		 from #tempdpdetailcdsl 
																		 where  clientid=@Clientid
														End
											 
												delete from #tempdpdetailnsdl
												delete from #tempdpdetailcdsl
												
											End----------------Mcx-Comm End----------------------
						
					If (@Segmentname='BSE - CM' or @Segmentname='BSE - FO')	
						Begin
							Declare @clientuccbse varchar(25)
							Insert Into #ClientUccBse 
							
							select cnt_internalId,@BseAccounttype,@Batuser,@LegalType,
							Case when isnull(cnt_clienttype,'Retail')='Retail' then 'CL'
							when isnull(cnt_clienttype,'')='Pro Trading' then 'OW'
							else 'IN' end,@Legalcodevalue,cnt_UCC,
							(select top 1 isnull(crg_Number,' ') from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Pancard'),
							case when @LegalType<>'INS' then @dynamicpolitics else '' end
							,
							(Select top 1 isnull(add_address1,'') as add1
														from tbl_master_address  where add_cntID=@Clientid 
														AND add_entity='Customer/Client' AND add_addressType 
														=(select top 1 add_addressType from 
															(select add_addressType,
															  case when rtrim(ltrim(add_addressType))='Registered' then 1
																when rtrim(ltrim(add_addressType))='Correspondence' then 2
																when rtrim(ltrim(add_addressType))='Residence' then 3
																when rtrim(ltrim(add_addressType))='Office' then 4
																else 5 end as addreorder
																from tbl_master_address where 
																add_cntID=@Clientid
																and add_entity='Customer/Client') tb
																order by addreorder))+' '+
												
												(Select top 1 isnull(add_address2,'') as add2
												from tbl_master_address  where add_cntID=@Clientid 
												AND add_entity='Customer/Client' AND add_addressType 
												=(select top 1 add_addressType from 
													(select add_addressType,
													  case when rtrim(ltrim(add_addressType))='Registered' then 1
														when rtrim(ltrim(add_addressType))='Correspondence' then 2
														when rtrim(ltrim(add_addressType))='Residence' then 3
														when rtrim(ltrim(add_addressType))='Office' then 4
														else 5 end as addreorder
														from tbl_master_address where 
														add_cntID=@Clientid
														and add_entity='Customer/Client') tb
														order by addreorder))+' '+
												
												(Select top 1 isnull(add_address3,'') as add3
												from tbl_master_address  where add_cntID=@Clientid 
												AND add_entity='Customer/Client' AND add_addressType 
												=(select top 1 add_addressType from 
													(select add_addressType,
													  case when rtrim(ltrim(add_addressType))='Registered' then 1
														when rtrim(ltrim(add_addressType))='Correspondence' then 2
														when rtrim(ltrim(add_addressType))='Residence' then 3
														when rtrim(ltrim(add_addressType))='Office' then 4
														else 5 end as addreorder
														from tbl_master_address where 
														add_cntID=@Clientid
						                        and add_entity='Customer/Client') tb
												order by addreorder)),@Clientaddressflag,
												(Select top 1 isnull(add_address1,'') as add1
														from tbl_master_address  where add_cntID=@Clientid 
														AND add_entity='Customer/Client' AND add_addressType 
														=(select top 1 add_addressType from 
															(select add_addressType,
															  case when rtrim(ltrim(add_addressType))='Registered' then 1
																when rtrim(ltrim(add_addressType))='Correspondence' then 2
																when rtrim(ltrim(add_addressType))='Residence' then 3
																when rtrim(ltrim(add_addressType))='Office' then 4
																else 5 end as addreorder
																from tbl_master_address where 
																add_cntID=@Clientid
																and add_entity='Customer/Client') tb
																order by addreorder))+' '+
												
												(Select top 1 isnull(add_address2,'') as add2
												from tbl_master_address  where add_cntID=@Clientid 
												AND add_entity='Customer/Client' AND add_addressType 
												=(select top 1 add_addressType from 
													(select add_addressType,
													  case when rtrim(ltrim(add_addressType))='Registered' then 1
														when rtrim(ltrim(add_addressType))='Correspondence' then 2
														when rtrim(ltrim(add_addressType))='Residence' then 3
														when rtrim(ltrim(add_addressType))='Office' then 4
														else 5 end as addreorder
														from tbl_master_address where 
														add_cntID=@Clientid
														and add_entity='Customer/Client') tb
														order by addreorder))+' '+
												
												(Select top 1 isnull(add_address3,'') as add3
												from tbl_master_address  where add_cntID=@Clientid 
												AND add_entity='Customer/Client' AND add_addressType 
												=(select top 1 add_addressType from 
													(select add_addressType,
													  case when rtrim(ltrim(add_addressType))='Registered' then 1
														when rtrim(ltrim(add_addressType))='Correspondence' then 2
														when rtrim(ltrim(add_addressType))='Residence' then 3
														when rtrim(ltrim(add_addressType))='Office' then 4
														else 5 end as addreorder
														from tbl_master_address where 
														add_cntID=@Clientid
						                        and add_entity='Customer/Client') tb
												order by addreorder)),
												(select top 1 isnull(tbl_master_country.cou_country,'') from tbl_master_country,tbl_master_address where tbl_master_address.add_country=tbl_master_country.cou_id 
													AND tbl_master_address.add_cntID=@Clientid AND add_addressType=
													(select top 1 add_addressType from (select add_addressType,
													case when rtrim(ltrim(add_addressType))='Registered' then 1
													when rtrim(ltrim(add_addressType))='Correspondence' then 2
													when rtrim(ltrim(add_addressType))='Residence' then 3
													when rtrim(ltrim(add_addressType))='Office' then 4
													else 5 end as addreorder from tbl_master_address 
													where add_cntID=@Clientid and add_entity='Customer/Client') tb
													order by addreorder)),
													(select top 1 isnull(tbl_master_state.state,'') from tbl_master_state,tbl_master_address where tbl_master_address.add_state=tbl_master_state.id 
													AND tbl_master_address.add_cntID=@Clientid AND add_addressType=
													(select top 1 add_addressType from (select add_addressType,
													case when rtrim(ltrim(add_addressType))='Registered' then 1
													when rtrim(ltrim(add_addressType))='Correspondence' then 2
													when rtrim(ltrim(add_addressType))='Residence' then 3
													when rtrim(ltrim(add_addressType))='Office' then 4
													else 5 end as addreorder from tbl_master_address 
													where add_cntID=@Clientid and add_entity='Customer/Client') tb
													order by addreorder)),
													(select top 1 isnull(tbl_master_city.city_name,'') from tbl_master_city,tbl_master_address where tbl_master_address.add_city=tbl_master_city.city_id 
													AND tbl_master_address.add_cntID=@Clientid AND add_addressType=
													(select top 1 add_addressType from (select add_addressType,
													case when rtrim(ltrim(add_addressType))='Registered' then 1
													when rtrim(ltrim(add_addressType))='Correspondence' then 2
													when rtrim(ltrim(add_addressType))='Residence' then 3
													when rtrim(ltrim(add_addressType))='Office' then 4
													else 5 end as addreorder from tbl_master_address 
													where add_cntID=@Clientid and add_entity='Customer/Client') tb
													order by addreorder)),
													(Select top 1 isnull(add_pin,'') as add3
												from tbl_master_address  where add_cntID=@Clientid 
												AND add_entity='Customer/Client' AND add_addressType 
												=(select top 1 add_addressType from 
													(select add_addressType,
													  case when rtrim(ltrim(add_addressType))='Registered' then 1
														when rtrim(ltrim(add_addressType))='Correspondence' then 2
														when rtrim(ltrim(add_addressType))='Residence' then 3
														when rtrim(ltrim(add_addressType))='Office' then 4
														else 5 end as addreorder
														from tbl_master_address where 
														add_cntID=@Clientid
						                        and add_entity='Customer/Client') tb
												order by addreorder))
												,@smsemailfacility,@Clientphonedetailcount,
												(select top 1 eml_email from tbl_master_email where  eml_cntId=@Clientid and eml_type='Official'),
												(select top 1  ltrim(rtrim(phf_phoneNumber)) from tbl_master_phonefax  where phf_cntId=@Clientid  and phf_type='Mobile'),--,
												(select top 1  ltrim(rtrim(phf_areaCode)) from tbl_master_phonefax  where phf_cntId=@Clientid and phf_type<>'Mobile'),
												(select top 1  ltrim(rtrim(phf_phoneNumber)) from tbl_master_phonefax  where phf_cntId=@Clientid and phf_type<>'Mobile'),
												'','','','','','','','','','','','','','','','','','','','','','',
												(select  CONVERT(VARCHAR(20), crg_regisDate, 103) 
												from tbl_master_contactExchange  where crg_cntID=@Clientid and crg_company=@Company 
												and  crg_exchange =@Segmentname ) as ClientAgrementDate,@dynamicnetworth
												,@dynamicannualincome,
												(select  CONVERT(VARCHAR(20), cfc_EffectDate, 103) 
												from tbl_master_contactfinance  where cfc_cntId=@Clientid and cfc_FinYear=@finyear),
												(select cfc_Networth  from tbl_master_contactfinance where cfc_cntId=@Clientid and cfc_Networth<>'0.000' and cfc_FinYear=@finyear),
												(select  CONVERT(VARCHAR(20), cfc_EffectDate, 103) 
												from tbl_master_contactfinance  where cfc_cntId=@Clientid and cfc_Networth<>'0.000' and cfc_FinYear=@finyear ),'Y',ISNULL(cnt_reason,''),ISNULL(cnt_firstName,''),
												isnull(cnt_middleName,''),isnull(cnt_lastName,''),'',CONVERT(VARCHAR(20), cnt_dOB, 103),
												ISNULL(cnt_firstName,'')+' '+isnull(cnt_middleName,'')+' '+isnull(cnt_lastName,''),
												(select top 1 crg_Number from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Other' and crg_registrationAuthority='ROC') as  RegNo,
												(select top 1 crg_registrationAuthority from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Other' and crg_registrationAuthority='ROC') as  RegAuthority,
												(select top 1 CONVERT(VARCHAR(20), crg_Date, 103)  
												from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Other' 
												and crg_registrationAuthority='ROC') as RegistrationDate,
												(select top 1 crg_place from tbl_master_contactRegistration where crg_cntID=@Clientid and crg_type='Other' and crg_registrationAuthority='ROC') as  RegPlace,
												Case when @Legalcodevalue='BCO' then 'Y' else 'N' end,
												Case when @Legalcodevalue='BCO' then 
												(Select isnull(rtrim(crg_Number),'') as crg_Number from tbl_master_contactRegistration where crg_cntId=@Clientid and crg_type='CIN')
												else '' end
												,case when @LegalType<>'I' then (Select COUNT(*) from tbl_master_contactPerson 
												where cp_agentInternalId=@Clientid)
												else '0' end,
												'','','','','','','','','','','','','','',''
												
												from tbl_master_contact where cnt_internalId=@Clientid
												Select @clientuccbse=clientcode from #ClientUccBse where clientid=@Clientid
												Insert Into #tempdpdetailnsdl
													Select top 1 (case when dpd_dpcode like 'IN%' then 'NSDL' else 'CDSL' end) as DipositoryName ,dpd_dpCode as dipositoryID,
													case when dpd_dpcode like 'IN%' then dpd_ClientId else LTRIM(RTRIM(dpd_dpcode))+LTRIM(RTRIM(dpd_ClientId)) end as  BenOwnerAccNo,
													(select top 1 ltrim(rtrim(dp_dpname)) from tbl_master_depositoryParticipants where dp_dpid=dpd_dpcode) from tbl_master_contactDPDetails 
													WHERE dpd_cntID=@Clientid and dpd_dpcode like 'IN%'  and dpd_accountType like   'Defaul%'
													Insert Into #tempdpdetailcdsl
													Select top 1 (case when dpd_dpcode like 'IN%' then 'NSDL' else 'CDSL' end) as DipositoryName ,dpd_dpCode as dipositoryID,
													case when dpd_dpcode like 'IN%' then dpd_ClientId else LTRIM(RTRIM(dpd_dpcode))+LTRIM(RTRIM(dpd_ClientId)) end as  BenOwnerAccNo,
													(select top 1 ltrim(rtrim(dp_dpname)) from tbl_master_depositoryParticipants where dp_dpid=dpd_dpcode) from tbl_master_contactDPDetails 
													WHERE dpd_cntID=@Clientid and dpd_dpcode not like 'IN%' and dpd_accountType like   'Defaul%'
													--select * from #tempdpdetailnsdl
													If Exists (select * from #tempdpdetailnsdl)
														Begin
															update #ClientUccBse Set dpname1=#tempdpdetailnsdl.Dpname,
																		dematid1=#tempdpdetailnsdl.Dpid ,
																		--dp1=#tempdpdetailnsdl.dpparticipatename
																		dp1=#tempdpdetailnsdl.Dpbenaccno
																		 from #tempdpdetailnsdl 
																		 where  clientid=@Clientid
														End
													
													If Exists (select * from #tempdpdetailcdsl)
														Begin
															if  Exists(select * from #ClientUccBse where (dpname1='' or dpname1 is null or dematid1='' or dematid1 is null or dp1='' or dp1 is null) and  #ClientUccBse.clientid=@Clientid)
																Begin
																	update #ClientUccBse Set dpname1=#tempdpdetailcdsl.Dpname,
																		dematid1=#tempdpdetailcdsl.Dpid ,
																		--dp3=#tempdpdetailcdsl.dpparticipatename
																		dp1=#tempdpdetailcdsl.Dpbenaccno
																		 from #tempdpdetailcdsl 
																		 where  clientid=@Clientid
																End
															Else
																Begin
																	update #ClientUccBse Set dpname2=#tempdpdetailcdsl.Dpname,
																		dematid2=#tempdpdetailcdsl.Dpid ,
																		--dp3=#tempdpdetailcdsl.dpparticipatename
																		dp2=#tempdpdetailcdsl.Dpbenaccno
																		 from #tempdpdetailcdsl 
																		 where  clientid=@Clientid
																End
														
														End
												Insert Into #tempcontactperson
												Select A.cp_agentInternalId,A.cp_name as name,(select upper(deg_designation) from tbl_master_designation where  deg_id=cp_designation)  as designation,
												isnull(A.cp_Pan,'') as ContactPan,
												(select isnull(ltrim(rtrim(add_address1)),'') +' '+ isnull(ltrim(rtrim(add_address2)),'')+' '+ 
												(select top 1 city_name from tbl_master_city  where city_id=tbl_master_address.add_city)+' '+ 
												isnull(ltrim(rtrim(add_pin)),'') +' ' +(select top 1 state from tbl_master_state where id=tbl_master_address.add_state)
												+' '+(select top 1 cou_country from tbl_master_country where cou_id=tbl_master_address.add_country) 
												from tbl_master_address WHERE  add_cntId=A.cp_contactId ) as Address,
												(select top 1 isnull(phf_phonenumber,'') from tbl_master_phonefax where phf_cntId=A.cp_contactId) as Officephone,
												isnull(cp_Din,'NO_DIN') as din,'' as uidno,
												(select eml_email from tbl_master_email where eml_cntId=A.cp_contactId) as email
												from tbl_master_contactperson A WHERE cp_agentInternalId=@Clientid 
												ORDER BY cp_status desc
												
												If Exists (select * from #tempcontactperson)
													Begin
														Select @dynamicloopcounter=MAX(cntsrno) from #tempcontactperson 
														Set @staticcountforcntperson=1
														While(@staticcountforcntperson<=@dynamicloopcounter)	
															Begin
																insert into #ContactPersonForBse
																
																Select ClientId,'ND',@clientuccbse,isnull(CntperName,''),isnull(Cntperdin,''),'N',isnull(Cntperpan,''),'' 
																from #tempcontactperson where cntsrno=@staticcountforcntperson
																Set @staticcountforcntperson=@staticcountforcntperson+1
															End
													
													Select @dynamicloopcounter=MAX(cntsrno) from #tempcontactperson 
													Set @staticcountforcntperson=1
													if (@dynamicloopcounter=2)
															Begin
																	update #ClientUccBse Set contactname1=CntperName,contactdeg1=Cntperdeg,contactaddress1=cntperadd,contactemail1=cntperemail,
																	contactpan1=Cntperpan,contactphone1=cntperphone
																	 from #tempcontactperson 
																	 where cntsrno=1 and #ClientUccBse.clientid=@Clientid
																	 
																	 update #ClientUccBse Set contactname2=CntperName,contactdeg2=Cntperdeg,contactaddress2=cntperadd,contactemail2=cntperemail,
																	contactpan2=Cntperpan,contactphone2=cntperphone
																	 from #tempcontactperson 
																	 where cntsrno=2 and #ClientUccBse.clientid=@Clientid
																	 
															
																
															End
															if (@dynamicloopcounter=1)
															Begin
																	update #ClientUccBse Set contactname1=CntperName,contactdeg1=Cntperdeg,contactaddress1=cntperadd,contactemail1=cntperemail,
																	contactpan1=Cntperpan,contactphone1=cntperphone
																	 from #tempcontactperson 
																	 where cntsrno=1 and #ClientUccBse.clientid=@Clientid
																
															End
													End-----------Exists condition End---------------
											    delete from #tempcontactperson
												delete from #tempdpdetailnsdl
												delete from #tempdpdetailcdsl
							--print '122'
										End
									
											 Insert into #tempbankdetail
											 Select cbd_cntId,tbl_master_Bank.bnk_bankName AS BankName,
											(tbl_master_Bank.bnk_bankName + ' ' + tbl_master_Bank.bnk_branchName + ' ' + tbl_master_Bank.bnk_micrno ) 
											AS BranchAdress, 
											tbl_trans_contactBankDetails.cbd_accountNumber AS AccountNumber,case 
											when tbl_trans_contactBankDetails.cbd_accountType='Saving' then '10' 
											when tbl_trans_contactBankDetails.cbd_accountType='Current' then '11'  
											else '99' end AS AccountType
											  from tbl_trans_contactBankDetails ,
											tbl_master_Bank  WHERE 
											(tbl_trans_contactBankDetails.cbd_cntId =@Clientid) 
											and  
											tbl_master_Bank.bnk_id=tbl_trans_contactBankDetails.cbd_bankCode
											
											If Exists (Select * from #tempbankdetail) 
												Begin
														Select @dynamicloopcounter=MAX(bnksrno) from #tempbankdetail 
														if (@dynamicloopcounter=3)
															Begin
																	update #ClientUccNSE Set Bankname1=Bankname,Bankaddress1=Bankbrnchadd,BankAccNo1=bankaccno,BankAcctype1=bankacctype
																	 from #tempbankdetail 
																	 where bnksrno=1 and #ClientUccNSE.clientid=@Clientid
																	 update #ClientUccNSE Set Bankname2=Bankname,Bankaddress2=Bankbrnchadd,BankAccNo2=bankaccno,BankAcctype2=bankacctype
																	 from #tempbankdetail 
																	 where bnksrno=2 and #ClientUccNSE.clientid=@Clientid
																	 update #ClientUccNSE Set Bankname3=Bankname,Bankaddress3=Bankbrnchadd,BankAccNo3=bankaccno,BankAcctype3=bankacctype
																	 from #tempbankdetail 
																	 where bnksrno=3 and #ClientUccNSE.clientid=@Clientid
																	 
																	update #ClientUccBse Set bankname1=#tempbankdetail.Bankname,bankaddress1=Bankbrnchadd,bankaccno1=#tempbankdetail.Bankaccno--,bankacctype=#tempbankdetail.Bankacctype
																	 from #tempbankdetail 
																	 where bnksrno=1 and #ClientUccBse.clientid=@Clientid
																	 
																	 update #ClientUccBse Set bankname2=#tempbankdetail.Bankname,bankaddress2=Bankbrnchadd,bankaccno2=#tempbankdetail.Bankaccno--,bankacctype=#tempbankdetail.Bankacctype
																	 from #tempbankdetail 
																	 where bnksrno=2 and #ClientUccBse.clientid=@Clientid
																	 update #ClientUccBse Set bankname3=#tempbankdetail.Bankname,bankaddress3=Bankbrnchadd,bankaccno3=#tempbankdetail.Bankaccno--,bankacctype=#tempbankdetail.Bankacctype
																	 from #tempbankdetail 
																	 where bnksrno=3 and #ClientUccBse.clientid=@Clientid
																
															End
															if (@dynamicloopcounter=2)
															Begin
																	update #ClientUccNSE Set Bankname1=Bankname,Bankaddress1=Bankbrnchadd,BankAccNo1=bankaccno,BankAcctype1=bankacctype
																	 from #tempbankdetail 
																	 where bnksrno=1 and #ClientUccNSE.clientid=@Clientid
																	 update #ClientUccNSE Set Bankname2=Bankname,Bankaddress2=Bankbrnchadd,BankAccNo2=bankaccno,BankAcctype2=bankacctype
																	 from #tempbankdetail 
																	 where bnksrno=2 and #ClientUccNSE.clientid=@Clientid
																	 
																	 update #ClientUccBse Set bankname1=#tempbankdetail.Bankname,bankaddress1=Bankbrnchadd,bankaccno1=#tempbankdetail.Bankaccno--,bankacctype=#tempbankdetail.Bankacctype
																	 from #tempbankdetail 
																	 where bnksrno=1 and #ClientUccBse.clientid=@Clientid
																	 
																	 update #ClientUccBse Set bankname2=#tempbankdetail.Bankname,bankaddress2=Bankbrnchadd,bankaccno2=#tempbankdetail.Bankaccno--,bankacctype=#tempbankdetail.Bankacctype
																	 from #tempbankdetail 
																	 where bnksrno=2 and #ClientUccBse.clientid=@Clientid
																	 
															
																
															End
															if (@dynamicloopcounter=1)
															Begin
																	update #ClientUccNSE Set Bankname1=Bankname,Bankaddress1=Bankbrnchadd,BankAccNo1=bankaccno,BankAcctype1=bankacctype
																	 from #tempbankdetail 
																	 where bnksrno=1 and #ClientUccNSE.clientid=@Clientid
																	 
																	 update #ClientUccBse Set bankname1=#tempbankdetail.Bankname,bankaddress1=Bankbrnchadd,bankaccno1=#tempbankdetail.Bankaccno--,bankacctype=#tempbankdetail.Bankacctype
																	 from #tempbankdetail 
																	 where bnksrno=1 and #ClientUccBse.clientid=@Clientid
																
															End
															---------------update for mcx-comm---------------
															update #ClientUccmcxcomm Set bankname=#tempbankdetail.Bankname,bankaddress=Bankbrnchadd,bankaccno=#tempbankdetail.Bankaccno,bankacctype=#tempbankdetail.Bankacctype
																	 from #tempbankdetail 
																	 where bnksrno=1 and #ClientUccmcxcomm.clientid=@Clientid

															
															Set @dynamicloopcounter=''
												
												End
									
												
												
							--------------------------------End All data fetch and insert in main table--------------
							-------------------------------Validation Start For Export------------------------------				
						If (@Segmentname='NSE - CM' or @Segmentname='NSE - FO' or @Segmentname='NSE - CDX')
							Begin
								if(@BseAccounttype='N')
									Begin
										If Exists(select * from #ClientUccNSE where #ClientUccNSE.Occupation='99' and OtherOccupation=null and  #ClientUccNSE.clientid=@Clientid)
												Begin
													Update #ClientUccNSE Set ValidationForInternal='Error',OtherOccupation='Data Mismatch' 
													where #ClientUccNSE.clientid=@Clientid
												End
										If (@Legalcodevalue in ('1','11','18'))
											Begin
											
											if Exists(select * from #ClientUccNSE where #ClientUccNSE.Gender='NA' and  #ClientUccNSE.clientid=@Clientid)
												Begin
													Update #ClientUccNSE Set ValidationForInternal='Error',Gender='Data Mismatch' 
													where #ClientUccNSE.clientid=@Clientid
												End
												
												if Exists(select * from #ClientUccNSE where #ClientUccNSE.[FathersHGName] is null and  #ClientUccNSE.clientid=@Clientid)
												Begin
													Update #ClientUccNSE Set ValidationForInternal='Error',[FathersHGName]='Data Mismatch'
													where #ClientUccNSE.clientid=@Clientid
												End
												
												if Exists(select * from #ClientUccNSE where #ClientUccNSE.Maritalstatus is null and  #ClientUccNSE.clientid=@Clientid)
												Begin
													Update #ClientUccNSE Set ValidationForInternal='Error',[Maritalstatus]='Data Mismatch'
													where #ClientUccNSE.clientid=@Clientid
												End
												
												if Exists(select * from #ClientUccNSE where #ClientUccNSE.Nationality is null and  #ClientUccNSE.clientid=@Clientid)
												Begin
													Update #ClientUccNSE Set ValidationForInternal='Error',Nationality='Data Mismatch'
													where #ClientUccNSE.clientid=@Clientid
												End
												if Exists(select * from #ClientUccNSE where #ClientUccNSE.Nationality='2' and [NationalityOther] is null and  #ClientUccNSE.clientid=@Clientid)
												Begin
													Update #ClientUccNSE Set ValidationForInternal='Error',[NationalityOther]='Data Mismatch'
													where #ClientUccNSE.clientid=@Clientid
												End
												
												if Exists(select * from #ClientUccNSE where #ClientUccNSE.Occupation=null and  #ClientUccNSE.clientid=@Clientid)
												Begin
													Update #ClientUccNSE Set ValidationForInternal='Error' ,Occupation='Data Mismatch'
													where #ClientUccNSE.clientid=@Clientid
												End
												
												Update #ClientUccNSE set Incorporationplace='' where #ClientUccNSE.clientid=@Clientid
												
										End
									Else
										Begin
										
											Update #ClientUccNSE set Gender='' where #ClientUccNSE.clientid=@Clientid
											Update #ClientUccNSE set [FathersHGName]='' where #ClientUccNSE.clientid=@Clientid
											Update #ClientUccNSE set Maritalstatus='' where #ClientUccNSE.clientid=@Clientid
											Update #ClientUccNSE set Nationality='' where #ClientUccNSE.clientid=@Clientid
											Update #ClientUccNSE set [NationalityOther]='' where #ClientUccNSE.clientid=@Clientid
											Update #ClientUccNSE set Incorporationplace='' where #ClientUccNSE.clientid=@Clientid
											
											if  Exists(select * from #ClientUccNSE where #ClientUccNSE.Commencementdate='01-Jan-1900' and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error' ,Commencementdate='Data Mismatch'
														where #ClientUccNSE.clientid=@Clientid
													End
										End
										
										If (@Legalcodevalue in ('6','7','8','9','12','16'))
											Begin
												if  Exists(select * from #ClientUccNSE where len(#ClientUccNSE.ClientEmail)=0 and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',ClientEmail='Data Mismatch'
														where #ClientUccNSE.clientid=@Clientid
													End
												
											End
										Else
											Begin
												if  Exists(select * from #ClientUccNSE where #ClientUccNSE.DOB='01-Jan-1900' and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error' ,DOB='Data Mismatch'
														where #ClientUccNSE.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccNSE where #ClientUccNSE.Bankname1=null and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',Bankname1='Data Mismatch' 
														where #ClientUccNSE.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccNSE where #ClientUccNSE.Bankaddress1=null and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',Bankaddress1='Data Mismatch' 
														where #ClientUccNSE.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccNSE where #ClientUccNSE.BankAccNo1=null and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',BankAccNo1='Data Mismatch' 
														where #ClientUccNSE.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccNSE where #ClientUccNSE.AnnualIncome=null and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',AnnualIncome='Data Mismatch' 
														where #ClientUccNSE.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccNSE where #ClientUccNSE.AnnualIncome is not null and AnnualIncomedate=null and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',AnnualIncomedate='Data Mismatch' 
														where #ClientUccNSE.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccNSE where #ClientUccNSE.Networth=null and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',Networth='Data Mismatch' 
														where #ClientUccNSE.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccNSE where #ClientUccNSE.Networth is not null and Networthdate=null and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',Networthdate='Data Mismatch' 
														where #ClientUccNSE.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccNSE where #ClientUccNSE.PEP=null and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',PEP='Data Mismatch' 
														where #ClientUccNSE.clientid=@Clientid
													End
											End
										If (@Segmentname like '%CM%')
											Begin
												If (@Legalcodevalue in ('1','2','3','4','5','10','11','13','14','15','17','18','19','20'))
													Begin
														if  Exists(select * from #ClientUccNSE where #ClientUccNSE.DPname1=null and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error' ,DPname1='Data Mismatch'
																where #ClientUccNSE.clientid=@Clientid
															End
														if  Exists(select * from #ClientUccNSE where #ClientUccNSE.DPID1=null and DPname1='NSDL' and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error',DPID1='Data Mismatch' 
																where #ClientUccNSE.clientid=@Clientid
															End
														if  Exists(select * from #ClientUccNSE where #ClientUccNSE.BenAccno1=null  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error',BenAccno1='Data Mismatch'
																where #ClientUccNSE.clientid=@Clientid
															End
													End
											End
										If (@Legalcodevalue in ('4'))
											Begin
												if  Exists(select * from #ClientUccNSE where #ClientUccNSE.CIN=null  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error',CIN='Data Mismatch' 
																where #ClientUccNSE.clientid=@Clientid
															End
											End
										If (@Legalcodevalue in ('2','4','5'))
											Begin
												if  Exists(select * from #ClientUccNSE where (len(#ClientUccNSE.Contpersonname1)=0 or len(#ClientUccNSE.Contpersonname2)=0)  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error',Contpersonname1='Data Mismatch',Contpersonname2='Data Mismatch' 
																where #ClientUccNSE.clientid=@Clientid
															End
												if  Exists(select * from #ClientUccNSE where (len(#ClientUccNSE.contpersonaddress1)=0 or len(#ClientUccNSE.contpersonaddress2)=0)  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error' ,contpersonaddress1='Data Mismatch',contpersonaddress2='Data Mismatch'
																where #ClientUccNSE.clientid=@Clientid
															End
												if  Exists(select * from #ClientUccNSE where (len(#ClientUccNSE.contpersonphone1)=0 or len(#ClientUccNSE.contpersonphone2)=0)  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error' ,contpersonphone1='Data Mismatch',contpersonphone2='Data Mismatch'
																where #ClientUccNSE.clientid=@Clientid
															End
												If (@Legalcodevalue in ('2'))
													Begin
														if  Not Exists(select * from #ClientUccNSE where (#ClientUccNSE.Contpersondeg1='PARTNER' or #ClientUccNSE.Contpersondeg2='PARTNER')  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error',Contpersondeg1='Data Mismatch',Contpersondeg2='Data Mismatch' 
																where #ClientUccNSE.clientid=@Clientid
															End
													End
												If (@Legalcodevalue in ('3'))
													Begin
														if  Not Exists(select * from #ClientUccNSE where (#ClientUccNSE.Contpersondeg1='KARTA')  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error' ,Contpersondeg1='Data Mismatch'
																where #ClientUccNSE.clientid=@Clientid
															End
														if  Not Exists(select * from #ClientUccNSE where (#ClientUccNSE.Contpersondeg2='CO PARCENER')  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error' ,Contpersondeg2='Data Mismatch'
																where #ClientUccNSE.clientid=@Clientid
															End
													End
												If (@Legalcodevalue in ('4'))
													Begin
														if  Not Exists(select * from #ClientUccNSE where (#ClientUccNSE.Contpersondeg1='DIRECTOR' or #ClientUccNSE.Contpersondeg2='DIRECTOR')  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error' ,Contpersondeg1='Data Mismatch',Contpersondeg2='Data Mismatch'
																where #ClientUccNSE.clientid=@Clientid
															End
													End
												If (@Legalcodevalue in ('5'))
													Begin
														if  Not Exists(select * from #ClientUccNSE where (#ClientUccNSE.Contpersondeg1='TRUSTEE' or #ClientUccNSE.Contpersondeg2='TRUSTEE')  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error' ,Contpersondeg1='Data Mismatch',Contpersondeg2='Data Mismatch'
																where #ClientUccNSE.clientid=@Clientid
															End
													End
											End
										else If (@Legalcodevalue in ('3'))
											Begin
												If (@Legalcodevalue in ('3'))
													Begin
														if  Not Exists(select * from #ClientUccNSE where (#ClientUccNSE.Contpersondeg1='KARTA')  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error' ,Contpersondeg1='Data Mismatch'
																where #ClientUccNSE.clientid=@Clientid
															End
														if Exists(select * from #ClientUccNSE where (#ClientUccNSE.Contpersondeg2<>'' or #ClientUccNSE.Contpersondeg2<>null)  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																if  Not Exists(select * from #ClientUccNSE where (#ClientUccNSE.Contpersondeg2='CO PARCENER')  and  #ClientUccNSE.clientid=@Clientid)
																	Begin
																		Update #ClientUccNSE Set ValidationForInternal='Error' ,Contpersondeg2='Data Mismatch'
																		where #ClientUccNSE.clientid=@Clientid
																	End
															End
													End
											End
										Else
											Begin
												Update #ClientUccNSE set Contpersonname1='',Contpersonname2='' where #ClientUccNSE.clientid=@Clientid
												Update #ClientUccNSE set contpersonaddress1='',contpersonaddress2='' where #ClientUccNSE.clientid=@Clientid
												Update #ClientUccNSE set contpersonphone1='',contpersonphone2='' where #ClientUccNSE.clientid=@Clientid
												Update #ClientUccNSE set Contpersondeg1='',Contpersondeg2='' where #ClientUccNSE.clientid=@Clientid
												Update #ClientUccNSE set Contpersonpan1='',Contpersonpan2='' where #ClientUccNSE.clientid=@Clientid
												Update #ClientUccNSE set Contpersondin1='',Contpersondin2='' where #ClientUccNSE.clientid=@Clientid
											
											End
									End
								Else
									Begin
										If Exists(select * from #ClientUccNSE where #ClientUccNSE.Occupation='99' and OtherOccupation=null and  #ClientUccNSE.clientid=@Clientid)
												Begin
													Update #ClientUccNSE Set ValidationForInternal='Error',OtherOccupation='Data Mismatch' 
													where #ClientUccNSE.clientid=@Clientid
												End
										If (@Legalcodevalue in ('1','11','18'))
											Begin
											
											if Exists(select * from #ClientUccNSE where #ClientUccNSE.Gender='NA' and  #ClientUccNSE.clientid=@Clientid)
												Begin
													Update #ClientUccNSE Set ValidationForInternal='Error',Gender='Data Mismatch' 
													where #ClientUccNSE.clientid=@Clientid
												End
												
												if Exists(select * from #ClientUccNSE where #ClientUccNSE.[FathersHGName] is null and  #ClientUccNSE.clientid=@Clientid)
												Begin
													Update #ClientUccNSE Set ValidationForInternal='Error',[FathersHGName]='Data Mismatch'
													where #ClientUccNSE.clientid=@Clientid
												End
												
												if Exists(select * from #ClientUccNSE where #ClientUccNSE.Maritalstatus is null and  #ClientUccNSE.clientid=@Clientid)
												Begin
													Update #ClientUccNSE Set ValidationForInternal='Error',[Maritalstatus]='Data Mismatch'
													where #ClientUccNSE.clientid=@Clientid
												End
												
												if Exists(select * from #ClientUccNSE where #ClientUccNSE.Nationality is null and  #ClientUccNSE.clientid=@Clientid)
												Begin
													Update #ClientUccNSE Set ValidationForInternal='Error',Nationality='Data Mismatch'
													where #ClientUccNSE.clientid=@Clientid
												End
												if Exists(select * from #ClientUccNSE where #ClientUccNSE.Nationality='2' and [NationalityOther] is null and  #ClientUccNSE.clientid=@Clientid)
												Begin
													Update #ClientUccNSE Set ValidationForInternal='Error',[NationalityOther]='Data Mismatch'
													where #ClientUccNSE.clientid=@Clientid
												End
												
												if Exists(select * from #ClientUccNSE where #ClientUccNSE.Occupation=null and  #ClientUccNSE.clientid=@Clientid)
												Begin
													Update #ClientUccNSE Set ValidationForInternal='Error' ,Occupation='Data Mismatch'
													where #ClientUccNSE.clientid=@Clientid
												End
												
												Update #ClientUccNSE set Incorporationplace='' where #ClientUccNSE.clientid=@Clientid
												
										End
									Else
										Begin
										
											Update #ClientUccNSE set Gender='' where #ClientUccNSE.clientid=@Clientid
											Update #ClientUccNSE set [FathersHGName]='' where #ClientUccNSE.clientid=@Clientid
											Update #ClientUccNSE set Maritalstatus='' where #ClientUccNSE.clientid=@Clientid
											Update #ClientUccNSE set Nationality='' where #ClientUccNSE.clientid=@Clientid
											Update #ClientUccNSE set [NationalityOther]='' where #ClientUccNSE.clientid=@Clientid
											Update #ClientUccNSE set Incorporationplace='' where #ClientUccNSE.clientid=@Clientid
											
											
										End
										
										If (@Legalcodevalue in ('6','7','8','9','12','16'))
											Begin
												if  Exists(select * from #ClientUccNSE where len(#ClientUccNSE.ClientEmail)=0 and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',ClientEmail='Data Mismatch'
														where #ClientUccNSE.clientid=@Clientid
													End
												
											End
										Else
											Begin
												if  Exists(select * from #ClientUccNSE where #ClientUccNSE.DOB='01-Jan-1900' and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error' ,DOB='Data Mismatch'
														where #ClientUccNSE.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccNSE where #ClientUccNSE.Bankname1=null and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',Bankname1='Data Mismatch' 
														where #ClientUccNSE.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccNSE where #ClientUccNSE.Bankaddress1=null and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',Bankaddress1='Data Mismatch' 
														where #ClientUccNSE.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccNSE where #ClientUccNSE.BankAccNo1=null and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',BankAccNo1='Data Mismatch' 
														where #ClientUccNSE.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccNSE where #ClientUccNSE.AnnualIncome=null and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',AnnualIncome='Data Mismatch' 
														where #ClientUccNSE.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccNSE where #ClientUccNSE.AnnualIncome is not null and AnnualIncomedate=null and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',AnnualIncomedate='Data Mismatch' 
														where #ClientUccNSE.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccNSE where #ClientUccNSE.Networth=null and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',Networth='Data Mismatch' 
														where #ClientUccNSE.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccNSE where #ClientUccNSE.Networth is not null and Networthdate=null and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',Networthdate='Data Mismatch' 
														where #ClientUccNSE.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccNSE where #ClientUccNSE.PEP=null and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',PEP='Data Mismatch' 
														where #ClientUccNSE.clientid=@Clientid
													End
											End
										If (@Segmentname like '%CM%')
											Begin
												If (@Legalcodevalue in ('1','2','3','4','5','10','11','13','14','15','17','18','19','20'))
													Begin
														if  Exists(select * from #ClientUccNSE where #ClientUccNSE.DPname1=null and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error' ,DPname1='Data Mismatch'
																where #ClientUccNSE.clientid=@Clientid
															End
														if  Exists(select * from #ClientUccNSE where #ClientUccNSE.DPID1=null and DPname1='NSDL' and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error',DPID1='Data Mismatch' 
																where #ClientUccNSE.clientid=@Clientid
															End
														if  Exists(select * from #ClientUccNSE where #ClientUccNSE.BenAccno1=null  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error',BenAccno1='Data Mismatch'
																where #ClientUccNSE.clientid=@Clientid
															End
													End
											End
										If (@Legalcodevalue in ('4'))
											Begin
												if  Exists(select * from #ClientUccNSE where #ClientUccNSE.CIN=null  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error',CIN='Data Mismatch' 
																where #ClientUccNSE.clientid=@Clientid
															End
											End
										If (@Legalcodevalue in ('2','4','5'))
											Begin
												if  Exists(select * from #ClientUccNSE where (len(#ClientUccNSE.Contpersonname1)=0 or len(#ClientUccNSE.Contpersonname2)=0)  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error',Contpersonname1='Data Mismatch',Contpersonname2='Data Mismatch' 
																where #ClientUccNSE.clientid=@Clientid
															End
												if  Exists(select * from #ClientUccNSE where (len(#ClientUccNSE.contpersonaddress1)=0 or len(#ClientUccNSE.contpersonaddress2)=0)  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error' ,contpersonaddress1='Data Mismatch',contpersonaddress2='Data Mismatch'
																where #ClientUccNSE.clientid=@Clientid
															End
												if  Exists(select * from #ClientUccNSE where (len(#ClientUccNSE.contpersonphone1)=0 or len(#ClientUccNSE.contpersonphone2)=0)  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error' ,contpersonphone1='Data Mismatch',contpersonphone2='Data Mismatch'
																where #ClientUccNSE.clientid=@Clientid
															End
												If (@Legalcodevalue in ('2'))
													Begin
														if  Not Exists(select * from #ClientUccNSE where (#ClientUccNSE.Contpersondeg1='PARTNER' or #ClientUccNSE.Contpersondeg2='PARTNER')  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error',Contpersondeg1='Data Mismatch',Contpersondeg2='Data Mismatch' 
																where #ClientUccNSE.clientid=@Clientid
															End
													End
												If (@Legalcodevalue in ('3'))
													Begin
														if  Not Exists(select * from #ClientUccNSE where (#ClientUccNSE.Contpersondeg1='KARTA')  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error' ,Contpersondeg1='Data Mismatch'
																where #ClientUccNSE.clientid=@Clientid
															End
														if  Not Exists(select * from #ClientUccNSE where (#ClientUccNSE.Contpersondeg2='CO PARCENER')  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error' ,Contpersondeg2='Data Mismatch'
																where #ClientUccNSE.clientid=@Clientid
															End
													End
												If (@Legalcodevalue in ('4'))
													Begin
														if  Not Exists(select * from #ClientUccNSE where (#ClientUccNSE.Contpersondeg1='DIRECTOR' or #ClientUccNSE.Contpersondeg2='DIRECTOR')  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error' ,Contpersondeg1='Data Mismatch',Contpersondeg2='Data Mismatch'
																where #ClientUccNSE.clientid=@Clientid
															End
													End
												If (@Legalcodevalue in ('5'))
													Begin
														if  Not Exists(select * from #ClientUccNSE where (#ClientUccNSE.Contpersondeg1='TRUSTEE' or #ClientUccNSE.Contpersondeg2='TRUSTEE')  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error' ,Contpersondeg1='Data Mismatch',Contpersondeg2='Data Mismatch'
																where #ClientUccNSE.clientid=@Clientid
															End
													End
											End
										else If (@Legalcodevalue in ('3'))
											Begin
												If (@Legalcodevalue in ('3'))
													Begin
														if  Not Exists(select * from #ClientUccNSE where (#ClientUccNSE.Contpersondeg1='KARTA')  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																Update #ClientUccNSE Set ValidationForInternal='Error' ,Contpersondeg1='Data Mismatch'
																where #ClientUccNSE.clientid=@Clientid
															End
														if Exists(select * from #ClientUccNSE where (#ClientUccNSE.Contpersondeg2<>'' or #ClientUccNSE.Contpersondeg2<>null)  and  #ClientUccNSE.clientid=@Clientid)
															Begin
																if  Not Exists(select * from #ClientUccNSE where (#ClientUccNSE.Contpersondeg2='CO PARCENER')  and  #ClientUccNSE.clientid=@Clientid)
																	Begin
																		Update #ClientUccNSE Set ValidationForInternal='Error' ,Contpersondeg2='Data Mismatch'
																		where #ClientUccNSE.clientid=@Clientid
																	End
															End
													End
											End
										Else
											Begin
												Update #ClientUccNSE set Contpersonname1='',Contpersonname2='' where #ClientUccNSE.clientid=@Clientid
												Update #ClientUccNSE set contpersonaddress1='',contpersonaddress2='' where #ClientUccNSE.clientid=@Clientid
												Update #ClientUccNSE set contpersonphone1='',contpersonphone2='' where #ClientUccNSE.clientid=@Clientid
												Update #ClientUccNSE set Contpersondeg1='',Contpersondeg2='' where #ClientUccNSE.clientid=@Clientid
												Update #ClientUccNSE set Contpersonpan1='',Contpersonpan2='' where #ClientUccNSE.clientid=@Clientid
												Update #ClientUccNSE set Contpersondin1='',Contpersondin2='' where #ClientUccNSE.clientid=@Clientid
											
											End
									End
								
						End
						If (@Segmentname='MCXSX - CM' or @Segmentname='MCXSX - FO' or @Segmentname='MCXSX - CDX')
							Begin
									 
								If (@Legalcodevalue in ('01','02','11'))
									Begin
									
										if Exists(select * from #ClientUccNSE where #ClientUccNSE.Gender='NA' and  #ClientUccNSE.clientid=@Clientid)
											Begin
												Update #ClientUccNSE Set ValidationForInternal='Error',Gender='Data Mismatch' 
												where #ClientUccNSE.clientid=@Clientid
											End
										if Exists(select * from #ClientUccNSE where #ClientUccNSE.[FathersHGName] is null and  #ClientUccNSE.clientid=@Clientid)
											Begin
												Update #ClientUccNSE Set ValidationForInternal='Error',[FathersHGName]='Data Mismatch' 
												where #ClientUccNSE.clientid=@Clientid
											End
										if Exists(select * from #ClientUccNSE where #ClientUccNSE.Maritalstatus is null and  #ClientUccNSE.clientid=@Clientid)
											Begin
												Update #ClientUccNSE Set ValidationForInternal='Error',Maritalstatus='Data Mismatch' 
												where #ClientUccNSE.clientid=@Clientid
											End
										if Exists(select * from #ClientUccNSE where (#ClientUccNSE.Occupation is null or Len(Occupation)=0) and  #ClientUccNSE.clientid=@Clientid)
											Begin
												Update #ClientUccNSE Set ValidationForInternal='Error' ,Occupation='Data Mismatch'
												where #ClientUccNSE.clientid=@Clientid
											End
										if Exists(select * from #ClientUccNSE where #ClientUccNSE.Occupation='99' and (OtherOccupation is null or len(OtherOccupation)=0)   and  #ClientUccNSE.clientid=@Clientid)
											Begin
												Update #ClientUccNSE Set ValidationForInternal='Error' ,OtherOccupation='Data Mismatch'
												where #ClientUccNSE.clientid=@Clientid
											End
										
									End
								Else
									Begin
										--if Exists(select * from #ClientUccNSE where (#ClientUccNSE.[FathersHGName] is not null or len(#ClientUccNSE.[FathersHGName])<>0) and  #ClientUccNSE.clientid=@Clientid)
										--	Begin
										--		Update #ClientUccNSE Set ValidationForInternal='Error' 
										--		where #ClientUccNSE.clientid=@Clientid
										--	End
										--if Exists(select * from #ClientUccNSE where (#ClientUccNSE.Maritalstatus is not null or len(#ClientUccNSE.Maritalstatus)<>0) and  #ClientUccNSE.clientid=@Clientid)
										--	Begin
										--		Update #ClientUccNSE Set ValidationForInternal='Error' 
										--		where #ClientUccNSE.clientid=@Clientid
										--	End
										--if Exists(select * from #ClientUccNSE where (#ClientUccNSE.Incorporationplace is not null or len(#ClientUccNSE.Incorporationplace)<>0) and  #ClientUccNSE.clientid=@Clientid)
										--	Begin
										--		Update #ClientUccNSE Set ValidationForInternal='Error' 
										--		where #ClientUccNSE.clientid=@Clientid
										--	End
										--	Update #ClientUccNSE Set Nationality='',[NationalityOther]='' 
										--	where #ClientUccNSE.clientid=@Clientid
										Update #ClientUccNSE set Gender='' where #ClientUccNSE.clientid=@Clientid
										Update #ClientUccNSE set [FathersHGName]='' where #ClientUccNSE.clientid=@Clientid
										Update #ClientUccNSE set Maritalstatus='' where #ClientUccNSE.clientid=@Clientid
										Update #ClientUccNSE set Nationality='' where #ClientUccNSE.clientid=@Clientid
										Update #ClientUccNSE set [NationalityOther]='' where #ClientUccNSE.clientid=@Clientid
										Update #ClientUccNSE set Incorporationplace='' where #ClientUccNSE.clientid=@Clientid
									End
								If (@Legalcodevalue in ('04','06','12','18','19','20'))
									Begin
										if  Exists(select * from #ClientUccNSE where len(#ClientUccNSE.ClientEmail)=0 and  #ClientUccNSE.clientid=@Clientid)
											Begin
												Update #ClientUccNSE Set ValidationForInternal='Error',ClientEmail='Data Mismatch' 
												where #ClientUccNSE.clientid=@Clientid
											End
									End
								
								If (@Legalcodevalue in ('13'))
									Begin
										if  Exists(select * from #ClientUccNSE where (len(#ClientUccNSE.CIN)=0 or CIN is null) and  #ClientUccNSE.clientid=@Clientid)
											Begin
												Update #ClientUccNSE Set ValidationForInternal='Error' ,CIN='Data Mismatch'
												where #ClientUccNSE.clientid=@Clientid
											End
									End
								If (@Legalcodevalue not in ('01','02','11','04','10'))
									Begin
										if  Exists(select * from #ClientUccNSE where (Commencementdate is null or Commencementdate='01011900') and  #ClientUccNSE.clientid=@Clientid)
											Begin
												Update #ClientUccNSE Set ValidationForInternal='Error',Commencementdate='Data Mismatch' 
												where #ClientUccNSE.clientid=@Clientid
											End
									End
								If (@Legalcodevalue not in ('01','02','11','13'))
									Begin
										if  Exists(select * from #ClientUccNSE where (Regnoclient is null or LEN(Regnoclient)=0) and  #ClientUccNSE.clientid=@Clientid)
											Begin
												Update #ClientUccNSE Set ValidationForInternal='Error' ,Regnoclient='Data Mismatch'
												where #ClientUccNSE.clientid=@Clientid
											End
										if  Exists(select * from #ClientUccNSE where (Regnplace is null or LEN(Regnplace)=0) and  #ClientUccNSE.clientid=@Clientid)
											Begin
												Update #ClientUccNSE Set ValidationForInternal='Error' ,Regnplace='Data Mismatch'
												where #ClientUccNSE.clientid=@Clientid
											End
										if  Exists(select * from #ClientUccNSE where (RegistringAuth is null or LEN(RegistringAuth)=0) and  #ClientUccNSE.clientid=@Clientid)
											Begin
												Update #ClientUccNSE Set ValidationForInternal='Error' ,RegistringAuth='Data Mismatch'
												where #ClientUccNSE.clientid=@Clientid
											End
										if  Exists(select * from #ClientUccNSE where (Regndate is null or Regndate='01011900') and  #ClientUccNSE.clientid=@Clientid)
											Begin
												Update #ClientUccNSE Set ValidationForInternal='Error',Regndate='Data Mismatch' 
												where #ClientUccNSE.clientid=@Clientid
											End
									End
								Else
									Begin
										Update #ClientUccNSE set Regnoclient='',Regnplace='' where #ClientUccNSE.clientid=@Clientid
										Update #ClientUccNSE set RegistringAuth='',Regndate='' where #ClientUccNSE.clientid=@Clientid
										
									End
								If (@Legalcodevalue in ('13','15','16','17'))
									Begin
										if  Exists(select * from #ClientUccNSE where (len(#ClientUccNSE.Contpersonname1)=0 or len(#ClientUccNSE.Contpersonname2)=0)  and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',Contpersonname1='Data Mismatch' ,Contpersonname2='Data Mismatch'
														where #ClientUccNSE.clientid=@Clientid
													End
										if  Exists(select * from #ClientUccNSE where (len(#ClientUccNSE.contpersonaddress1)=0 or len(#ClientUccNSE.contpersonaddress2)=0)  and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error' ,contpersonaddress1='Data Mismatch',contpersonaddress2='Data Mismatch'
														where #ClientUccNSE.clientid=@Clientid
													End
										if  Exists(select * from #ClientUccNSE where (len(#ClientUccNSE.contpersonphone1)=0 or len(#ClientUccNSE.contpersonphone2)=0)  and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',contpersonphone1='Data Mismatch' ,contpersonphone2='Data Mismatch' 
														where #ClientUccNSE.clientid=@Clientid
													End
										If (@Legalcodevalue in ('15'))
											Begin
												if  Not Exists(select * from #ClientUccNSE where (#ClientUccNSE.Contpersondeg1='PARTNER' or #ClientUccNSE.Contpersondeg2='PARTNER')  and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',Contpersondeg1='Data Mismatch' ,Contpersondeg2='Data Mismatch'  
														where #ClientUccNSE.clientid=@Clientid
													End
											End
										If (@Legalcodevalue in ('16'))
											Begin
												if  Not Exists(select * from #ClientUccNSE where (#ClientUccNSE.Contpersondeg1='KARTA' or #ClientUccNSE.Contpersondeg2='KARTA')  and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',Contpersondeg1='Data Mismatch' ,Contpersondeg2='Data Mismatch' 
														where #ClientUccNSE.clientid=@Clientid
													End
											End
										If (@Legalcodevalue in ('13'))
											Begin
												if  Not Exists(select * from #ClientUccNSE where (#ClientUccNSE.Contpersondeg1='DIRECTOR' or #ClientUccNSE.Contpersondeg2='DIRECTOR')  and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error',Contpersondeg1='Data Mismatch' ,Contpersondeg2='Data Mismatch' 
														where #ClientUccNSE.clientid=@Clientid
													End
											End
										If (@Legalcodevalue in ('17'))
											Begin
												if  Not Exists(select * from #ClientUccNSE where (#ClientUccNSE.Contpersondeg1='TRUSTEE' or #ClientUccNSE.Contpersondeg2='TRUSTEE')  and  #ClientUccNSE.clientid=@Clientid)
													Begin
														Update #ClientUccNSE Set ValidationForInternal='Error' ,Contpersondeg1='Data Mismatch' ,Contpersondeg2='Data Mismatch'
														where #ClientUccNSE.clientid=@Clientid
													End
											End
									End
									if  Exists(select * from #ClientUccNSE where (len(#ClientUccNSE.ClientAddress1)=0 or #ClientUccNSE.ClientAddress1 is null) and  #ClientUccNSE.clientid=@Clientid)
											Begin
												Update #ClientUccNSE Set ValidationForInternal='Error',ClientAddress1='Data Mismatch' 
												where #ClientUccNSE.clientid=@Clientid
											End
									if  Exists(select * from #ClientUccNSE where (@dynamicannualincome is null and #ClientUccNSE.Networth is null) and  #ClientUccNSE.clientid=@Clientid)
											Begin
												Update #ClientUccNSE Set ValidationForInternal='Error' ,Networth='Data Mismatch'
												where #ClientUccNSE.clientid=@Clientid
											End
							End
						If (@Segmentname='MCX - COMM')
							Begin
								if  Exists(select * from #ClientUccmcxcomm where clientfirstname='' and  #ClientUccmcxcomm.clientid=@Clientid)
										Begin
											Update #ClientUccmcxcomm Set ValidationForInternal='Error' ,clientfirstname='Data Mismatch'
											where #ClientUccmcxcomm.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccmcxcomm where (address1='' or address1 is null or len(address1)=0) and  #ClientUccmcxcomm.clientid=@Clientid)
										Begin
											Update #ClientUccmcxcomm Set ValidationForInternal='Error' ,address1='Data Mismatch'
											where #ClientUccmcxcomm.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccmcxcomm where (city='' or city is null or len(city)=0) and  #ClientUccmcxcomm.clientid=@Clientid)
										Begin
											Update #ClientUccmcxcomm Set ValidationForInternal='Error' ,city='Data Mismatch'
											where #ClientUccmcxcomm.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccmcxcomm where (state='' or state is null or len(state)=0) and  #ClientUccmcxcomm.clientid=@Clientid)
										Begin
											Update #ClientUccmcxcomm Set ValidationForInternal='Error' ,state='Data Mismatch'
											where #ClientUccmcxcomm.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccmcxcomm where (country='' or country is null or len(country)=0) and  #ClientUccmcxcomm.clientid=@Clientid)
										Begin
											Update #ClientUccmcxcomm Set ValidationForInternal='Error' ,country='Data Mismatch'
											where #ClientUccmcxcomm.clientid=@Clientid
										End
								if (@Legalcodevalue in ('01'))
									begin
										if  Exists(select * from #ClientUccmcxcomm where (dateofbirth='' or dateofbirth is null or dateofbirth='01011900') and  #ClientUccmcxcomm.clientid=@Clientid)
										Begin
											Update #ClientUccmcxcomm Set ValidationForInternal='Error' ,dateofbirth='Data Mismatch'
											where #ClientUccmcxcomm.clientid=@Clientid
										End
									End
								if  Exists(select * from #ClientUccmcxcomm where (pan='' or pan is null or len(pan)=0) and  #ClientUccmcxcomm.clientid=@Clientid)
										Begin
											Update #ClientUccmcxcomm Set ValidationForInternal='Error' ,pan='Data Mismatch'
											where #ClientUccmcxcomm.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccmcxcomm where (Emailid='' or Emailid is null or len(Emailid)=0 and Mobileno='' or Mobileno is null or len(Mobileno)=0) and  #ClientUccmcxcomm.clientid=@Clientid)
										Begin
											Update #ClientUccmcxcomm Set ValidationForInternal='Error' ,Mobileno='Data Mismatch',Emailid='Data Mismatch'
											where #ClientUccmcxcomm.clientid=@Clientid
										End
							
							End
						If (@Segmentname='BSE - CM' or @Segmentname='BSE - FO')
							Begin
								if  Exists(select * from #ClientUccBse where (clientcode='' or clienttype='' or clientstatus='' or clientcategory='')  and #ClientUccBse.clientid=@Clientid)
										Begin
											Update #ClientUccBse Set ValidationForInternal='Error' ,clientcode='Data Mismatch',clienttype='Data Mismatch',clientstatus='Data Mismatch',clientcategory='Data Mismatch'
											where #ClientUccBse.clientid=@Clientid
											Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccBse where (clientpan='' or clientpan is null)  and #ClientUccBse.clientid=@Clientid)
										Begin
											Update #ClientUccBse Set ValidationForInternal='Error' ,clientpan='Data Mismatch'
											where #ClientUccBse.clientid=@Clientid
											Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccBse where (clientaddresspermanant='' or clientaddresspermanant is null)  and #ClientUccBse.clientid=@Clientid)
										Begin
											Update #ClientUccBse Set ValidationForInternal='Error' ,clientaddresspermanant='Data Mismatch'
											where #ClientUccBse.clientid=@Clientid
											Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccBse where (clientaddresscorespondence='' or clientaddresscorespondence is null)  and #ClientUccBse.clientid=@Clientid)
										Begin
											Update #ClientUccBse Set ValidationForInternal='Error' ,clientaddresscorespondence='Data Mismatch'
											where #ClientUccBse.clientid=@Clientid
											Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccBse where (clientaddressflag='' or clientaddressflag is null)  and #ClientUccBse.clientid=@Clientid)
										Begin
											Update #ClientUccBse Set ValidationForInternal='Error' ,clientaddressflag='Data Mismatch'
											where #ClientUccBse.clientid=@Clientid
											Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccBse where (country='' or country is null)  and #ClientUccBse.clientid=@Clientid)
										Begin
											Update #ClientUccBse Set ValidationForInternal='Error' ,country='Data Mismatch'
											where #ClientUccBse.clientid=@Clientid
											Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccBse where (state='' or state is null)  and #ClientUccBse.clientid=@Clientid)
										Begin
											Update #ClientUccBse Set ValidationForInternal='Error' ,state='Data Mismatch'
											where #ClientUccBse.clientid=@Clientid
											Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccBse where (city='' or city is null)  and #ClientUccBse.clientid=@Clientid)
										Begin
											Update #ClientUccBse Set ValidationForInternal='Error' ,city='Data Mismatch'
											where #ClientUccBse.clientid=@Clientid
											Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccBse where (pin='' or pin is null) and country='INDIA'  and #ClientUccBse.clientid=@Clientid)
										Begin
											Update #ClientUccBse Set ValidationForInternal='Error' ,pin='Data Mismatch'
											where #ClientUccBse.clientid=@Clientid
											Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccBse where (pin='' or pin is null) and country='INDIA'  and #ClientUccBse.clientid=@Clientid)
										Begin
											Update #ClientUccBse Set ValidationForInternal='Error' ,pin='Data Mismatch'
											where #ClientUccBse.clientid=@Clientid
											Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccBse where (Typeofservice='' or Typeofservice is null)   and #ClientUccBse.clientid=@Clientid)
										Begin
											Update #ClientUccBse Set ValidationForInternal='Error' ,Typeofservice='Data Mismatch'
											where #ClientUccBse.clientid=@Clientid
											Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccBse where (Contactdetailsflag='' or Contactdetailsflag is null)   and #ClientUccBse.clientid=@Clientid)
										Begin
											Update #ClientUccBse Set ValidationForInternal='Error' ,Contactdetailsflag='Data Mismatch'
											where #ClientUccBse.clientid=@Clientid
											Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccBse where (Clientemail='' or Clientemail is null) and Typeofservice in ('2','3')  and #ClientUccBse.clientid=@Clientid)
										Begin
											Update #ClientUccBse Set ValidationForInternal='Error' ,Clientemail='Data Mismatch'
											where #ClientUccBse.clientid=@Clientid
											Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccBse where (Mobnumber='' or Mobnumber is null) and Typeofservice in ('1','3') and Contactdetailsflag in ('2','3')  and #ClientUccBse.clientid=@Clientid)
										Begin
											Update #ClientUccBse Set ValidationForInternal='Error' ,Mobnumber='Data Mismatch'
											where #ClientUccBse.clientid=@Clientid
											Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccBse where (Stdcode='' or Stdcode is null) and Contactdetailsflag in ('1','3')  and #ClientUccBse.clientid=@Clientid)
										Begin
											Update #ClientUccBse Set ValidationForInternal='Error' ,Stdcode='Data Mismatch'
											where #ClientUccBse.clientid=@Clientid
											Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccBse where (Phonenumber='' or Phonenumber is null) and Contactdetailsflag in ('1','3')  and #ClientUccBse.clientid=@Clientid)
										Begin
											Update #ClientUccBse Set ValidationForInternal='Error' ,Phonenumber='Data Mismatch'
											where #ClientUccBse.clientid=@Clientid
											Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccBse where (Clinetactive='' or Clinetactive is null)  and #ClientUccBse.clientid=@Clientid)
										Begin
											Update #ClientUccBse Set ValidationForInternal='Error' ,Clinetactive='Data Mismatch'
											where #ClientUccBse.clientid=@Clientid
											Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
										End
								if  Exists(select * from #ClientUccBse where (Reason='' or Reason is null) and @BseAccounttype='M'  and #ClientUccBse.clientid=@Clientid)
										Begin
											Update #ClientUccBse Set ValidationForInternal='Error' ,Reason='Data Mismatch'
											where #ClientUccBse.clientid=@Clientid
											Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
										End
								
								If(@LegalType<>'INS')
									Begin
										if  Exists(select * from #ClientUccBse where (clientpep='' or clientpep is null)  and #ClientUccBse.clientid=@Clientid)
											Begin
												Update #ClientUccBse Set ValidationForInternal='Error' ,clientpep='Data Mismatch'
												where #ClientUccBse.clientid=@Clientid
												Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
											End
										if  Exists(select * from #ClientUccBse where (dp1='' or dp1 is null or dematid1='' or dematid1 is null or dpname1='' or dpname1 is null)   and #ClientUccBse.clientid=@Clientid)
											Begin
												Update #ClientUccBse Set ValidationForInternal='Error' ,dp1='Data Mismatch',dematid1='Data Mismatch',dpname1='Data Mismatch'
												where #ClientUccBse.clientid=@Clientid
												Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
											End
										if  Exists(select * from #ClientUccBse where (bankname1='' or bankname1 is null or bankaccno1='' or bankaccno1 is null or bankaddress1='' or bankaddress1 is null)   and #ClientUccBse.clientid=@Clientid)
											Begin
												Update #ClientUccBse Set ValidationForInternal='Error' ,bankname1='Data Mismatch',bankaccno1='Data Mismatch',bankaddress1='Data Mismatch'
												where #ClientUccBse.clientid=@Clientid
												Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
											End
										if  Exists(select * from #ClientUccBse where (Clientprovidedetails='' or Clientprovidedetails is null)  and #ClientUccBse.clientid=@Clientid)
											Begin
												Update #ClientUccBse Set ValidationForInternal='Error' ,Clientprovidedetails='Data Mismatch'
												where #ClientUccBse.clientid=@Clientid
												Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
											End
										if  Exists(select * from #ClientUccBse where (Income='' or Income is null) and Clientprovidedetails in ('1','3')  and #ClientUccBse.clientid=@Clientid)
											Begin
												Update #ClientUccBse Set ValidationForInternal='Error' ,Income='Data Mismatch'
												where #ClientUccBse.clientid=@Clientid
												Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
											End
										if  Exists(select * from #ClientUccBse where (Incomedate='' or Incomedate is null or Incomedate='01/01/1900') and Clientprovidedetails in ('1','3')  and #ClientUccBse.clientid=@Clientid)
											Begin
												Update #ClientUccBse Set ValidationForInternal='Error' ,Incomedate='Data Mismatch'
												where #ClientUccBse.clientid=@Clientid
												Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
											End
										if  Exists(select * from #ClientUccBse where (Networth='' or Networth is null) and Clientprovidedetails in ('2','3')  and #ClientUccBse.clientid=@Clientid)
											Begin
												Update #ClientUccBse Set ValidationForInternal='Error' ,Networth='Data Mismatch'
												where #ClientUccBse.clientid=@Clientid
												Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
											End
										if  Exists(select * from #ClientUccBse where (Networthdate='' or Networthdate is null or Networthdate='01/01/1900') and Clientprovidedetails in ('2','3')  and #ClientUccBse.clientid=@Clientid)
											Begin
												Update #ClientUccBse Set ValidationForInternal='Error' ,Networthdate='Data Mismatch'
												where #ClientUccBse.clientid=@Clientid
												Update #ContactPersonForBse Set validationerr='Error'
											where #ContactPersonForBse.clientid=@Clientid
											End
										If(@LegalType='I')
											Begin
												if  Exists(select * from #ClientUccBse where (clientlastname='' or clientlastname is null)  and #ClientUccBse.clientid=@Clientid)
													Begin
														Update #ClientUccBse Set ValidationForInternal='Error' ,clientlastname='Data Mismatch'
														where #ClientUccBse.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccBse where (Dateofbirth='' or Dateofbirth is null or Dateofbirth='01/01/1900')  and #ClientUccBse.clientid=@Clientid)
													Begin
														Update #ClientUccBse Set ValidationForInternal='Error' ,Dateofbirth='Data Mismatch'
														where #ClientUccBse.clientid=@Clientid
													End
											End
										If(@LegalType='NI')
											Begin
												if  Exists(select * from #ClientUccBse where (clientregdate='' or clientregdate is null or clientregdate='01/01/1900')  and #ClientUccBse.clientid=@Clientid)
													Begin
														Update #ClientUccBse Set ValidationForInternal='Error' ,clientregdate='Data Mismatch'
														where #ClientUccBse.clientid=@Clientid
														Update #ContactPersonForBse Set validationerr='Error'
														where #ContactPersonForBse.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccBse where (contactname1='' or contactname1 is null)  and #ClientUccBse.clientid=@Clientid)
													Begin
														Update #ClientUccBse Set ValidationForInternal='Error' ,contactname1='Data Mismatch'
														where #ClientUccBse.clientid=@Clientid
														Update #ContactPersonForBse Set validationerr='Error'
														where #ContactPersonForBse.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccBse where (contactdeg1='' or contactdeg1 is null)  and #ClientUccBse.clientid=@Clientid)
													Begin
														Update #ClientUccBse Set ValidationForInternal='Error' ,contactdeg1='Data Mismatch'
														where #ClientUccBse.clientid=@Clientid
														Update #ContactPersonForBse Set validationerr='Error'
														where #ContactPersonForBse.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccBse where (contactaddress1='' or contactaddress1 is null)  and #ClientUccBse.clientid=@Clientid)
													Begin
														Update #ClientUccBse Set ValidationForInternal='Error' ,contactaddress1='Data Mismatch'
														where #ClientUccBse.clientid=@Clientid
														Update #ContactPersonForBse Set validationerr='Error'
														where #ContactPersonForBse.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccBse where (contactpan1='' or contactpan1 is null)  and #ClientUccBse.clientid=@Clientid)
													Begin
														Update #ClientUccBse Set ValidationForInternal='Error' ,contactpan1='Data Mismatch'
														where #ClientUccBse.clientid=@Clientid
														Update #ContactPersonForBse Set validationerr='Error'
														where #ContactPersonForBse.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccBse where (contactphone1='' or contactphone1 is null)  and #ClientUccBse.clientid=@Clientid)
													Begin
														Update #ClientUccBse Set ValidationForInternal='Error' ,contactphone1='Data Mismatch'
														where #ClientUccBse.clientid=@Clientid
														Update #ContactPersonForBse Set validationerr='Error'
														where #ContactPersonForBse.clientid=@Clientid
													End
													
												if  Exists(select * from #ClientUccBse where (contactname2='' or contactname2 is null)  and #ClientUccBse.clientid=@Clientid)
													Begin
														Update #ClientUccBse Set ValidationForInternal='Error' ,contactname2='Data Mismatch'
														where #ClientUccBse.clientid=@Clientid
														Update #ContactPersonForBse Set validationerr='Error'
														where #ContactPersonForBse.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccBse where (contactdeg2='' or contactdeg2 is null)  and #ClientUccBse.clientid=@Clientid)
													Begin
														Update #ClientUccBse Set ValidationForInternal='Error' ,contactdeg2='Data Mismatch'
														where #ClientUccBse.clientid=@Clientid
														Update #ContactPersonForBse Set validationerr='Error'
														where #ContactPersonForBse.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccBse where (contactaddress2='' or contactaddress2 is null)  and #ClientUccBse.clientid=@Clientid)
													Begin
														Update #ClientUccBse Set ValidationForInternal='Error' ,contactaddress2='Data Mismatch'
														where #ClientUccBse.clientid=@Clientid
														Update #ContactPersonForBse Set validationerr='Error'
														where #ContactPersonForBse.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccBse where (contactpan2='' or contactpan2 is null)  and #ClientUccBse.clientid=@Clientid)
													Begin
														Update #ClientUccBse Set ValidationForInternal='Error' ,contactpan2='Data Mismatch'
														where #ClientUccBse.clientid=@Clientid
														Update #ContactPersonForBse Set validationerr='Error'
														where #ContactPersonForBse.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccBse where (contactphone2='' or contactphone2 is null)  and #ClientUccBse.clientid=@Clientid)
													Begin
														Update #ClientUccBse Set ValidationForInternal='Error' ,contactphone2='Data Mismatch'
														where #ClientUccBse.clientid=@Clientid
														Update #ContactPersonForBse Set validationerr='Error'
														where #ContactPersonForBse.clientid=@Clientid
													End
											End
										If(@Legalcodevalue='BCO')
											Begin
												if  Exists(select * from #ClientUccBse where (CINyesorno='' or CINyesorno is null or CINyesorno='N')  and #ClientUccBse.clientid=@Clientid)
													Begin
														Update #ClientUccBse Set ValidationForInternal='Error' ,CINyesorno='Data Mismatch'
														where #ClientUccBse.clientid=@Clientid
														Update #ContactPersonForBse Set validationerr='Error'
														where #ContactPersonForBse.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccBse where (CINNo='' or CINNo is null)  and #ClientUccBse.clientid=@Clientid)
													Begin
														Update #ClientUccBse Set ValidationForInternal='Error' ,CINNo='Data Mismatch'
														where #ClientUccBse.clientid=@Clientid
														Update #ContactPersonForBse Set validationerr='Error'
														where #ContactPersonForBse.clientid=@Clientid
													End
												if  Exists(select * from #ClientUccBse where (Noofdirectors='' or Noofdirectors is null or Noofdirectors='0')  and #ClientUccBse.clientid=@Clientid)
													Begin
														Update #ClientUccBse Set ValidationForInternal='Error' ,Noofdirectors='Data Mismatch'
														where #ClientUccBse.clientid=@Clientid
														Update #ContactPersonForBse Set validationerr='Error'
														where #ContactPersonForBse.clientid=@Clientid
													End
											End
									End
									
									If Exists(Select * from #ClientUccBse where clientcategory='BCO' and clientid=@Clientid)
										Begin
											insert into #FinalExportBse
											Select cast(ltrim(rtrim(isnull(clientnewmodify,''))) +'|'+ltrim(rtrim(isnull(clientbatuser,''))) +'|'+ltrim(rtrim(isnull(clienttype,''))) +'|'+ltrim(rtrim(isnull(clientstatus,''))) +'|'+ltrim(rtrim(isnull(clientcategory,''))) +'|'+
											ltrim(rtrim(isnull(clientcode,''))) +'|'+ltrim(rtrim(isnull(clientpan,''))) +'|'+ltrim(rtrim(isnull(clientpep,''))) +'|'+ltrim(rtrim(isnull(clientaddresspermanant,''))) +'|'+ltrim(rtrim(isnull(clientaddressflag,''))) +'|'+ltrim(rtrim(isnull(clientaddresscorespondence,''))) +'|'+
											ltrim(rtrim(isnull(country,''))) +'|'+ltrim(rtrim(isnull(state,''))) +'|'+ltrim(rtrim(isnull(city,''))) +'|'+ltrim(rtrim(isnull(pin,''))) +'|'+ltrim(rtrim(isnull(Typeofservice,''))) +'|'+ltrim(rtrim(isnull(Contactdetailsflag,''))) +'|'+ltrim(rtrim(isnull(Clientemail,''))) +'|'+ltrim(rtrim(isnull(Mobnumber,''))) +'|'+
											ltrim(rtrim(isnull(Stdcode,''))) +'|'+ltrim(rtrim(isnull(Phonenumber,''))) +'|'+ltrim(rtrim(isnull(equitycpcode,''))) +'|'+ltrim(rtrim(isnull(equitycmid,''))) +'|'+ltrim(rtrim(isnull(Fnocpcode,''))) +'|'+ltrim(rtrim(isnull(Fnocmid,''))) +'|'+ltrim(rtrim(isnull(dpname1,''))) +'|'+ltrim(rtrim(isnull(dematid1,''))) +'|'+ltrim(rtrim(isnull(dp1,''))) +'|'+
											ltrim(rtrim(isnull(dpname2,''))) +'|'+ltrim(rtrim(isnull(dematid2,''))) +'|'+ltrim(rtrim(isnull(dp2,''))) +'|'+ltrim(rtrim(isnull(dpname3,''))) +'|'+ltrim(rtrim(isnull(dematid3,''))) +'|'+ltrim(rtrim(isnull(dp3,''))) +'|'+ltrim(rtrim(isnull(bankname1,''))) +'|'+ltrim(rtrim(isnull(bankaccno1,''))) +'|'+ltrim(rtrim(isnull(bankaddress1,''))) +'|'+
											ltrim(rtrim(isnull(bankname2,''))) +'|'+ltrim(rtrim(isnull(bankaccno2,''))) +'|'+ltrim(rtrim(isnull(bankaddress2,''))) +'|'+ltrim(rtrim(isnull(bankname3,''))) +'|'+ltrim(rtrim(isnull(bankaccno3,''))) +'|'+ltrim(rtrim(isnull(bankaddress3,''))) +'|'+ltrim(rtrim(isnull(Clientaggreedate,''))) +'|'+ltrim(rtrim(isnull(Clientprovidedetails,''))) +'|'+
											ltrim(rtrim(isnull(Income,''))) +'|'+ltrim(rtrim(isnull(Incomedate,''))) +'|'+ltrim(rtrim(isnull(Networth,''))) +'|'+ltrim(rtrim(isnull(Networthdate,''))) +'|'+ltrim(rtrim(isnull(Clinetactive,''))) +'|'+ltrim(rtrim(isnull(Reason,''))) +'|'+ltrim(rtrim(isnull(clientfirstname,''))) +'|'+ltrim(rtrim(isnull(clientmiddlename,''))) +'|'+ltrim(rtrim(isnull(clientlastname,''))) +'|'+
											ltrim(rtrim(isnull(Andharcard,''))) +'|'+ltrim(rtrim(isnull(Dateofbirth,''))) +'|'+ltrim(rtrim(isnull(Clientfullname,''))) +'|'+ltrim(rtrim(isnull(clientregnno,''))) +'|'+ltrim(rtrim(isnull(clientregauth,''))) +'|'+ltrim(rtrim(isnull(clientregdate,''))) +'|'+ltrim(rtrim(isnull(clientregplace,''))) +'|'+ltrim(rtrim(isnull(CINyesorno,''))) +'|'+ltrim(rtrim(isnull(CINNo,''))) +'|'+
											ltrim(rtrim(isnull(Noofdirectors,''))) +'|'+ltrim(rtrim(isnull(partner_kartauid,''))) +'|'+ltrim(rtrim(isnull(partner_coparseneruid,''))) +'|'+ltrim(rtrim(isnull(contactname1,''))) +'|'+ltrim(rtrim(isnull(contactdeg1,''))) +'|'+ltrim(rtrim(isnull(contactaddress1,''))) +'|'+ltrim(rtrim(isnull(contactemail1,''))) +'|'+ltrim(rtrim(isnull(contactpan1,''))) +'|'+ltrim(rtrim(isnull(contactphone1,''))) +'|'+
											ltrim(rtrim(isnull(contactname2,''))) +'|'+ltrim(rtrim(isnull(contactdeg2,''))) +'|'+ltrim(rtrim(isnull(contactaddress2,''))) +'|'+ltrim(rtrim(isnull(contactemail2,''))) +'|'+ltrim(rtrim(isnull(contactpan2,''))) 
											+'|'+ltrim(rtrim(isnull(contactphone2,'')))+'|'+@Bsecash+'|'+@Bsederivative+'|'+'N'+'|'+@Bsecdx+'|'+'N'  as varchar(max))
											from #ClientUccBse where ValidationForInternal='' and clientid=@Clientid
											union
											select cast(Directorflag+'|'+ClientUCC+'|'+Directorname+'|'+Din+'|'+Foreginresidenttag+'|'+DirPanNo as varchar(max))
											from #ContactPersonForBse where validationerr='' and clientid=@Clientid
										End
									Else
										Begin
											insert into #FinalExportBse
											Select cast(ltrim(rtrim(isnull(clientnewmodify,''))) +'|'+ltrim(rtrim(isnull(clientbatuser,''))) +'|'+ltrim(rtrim(isnull(clienttype,''))) +'|'+ltrim(rtrim(isnull(clientstatus,''))) +'|'+ltrim(rtrim(isnull(clientcategory,''))) +'|'+
											ltrim(rtrim(isnull(clientcode,''))) +'|'+ltrim(rtrim(isnull(clientpan,''))) +'|'+ltrim(rtrim(isnull(clientpep,''))) +'|'+ltrim(rtrim(isnull(clientaddresspermanant,''))) +'|'+ltrim(rtrim(isnull(clientaddressflag,''))) +'|'+ltrim(rtrim(isnull(clientaddresscorespondence,''))) +'|'+
											ltrim(rtrim(isnull(country,''))) +'|'+ltrim(rtrim(isnull(state,''))) +'|'+ltrim(rtrim(isnull(city,''))) +'|'+ltrim(rtrim(isnull(pin,''))) +'|'+ltrim(rtrim(isnull(Typeofservice,''))) +'|'+ltrim(rtrim(isnull(Contactdetailsflag,''))) +'|'+ltrim(rtrim(isnull(Clientemail,''))) +'|'+ltrim(rtrim(isnull(Mobnumber,''))) +'|'+
											ltrim(rtrim(isnull(Stdcode,''))) +'|'+ltrim(rtrim(isnull(Phonenumber,''))) +'|'+ltrim(rtrim(isnull(equitycpcode,''))) +'|'+ltrim(rtrim(isnull(equitycmid,''))) +'|'+ltrim(rtrim(isnull(Fnocpcode,''))) +'|'+ltrim(rtrim(isnull(Fnocmid,''))) +'|'+ltrim(rtrim(isnull(dpname1,''))) +'|'+ltrim(rtrim(isnull(dematid1,''))) +'|'+ltrim(rtrim(isnull(dp1,''))) +'|'+
											ltrim(rtrim(isnull(dpname2,''))) +'|'+ltrim(rtrim(isnull(dematid2,''))) +'|'+ltrim(rtrim(isnull(dp2,''))) +'|'+ltrim(rtrim(isnull(dpname3,''))) +'|'+ltrim(rtrim(isnull(dematid3,''))) +'|'+ltrim(rtrim(isnull(dp3,''))) +'|'+ltrim(rtrim(isnull(bankname1,''))) +'|'+ltrim(rtrim(isnull(bankaccno1,''))) +'|'+ltrim(rtrim(isnull(bankaddress1,''))) +'|'+
											ltrim(rtrim(isnull(bankname2,''))) +'|'+ltrim(rtrim(isnull(bankaccno2,''))) +'|'+ltrim(rtrim(isnull(bankaddress2,''))) +'|'+ltrim(rtrim(isnull(bankname3,''))) +'|'+ltrim(rtrim(isnull(bankaccno3,''))) +'|'+ltrim(rtrim(isnull(bankaddress3,''))) +'|'+ltrim(rtrim(isnull(Clientaggreedate,''))) +'|'+ltrim(rtrim(isnull(Clientprovidedetails,''))) +'|'+
											ltrim(rtrim(isnull(Income,''))) +'|'+ltrim(rtrim(isnull(Incomedate,''))) +'|'+ltrim(rtrim(isnull(Networth,''))) +'|'+ltrim(rtrim(isnull(Networthdate,''))) +'|'+ltrim(rtrim(isnull(Clinetactive,''))) +'|'+ltrim(rtrim(isnull(Reason,''))) +'|'+ltrim(rtrim(isnull(clientfirstname,''))) +'|'+ltrim(rtrim(isnull(clientmiddlename,''))) +'|'+ltrim(rtrim(isnull(clientlastname,''))) +'|'+
											ltrim(rtrim(isnull(Andharcard,''))) +'|'+ltrim(rtrim(isnull(Dateofbirth,''))) +'|'+ltrim(rtrim(isnull(Clientfullname,''))) +'|'+ltrim(rtrim(isnull(clientregnno,''))) +'|'+ltrim(rtrim(isnull(clientregauth,''))) +'|'+ltrim(rtrim(isnull(clientregdate,''))) +'|'+ltrim(rtrim(isnull(clientregplace,''))) +'|'+ltrim(rtrim(isnull(CINyesorno,''))) +'|'+ltrim(rtrim(isnull(CINNo,''))) +'|'+
											ltrim(rtrim(isnull(Noofdirectors,''))) +'|'+ltrim(rtrim(isnull(partner_kartauid,''))) +'|'+ltrim(rtrim(isnull(partner_coparseneruid,''))) +'|'+ltrim(rtrim(isnull(contactname1,''))) +'|'+ltrim(rtrim(isnull(contactdeg1,''))) +'|'+ltrim(rtrim(isnull(contactaddress1,''))) +'|'+ltrim(rtrim(isnull(contactemail1,''))) +'|'+ltrim(rtrim(isnull(contactpan1,''))) +'|'+ltrim(rtrim(isnull(contactphone1,''))) +'|'+
											ltrim(rtrim(isnull(contactname2,''))) +'|'+ltrim(rtrim(isnull(contactdeg2,''))) +'|'+ltrim(rtrim(isnull(contactaddress2,''))) +'|'+ltrim(rtrim(isnull(contactemail2,''))) +'|'+ltrim(rtrim(isnull(contactpan2,''))) 
											+'|'+ltrim(rtrim(isnull(contactphone2,'')))+'|'+@Bsecash+'|'+@Bsederivative+'|'+'N'+'|'+@Bsecdx+'|'+'N' as varchar(max))
											from #ClientUccBse where ValidationForInternal='' and clientid=@Clientid
										End
							End
							---------------------------------------Validation End--------------------------------------------------
								
							Set @Clientid=''
							set @Legalcodevalue=''
							set @LegalType=''
							Set @Clientaddressflag=''
							Set @dynamicloopcounter=''
							Drop Table #tempbankdetail
							Drop Table #tempdpdetail
							Drop Table #tempcontactperson
							
							Set @Loopcounterstaticforclient=@Loopcounterstaticforclient+1	
							
							
							
					End------------Client Loop End
					Create Table #MismatchRecords(Automismatchid int identity,[Mis Matched Field and Related Path] varchar(max),Description varchar(max),Clientid varchar(20))
					Create Table #onlymiamatch(onlymismatchid int identity,Onlyfield varchar(max))
					declare @columncountstatic int,@columncountdynamic int,@colname varchar(max),@dsql varchar(max),@dynamiccolname varchar(max)
								
				If (@Segmentname='NSE - CM' or @Segmentname='NSE - FO' or @Segmentname='NSE - CDX')
					Begin
						If (@BseAccounttype='N')
							Begin
							
							
								select  * from #ClientUccNSE where ValidationForInternal is null
								Select COUNT(*) from #ClientUccNSE
								Select COUNT(*) from #ClientUccNSE Where ValidationForInternal is null
								select * from #ClientUccNSE where ValidationForInternal='Error'
								
								
								
							End
						Else
							Begin
								select  SrlNo,clientid,@Segmentcol,[ClientCode],Gender,[FathersHGName],Maritalstatus,Nationality,
								[NationalityOther],ClientEmail,ClientAddress1,Clientcity,Clientstatecode,Clientstateother,
								Clientcountrycode,Clientpin,AddressFlag,PermanantClientAddress1,PermanantClientcity,PermanantClientstatecode,
								PermanantClientstateother,PermanantClientcountrycode,PermanantClientpin,Residencestdcode,Residencephone,
								Mobileno,Offcstdcode,Officephone,DOB,Bankname1,Bankaddress1,BankAccNo1,DPname1,DPID1,BenAccno1,
								CIN,AnnualIncome,AnnualIncomedate,Networth,Networthdate,PEP,Occupation,OtherOccupation,CPcode,
								UpdationSMSEmailFlag,Relationship,SMSEmailfacility,Corporateclienttype,
								Contpersonname1 ,Contpersondeg1 ,Contpersonpan1 ,contpersonaddress1,contpersonphone1,Contpersondin1,Contpersonuid1,Contpersonemail1,
								Contpersonname2,Contpersondeg2,Contpersonpan2,contpersonaddress2,contpersonphone2,Contpersondin2,Contpersonuid2,Contpersonemail2,
								'E',ValidationForInternal from #ClientUccNSE where ValidationForInternal is null
								Select COUNT(*) from #ClientUccNSE
								Select COUNT(*) from #ClientUccNSE Where ValidationForInternal is null
								select  SrlNo,clientid,@Segmentcol,[ClientCode],Gender,[FathersHGName],Maritalstatus,Nationality,
								[NationalityOther],ClientEmail,ClientAddress1,Clientcity,Clientstatecode,Clientstateother,
								Clientcountrycode,Clientpin,AddressFlag,PermanantClientAddress1,PermanantClientcity,PermanantClientstatecode,
								PermanantClientstateother,PermanantClientcountrycode,PermanantClientpin,Residencestdcode,Residencephone,
								Mobileno,Offcstdcode,Officephone,DOB,Bankname1,Bankaddress1,BankAccNo1,DPname1,DPID1,BenAccno1,
								CIN,AnnualIncome,AnnualIncomedate,Networth,Networthdate,PEP,Occupation,OtherOccupation,CPcode,
								UpdationSMSEmailFlag,Relationship,SMSEmailfacility,Corporateclienttype,
								Contpersonname1 ,Contpersondeg1 ,Contpersonpan1 ,contpersonaddress1,contpersonphone1,Contpersondin1,Contpersonuid1,Contpersonemail1,
								Contpersonname2,Contpersondeg2,Contpersonpan2,contpersonaddress2,contpersonphone2,Contpersondin2,Contpersonuid2,Contpersonemail2,
								'E',ValidationForInternal from #ClientUccNSE where ValidationForInternal='Error'
								
								
							End
							Select @Loopcounterincrementalforclient=Max(SrlNo) From #ClientUccNSE
								Set @Loopcounterstaticforclient=1
								insert into #MismatchRecords
								select null,null,null
								union all
								select 'Client Name','Mismatch Field',''
								--union all
								--select '*************************','*************************',''
								While (@Loopcounterstaticforclient<=@Loopcounterincrementalforclient)
									Begin
										select @dynamiccolname='wrongtest'
										if exists(select * from #ClientUccNSE where SrlNo=@Loopcounterstaticforclient 
												and ValidationForInternal='Error')
											Begin
												select @Clientid=clientid from #ClientUccNSE where SrlNo=@Loopcounterstaticforclient and ValidationForInternal='Error'
												select @columncountdynamic=COUNT(*)From tempdb.Information_Schema.COLUMNS where TABLE_NAME like '%#ClientUccNSE%'
												Set @columncountstatic=1
												insert into #MismatchRecords
												select [ClientName],'','' from #ClientUccNSE where SrlNo=@Loopcounterstaticforclient and ValidationForInternal='Error'
												union all
												select '-------------------------','',@Clientid
												while (@columncountstatic<=@columncountdynamic)
													Begin
														select @colname=COLUMN_NAME From tempdb.Information_Schema.COLUMNS where TABLE_NAME like '%#ClientUccNSE%' and ORDINAL_POSITION=@columncountstatic													
														select @dsql=
														'if exists(select * from #ClientUccNSE where cast(['+@colname+'] as varchar(max))=''Data Mismatch'' and clientid in('''+@Clientid+'''))
															begin
																insert into #onlymiamatch
																select '''+@colname+'''
																insert into #MismatchRecords 
																select '''','''+@colname+''','''+@Clientid+'''
															End
															'
															exec(@dsql)
														Set @columncountstatic=@columncountstatic+1
													End
													select @dynamiccolname=coalesce(@dynamiccolname+',', '') + Convert(varchar,Description) from #MismatchRecords where Clientid=@Clientid
													select @dynamiccolname= replace (@dynamiccolname,'wrongtest,,','')
													
													update #MismatchRecords set Description=@dynamiccolname
													where Clientid=@Clientid
													delete from #MismatchRecords where len([Mis Matched Field and Related Path])=0
													select @dynamiccolname=''
											End
										Set @Loopcounterstaticforclient=@Loopcounterstaticforclient+1	
									End
									insert into #MismatchRecords ([Mis Matched Field and Related Path],Description)
									select REPLICATE('_',200),''
									union all
									select '',''
									union all
									select 'How  To Rectify Mismatched Fields.','Master-->Contacts-->Customers/Clients--->More Info of specific client'
									union all
									select '',''
									union all
									select 'Mis Matched Field','Detail Path'
									union all
									select distinct Onlyfield,'' from #onlymiamatch 
									
									update #MismatchRecords set Description=Path from #Nsemasterfiled
									where fieldname=[Mis Matched Field and Related Path]
									select [Mis Matched Field and Related Path],Description from #MismatchRecords
									

						
					End
				If (@Segmentname='MCXSX - CM' or @Segmentname='MCXSX - FO' or @Segmentname='MCXSX - CDX')
					Begin
						select  [ClientCode],[ClientName],Category,Pan,Gender,
						[FathersHGName],Maritalstatus,Nationality,[NationalityOther],ClientEmail,
						ClientAddress1,ClientAddress2,ClientAddress3,Clientcountrycode,Clientstatecode,
						Clientpin,AddressFlag,PermanantClientAddress1,PermanantClientAddress2,PermanantClientAddress3,
						PermanantClientcountrycode,PermanantClientstatecode,PermanantClientpin,Residencephone,Mobileno,
						Officephone,DOB,UIDNO,Bankname1,Bankaddress1,BankAccNo1,BankAcctype1,Bankname2,Bankaddress2,BankAccNo2,
						BankAcctype2,Bankname3,Bankaddress3,BankAccNo3,BankAcctype3,DPname1,DPID1,BenAccno1,DPname2,DPID2,BenAccno2,
						DPname3,DPID3,BenAccno3,CIN,Incorporationplace,Occupation,OtherOccupation,Commencementdate,AnnualIncome,AnnualIncomedate,
						Networth,Networthdate,PEP,CPcode,Regnoclient,RegistringAuth,Regnplace,Regndate,Inpersonverification,ClientAgreementdate,
						'',Relationship,Prooftype,Proofnumber,Proofplace,Proofdate,Clientstatus,Remarks,Corporateclienttype,
						Contpersonname1 ,Contpersondeg1 ,Contpersonpan1 ,contpersonaddress1,contpersonphone1,Contpersondin1,Contpersonuid1,Contpersonemail1,
						Contpersonname2,Contpersondeg2,Contpersonpan2,contpersonaddress2,contpersonphone2,Contpersondin2,Contpersonuid2,Contpersonemail2,
						Contpersonname3 ,Contpersondeg3 ,Contpersonpan3 ,contpersonaddress3 ,contpersonphone3 ,Contpersondin3 ,Contpersonuid3 ,Contpersonemail3 ,
						Contpersonname4 ,Contpersondeg4 ,Contpersonpan4 ,contpersonaddress4 ,contpersonphone4 ,Contpersondin4 ,Contpersonuid4 ,Contpersonemail4 ,
						Contpersonname5 ,Contpersondeg5 ,Contpersonpan5 ,contpersonaddress5 ,contpersonphone5 ,Contpersondin5 ,Contpersonuid5 ,Contpersonemail5 ,
						Contpersonname6 ,Contpersondeg6 ,Contpersonpan6 ,contpersonaddress6 ,contpersonphone6 ,Contpersondin6 ,Contpersonuid6 ,Contpersonemail6 ,
						Contpersonname7 ,Contpersondeg7 ,Contpersonpan7 ,contpersonaddress7 ,contpersonphone7 ,Contpersondin7 ,Contpersonuid7 ,Contpersonemail7 ,
						Contpersonname8 ,Contpersondeg8 ,Contpersonpan8 ,contpersonaddress8 ,contpersonphone8 ,Contpersondin8 ,Contpersonuid8 ,Contpersonemail8 ,
						Contpersonname9 ,Contpersondeg9 ,Contpersonpan9 ,contpersonaddress9 ,contpersonphone9 ,Contpersondin9 ,Contpersonuid9 ,Contpersonemail9 ,
						Contpersonname10 ,Contpersondeg10 ,Contpersonpan10 ,contpersonaddress10 ,contpersonphone10 ,Contpersondin10 ,Contpersonuid10 ,Contpersonemail10 ,
						Contpersonname11 ,Contpersondeg11 ,Contpersonpan11 ,contpersonaddress11 ,contpersonphone11 ,Contpersondin11 ,Contpersonuid11 ,Contpersonemail11 ,
						Contpersonname12 ,Contpersondeg12 ,Contpersonpan12 ,contpersonaddress12 ,contpersonphone12 ,Contpersondin12 ,Contpersonuid12 ,Contpersonemail12 ,
						Contpersonname13 ,Contpersondeg13 ,Contpersonpan13 ,contpersonaddress13 ,contpersonphone13 ,Contpersondin13 ,Contpersonuid13 ,Contpersonemail13 ,
						Contpersonname14 ,Contpersondeg14 ,Contpersonpan14 ,contpersonaddress14 ,contpersonphone14 ,Contpersondin14 ,Contpersonuid14 ,Contpersonemail14 ,
						Contpersonname15 ,Contpersondeg15 ,Contpersonpan15 ,contpersonaddress15 ,contpersonphone15 ,Contpersondin15 ,Contpersonuid15 ,Contpersonemail15 ,
						Contpersonname16 ,Contpersondeg16 ,Contpersonpan16 ,contpersonaddress16 ,contpersonphone16 ,Contpersondin16 ,Contpersonuid16 ,Contpersonemail16 ,
						Contpersonname17 ,Contpersondeg17 ,Contpersonpan17 ,contpersonaddress17 ,contpersonphone17 ,Contpersondin17 ,Contpersonuid17 ,Contpersonemail17 ,
						Contpersonname18 ,Contpersondeg18 ,Contpersonpan18 ,contpersonaddress18 ,contpersonphone18 ,Contpersondin18 ,Contpersonuid18 ,Contpersonemail18 ,
						Contpersonname19 ,Contpersondeg19 ,Contpersonpan19 ,contpersonaddress19 ,contpersonphone19 ,Contpersondin19 ,Contpersonuid19 ,Contpersonemail19 ,
						Contpersonname20 ,Contpersondeg20 ,Contpersonpan20 ,contpersonaddress20 ,contpersonphone20 ,Contpersondin20 ,Contpersonuid20 ,Contpersonemail20,'E'
						from #ClientUccNSE where ValidationForInternal is null
						Select COUNT(*) from #ClientUccNSE
						Select COUNT(*) from #ClientUccNSE Where ValidationForInternal is null
						select * from #ClientUccNSE where ValidationForInternal='Error'
						Select @Loopcounterincrementalforclient=Max(SrlNo) From #ClientUccNSE
								Set @Loopcounterstaticforclient=1
								insert into #MismatchRecords
								select null,null,null
								union all
								select 'Client Name','Mismatch Field',''
								--union all
								--select '*************************','*************************',''
								While (@Loopcounterstaticforclient<=@Loopcounterincrementalforclient)
									Begin
										select @dynamiccolname='wrongtest'
										if exists(select * from #ClientUccNSE where SrlNo=@Loopcounterstaticforclient 
												and ValidationForInternal='Error')
											Begin
												select @Clientid=clientid from #ClientUccNSE where SrlNo=@Loopcounterstaticforclient and ValidationForInternal='Error'
												select @columncountdynamic=COUNT(*)From tempdb.Information_Schema.COLUMNS where TABLE_NAME like '%#ClientUccNSE%'
												Set @columncountstatic=1
												insert into #MismatchRecords
												select [ClientName],'','' from #ClientUccNSE where SrlNo=@Loopcounterstaticforclient and ValidationForInternal='Error'
												union all
												select '-------------------------','',@Clientid
												while (@columncountstatic<=@columncountdynamic)
													Begin
														select @colname=COLUMN_NAME From tempdb.Information_Schema.COLUMNS where TABLE_NAME like '%#ClientUccNSE%' and ORDINAL_POSITION=@columncountstatic													
														select @dsql=
														'if exists(select * from #ClientUccNSE where cast(['+@colname+'] as varchar(max))=''Data Mismatch'' and clientid in('''+@Clientid+'''))
															begin
																insert into #onlymiamatch
																select '''+@colname+'''
																insert into #MismatchRecords 
																select '''','''+@colname+''','''+@Clientid+'''
															End
															'
															exec(@dsql)
														Set @columncountstatic=@columncountstatic+1
													End
													select @dynamiccolname=coalesce(@dynamiccolname+',', '') + Convert(varchar,Description) from #MismatchRecords where Clientid=@Clientid
													select @dynamiccolname= replace (@dynamiccolname,'wrongtest,,','')
													
													update #MismatchRecords set Description=@dynamiccolname
													where Clientid=@Clientid
													delete from #MismatchRecords where len([Mis Matched Field and Related Path])=0
													select @dynamiccolname=''
											End
										Set @Loopcounterstaticforclient=@Loopcounterstaticforclient+1	
									End
									insert into #MismatchRecords ([Mis Matched Field and Related Path],Description)
									select REPLICATE('_',200),''
									union all
									select '',''
									union all
									select 'How  To Rectify Mismatched Fields.','Master-->Contacts-->Customers/Clients--->More Info of specific client'
									union all
									select '',''
									union all
									select 'Mis Matched Field','Detail Path'
									union all
									select distinct Onlyfield,'' from #onlymiamatch 
									
									update #MismatchRecords set Description=Path from #Nsemasterfiled
									where fieldname=[Mis Matched Field and Related Path]
									select [Mis Matched Field and Related Path],Description from #MismatchRecords
									

					End
				If (@Segmentname='MCX - COMM')
					Begin
						select  clientucc,clientfirstname,clientmiddlename,clientlastname,category,address1,address2,address3,city,state,country,pin,
						phonenumber,agreementdate,dateofbirth,pan,wardno,uin,bankname,bankaddress,
						bankaccno,bankacctype,dpname,dpid,dpparticipantname,benaccid,dpnamecdsl,dpidcdsl,
						dpparticipantnamecdsl,benaccidcdsl,passportno,passportplace,passportdate,passportexpdate,drvlicence,
						drvlicencenceplace,drvlicencedate,drvlicenceexpdate,voterid,voteridplace,voteriddate,retioncardno,rationcardplace,
						rationcarddate,clientregnno,clientregauth,clientregplace,clientregdate,introducername,introducerclientid,introrelation,
						dealingwithoth,relationcode,status,reserved1,Mobileno,Emailid,reserved2,reserved3,reserved4,EndFlag
						from #ClientUccmcxcomm where ValidationForInternal=''
						Select COUNT(*) from #ClientUccmcxcomm
						Select COUNT(*) from #ClientUccmcxcomm Where ValidationForInternal =''
						select * from #ClientUccmcxcomm where ValidationForInternal='Error'
						
						Select @Loopcounterincrementalforclient=Max(srno) From #ClientUccmcxcomm
								Set @Loopcounterstaticforclient=1
								insert into #MismatchRecords
								select null,null,null
								union all
								select 'Client Name','Mismatch Field',''
								--union all
								--select '*************************','*************************',''
								While (@Loopcounterstaticforclient<=@Loopcounterincrementalforclient)
									Begin
										select @dynamiccolname='wrongtest'
										if exists(select * from #ClientUccmcxcomm where srno=@Loopcounterstaticforclient 
												and ValidationForInternal='Error')
											Begin
												select @Clientid=clientid from #ClientUccmcxcomm where srno=@Loopcounterstaticforclient and ValidationForInternal='Error'
												select @columncountdynamic=COUNT(*)From tempdb.Information_Schema.COLUMNS where TABLE_NAME like '%#ClientUccmcxcomm%'
												Set @columncountstatic=1
												insert into #MismatchRecords
												select isnull(clientfirstname,'')+' '+isnull(clientmiddlename,'')+' '+isnull(clientlastname,''),'','' 
												from #ClientUccmcxcomm where srno=@Loopcounterstaticforclient and ValidationForInternal='Error'
												union all
												select '-------------------------','',@Clientid
												while (@columncountstatic<=@columncountdynamic)
													Begin
														select @colname=COLUMN_NAME From tempdb.Information_Schema.COLUMNS where TABLE_NAME like '%#ClientUccmcxcomm%' and ORDINAL_POSITION=@columncountstatic													
														select @dsql=
														'if exists(select * from #ClientUccmcxcomm where cast(['+@colname+'] as varchar(max))=''Data Mismatch'' and clientid in('''+@Clientid+'''))
															begin
																insert into #onlymiamatch
																select '''+@colname+'''
																insert into #MismatchRecords 
																select '''','''+@colname+''','''+@Clientid+'''
															End
															'
															exec(@dsql)
														Set @columncountstatic=@columncountstatic+1
													End
													select @dynamiccolname=coalesce(@dynamiccolname+',', '') + Convert(varchar,Description) from #MismatchRecords where Clientid=@Clientid
													select @dynamiccolname= replace (@dynamiccolname,'wrongtest,,','')
													
													update #MismatchRecords set Description=@dynamiccolname
													where Clientid=@Clientid
													delete from #MismatchRecords where len([Mis Matched Field and Related Path])=0
													select @dynamiccolname=''
											End
										Set @Loopcounterstaticforclient=@Loopcounterstaticforclient+1	
									End
									insert into #MismatchRecords ([Mis Matched Field and Related Path],Description)
									select REPLICATE('_',200),''
									union all
									select '',''
									union all
									select 'How  To Rectify Mismatched Fields.','Master-->Contacts-->Customers/Clients--->More Info of specific client'
									union all
									select '',''
									union all
									select 'Mis Matched Field','Detail Path'
									union all
									select distinct Onlyfield,'' from #onlymiamatch 
									
									update #MismatchRecords set Description=Path from #Mcxmasterfiled
									where fieldname=[Mis Matched Field and Related Path]
									select [Mis Matched Field and Related Path],Description from #MismatchRecords
									
					End
				If (@Segmentname='BSE - CM' or @Segmentname='BSE - FO')
					Begin
						--update #FinalExportBse set Error=ValidationForInternal from #ClientUccBse
						--where ValidationForInternal='Error' and #FinalExportBse.ClientId=#ClientUccBse.clientid
						--select  * from #ClientUccBse where ValidationForInternal=''
						select * from #FinalExportBse
						Select COUNT(*) from #ClientUccBse
						Select COUNT(*) from #ClientUccBse Where ValidationForInternal =''
						select * from #ClientUccBse where ValidationForInternal='Error'
						
						Select @Loopcounterincrementalforclient=Max(srno) From #ClientUccBse
								Set @Loopcounterstaticforclient=1
								insert into #MismatchRecords
								select null,null,null
								union all
								select 'Client Name','Mismatch Field',''
								--union all
								--select '*************************','*************************',''
								While (@Loopcounterstaticforclient<=@Loopcounterincrementalforclient)
									Begin
										select @dynamiccolname='wrongtest'
										if exists(select * from #ClientUccBse where srno=@Loopcounterstaticforclient 
												and ValidationForInternal='Error')
											Begin
												select @Clientid=clientid from #ClientUccBse where srno=@Loopcounterstaticforclient and ValidationForInternal='Error'
												select @columncountdynamic=COUNT(*)From tempdb.Information_Schema.COLUMNS where TABLE_NAME like '%#ClientUccBse%'
												Set @columncountstatic=1
												insert into #MismatchRecords
												select Clientfullname,'','' 
												from #ClientUccBse where srno=@Loopcounterstaticforclient and ValidationForInternal='Error'
												union all
												select '-------------------------','',@Clientid
												while (@columncountstatic<=@columncountdynamic)
													Begin
														select @colname=COLUMN_NAME From tempdb.Information_Schema.COLUMNS where TABLE_NAME like '%#ClientUccBse%' and ORDINAL_POSITION=@columncountstatic													
														select @dsql=
														'if exists(select * from #ClientUccBse where cast(['+@colname+'] as varchar(max))=''Data Mismatch'' and clientid in('''+@Clientid+'''))
															begin
																insert into #onlymiamatch
																select '''+@colname+'''
																insert into #MismatchRecords 
																select '''','''+@colname+''','''+@Clientid+'''
															End
															'
															exec(@dsql)
														Set @columncountstatic=@columncountstatic+1
													End
													select @dynamiccolname=coalesce(@dynamiccolname+',', '') + Convert(varchar,Description) from #MismatchRecords where Clientid=@Clientid
													select @dynamiccolname= replace (@dynamiccolname,'wrongtest,,','')
													
													update #MismatchRecords set Description=@dynamiccolname
													where Clientid=@Clientid
													delete from #MismatchRecords where len([Mis Matched Field and Related Path])=0
													select @dynamiccolname=''
											End
										Set @Loopcounterstaticforclient=@Loopcounterstaticforclient+1	
									End
									insert into #MismatchRecords ([Mis Matched Field and Related Path],Description)
									select REPLICATE('_',200),''
									union all
									select '',''
									union all
									select 'How  To Rectify Mismatched Fields.','Master-->Contacts-->Customers/Clients--->More Info of specific client'
									union all
									select '',''
									union all
									select 'Mis Matched Field','Detail Path'
									union all
									select distinct Onlyfield,'' from #onlymiamatch 
									
									update #MismatchRecords set Description=Path from #Bsemasterfiled
									where fieldname=[Mis Matched Field and Related Path]
									select [Mis Matched Field and Related Path],Description from #MismatchRecords
									
					End
				
				

		
	
	Drop Table #Clientinternalidinsert
	Drop Table #ClientUccNSE
	Drop Table #ClientUccmcxcomm
	Drop Table #ClientUccBse
	Drop Table #tempdpdetailcdsl
	Drop Table #tempdpdetailnsdl
   End













