
--exec [Fetch_QuarterlySettlementOfFunds] 'COR0000002','2012-2013','2012-06-30','2012-06-30','Clients','','','Selected~''CLN0000105'''  --For Client with IDs
ALTER Procedure [dbo].[Fetch_QuarterlySettlementOfFunds]
@Company Varchar(10),
@FinYear Varchar(12),
@FromDate Varchar(25),
@ToDate Varchar(25),
@ByBranchGroupClient Varchar(12),
@IfBranch_OptAndIDs Varchar(Max),
@IfGroup_OptAndIDsAndType Varchar(Max),
@IfClient_OptAndIDs Varchar(Max)
As
Begin
     
	Declare @MainQuery NVarchar(Max),@MainQueryGroupSelectStart Varchar(Max),@MainQueryGroupSelectEnd Varchar(Max),@MainQueryGroupOrderBy Varchar(Max),@MainQuerySelect Varchar(Max),@MainQueryFrom Varchar(Max),@MainQueryWhere Varchar(Max),@MainQueryOrderBy Varchar(Max)
	
	SET @MainQueryGroupSelectStart='Select 
										FinYear,DateOfSettlement,Quarter,Client,Branch,ltrim(rtrim(gpm_Description))+'' [''+ltrim(rtrim(gpm_code))+'']'' As [Group],gpm_Type As Group_Type,
										Ledger,MarginLedger,TDayFOBillReversal,TDayCDBillReversal,TDayCMBillReversal,TM1DayCMBillReversal,TotalSecu,TotalFundsAndSecu,TDayFOMargin,
										TDayCDMargin,MarginMarkUp,FOCDMarginAmount,TDayFOPayin,TDayCDPayin,TDayCMPayin,TM1DayCMPayin,TDayCMDeliveryIN,TM1DayCMDeliveryIN,TDayValueOfCMTrades,
										TotalFundsSecuToRetain,ExcessShortage,AmountToReturn,FundsRelease,SecuritiesRelease
										From
										   (Select * From
												('
	SET @MainQuerySelect='Select 
								cnt_internalId,Release_Finyear As FinYear,convert(varchar(11),Release_positiondate,106) As DateOfSettlement,
								case when release_quarter=1 Then ''Q1'' when release_quarter=2 Then ''Q2'' when release_quarter=3 then ''Q3'' when release_quarter=4 then ''Q4'' end As Quarter,
								ltrim(rtrim(cnt_firstname))+'' ''+Isnull(ltrim(rtrim(cnt_middlename)),'''')+'' ''+Isnull(ltrim(rtrim(cnt_lastname)),'''')+'' [''+ltrim(rtrim(cnt_ucc))+'']'' As Client,
								ltrim(rtrim(branch_code))+'' [''+ltrim(rtrim(branch_code))+'']'' As Branch,
								Isnull(Release_LedgerBalance,0) As Ledger,
								Isnull(Release_cashmarginbalance,0) As MarginLedger,
								-1*Isnull(Release_tDayfobill,0) As TDayFOBillReversal,
								-1*Isnull(Release_tdaycdbill,0) As TDayCDBillReversal,
								0 As TDayCMBillReversal,
								0 As TM1DayCMBillReversal,
								Isnull(Release_holdbackstocks,0)+Isnull(Release_marginstocks,0) As TotalSecu,
								Isnull(Release_LedgerBalance,0)+Isnull(Release_cashmarginbalance,0)+
								Isnull(Release_holdbackstocks,0)+Isnull(Release_marginstocks,0)-
								Isnull(Release_tDayfobill,0)-Isnull(Release_tdaycdbill,0) As TotalFundsAndSecu,
								Isnull(Release_tdayfomargin,0) As TDayFOMargin,
								Isnull(Release_tdaycdmargin,0) As TDayCDMargin,
								Isnull(Release_MarginMarkup,100) As MarginMarkup,
								Cast((Isnull(Release_tdayfomargin,0)+Isnull(Release_tdaycdmargin,0))*Release_MarginMarkup/100 As numeric(22,2)) As FOCDMarginAmount,
								Case When Isnull(Release_tDayfobill,0)<0 then Abs(Isnull(Release_tDayfobill,0)) Else 0 End As TDayFOPayin,
								Case When Isnull(Release_tDaycdbill,0)<0 then Abs(Isnull(Release_tDaycdbill,0)) Else 0 End As TDayCDPayin,
								Case When Isnull(Release_tdaycmbill,0)<0 then Abs(Isnull(Release_tdaycmbill,0)) Else 0 End As TDayCMPayin,
								Case When Isnull(Release_tm1daycmbill,0)<0 then Abs(Isnull(Release_tm1daycmbill,0)) Else 0 End As TM1DayCMPayin,
								Isnull(Release_tdaycmdeliveryin,0) As TDayCMDeliveryIN,
								Isnull(Release_tm1daycmdeliveryin,0) As TM1DayCMDeliveryIN,
								Isnull(Release_tdaycmturnover,0) As TDayValueOfCMTrades,
								Case When Isnull(Release_tDayfobill,0)<0 then Abs(Isnull(Release_tDayfobill,0)) Else 0 End+
								Case When Isnull(Release_tDaycdbill,0)<0 then Abs(Isnull(Release_tDaycdbill,0)) Else 0 End+
								Case When Isnull(Release_tdaycmbill,0)<0 then Abs(Isnull(Release_tdaycmbill,0)) Else 0 End+
								Case When Isnull(Release_tm1daycmbill,0)<0 then Abs(Isnull(Release_tm1daycmbill,0)) Else 0 End+ 
								Isnull(Release_tdaycmdeliveryin,0)+Isnull(Release_tm1daycmdeliveryin,0)+Isnull(Release_tdaycmturnover,0)+
								(Isnull(Release_tdayfomargin,0)+Isnull(Release_tdaycdmargin,0))*Release_MarginMarkup/100 As TotalFundsSecuToRetain,

									Isnull(Release_LedgerBalance,0)+Isnull(Release_cashmarginbalance,0)+Isnull(Release_holdbackstocks,0)+Isnull(Release_marginstocks,0)-
									Isnull(Release_tDayfobill,0)-Isnull(Release_tdaycdbill,0)-
									(Case When Isnull(Release_tDayfobill,0)<0 then Abs(Isnull(Release_tDayfobill,0)) Else 0 End+
									Case When Isnull(Release_tDaycdbill,0)<0 then Abs(Isnull(Release_tDaycdbill,0)) Else 0 End+
									Case When Isnull(Release_tdaycmbill,0)<0 then Abs(Isnull(Release_tdaycmbill,0)) Else 0 End+
									Case When Isnull(Release_tm1daycmbill,0)<0 then Abs(Isnull(Release_tm1daycmbill,0)) Else 0 End+ 
									Isnull(Release_tdaycmdeliveryin,0)+Isnull(Release_tm1daycmdeliveryin,0)+Isnull(Release_tdaycmturnover,0)+
									(Isnull(Release_tdayfomargin,0)+Isnull(Release_tdaycdmargin,0))*Release_MarginMarkup/100) As ExcessShortage,

								Case
									When Isnull(Release_LedgerBalance,0)+Isnull(Release_cashmarginbalance,0)+Isnull(Release_holdbackstocks,0)+Isnull(Release_marginstocks,0)-
									Isnull(Release_tDayfobill,0)-Isnull(Release_tdaycdbill,0)-
									(Case When Isnull(Release_tDayfobill,0)<0 then Abs(Isnull(Release_tDayfobill,0)) Else 0 End+
									Case When Isnull(Release_tDaycdbill,0)<0 then Abs(Isnull(Release_tDaycdbill,0)) Else 0 End+
									Case When Isnull(Release_tdaycmbill,0)<0 then Abs(Isnull(Release_tdaycmbill,0)) Else 0 End+
									Case When Isnull(Release_tm1daycmbill,0)<0 then Abs(Isnull(Release_tm1daycmbill,0)) Else 0 End+ 
									Isnull(Release_tdaycmdeliveryin,0)+Isnull(Release_tm1daycmdeliveryin,0)+Isnull(Release_tdaycmturnover,0)+
									(Isnull(Release_tdayfomargin,0)+Isnull(Release_tdaycdmargin,0))*Release_MarginMarkup/100)>0 Then
									Isnull(Release_LedgerBalance,0)+Isnull(Release_cashmarginbalance,0)+Isnull(Release_holdbackstocks,0)+Isnull(Release_marginstocks,0)-
									Isnull(Release_tDayfobill,0)-Isnull(Release_tdaycdbill,0)-
									(Case When Isnull(Release_tDayfobill,0)<0 then Abs(Isnull(Release_tDayfobill,0)) Else 0 End+
									Case When Isnull(Release_tDaycdbill,0)<0 then Abs(Isnull(Release_tDaycdbill,0)) Else 0 End+
									Case When Isnull(Release_tdaycmbill,0)<0 then Abs(Isnull(Release_tdaycmbill,0)) Else 0 End+
									Case When Isnull(Release_tm1daycmbill,0)<0 then Abs(Isnull(Release_tm1daycmbill,0)) Else 0 End+ 
									Isnull(Release_tdaycmdeliveryin,0)+Isnull(Release_tm1daycmdeliveryin,0)+Isnull(Release_tdaycmturnover,0)+
									(Isnull(Release_tdayfomargin,0)+Isnull(Release_tdaycdmargin,0))*Release_MarginMarkup/100) Else 0 End As AmountToReturn,
								Case
									When Isnull(Release_fundrelease,0)>0  And ISNULL(Release_IsLockedFunds,''F'')=''T''
										then Isnull(Release_fundrelease,0) Else 0 End  As FundsRelease,
								Case
									When Isnull(Release_stockrelease,0)>0 And ISNULL(Release_IsLockedStocks,''F'')=''T''
										then Isnull(Release_stockrelease,0) Else 0 End As SecuritiesRelease'	
	SET	@MainQueryFrom=' from trans_release,tbl_master_contact,tbl_master_branch'	
	SET	@MainQueryWhere=' where
							Release_customerid=cnt_internalid And
							cnt_branchid = branch_id
							--and 
							--(abs(Isnull(Release_LedgerBalance,0))+abs(Isnull(Release_cashmarginbalance,0))+abs(Isnull(Release_holdbackstocks,0))+abs(Isnull(Release_marginstocks,0))+
							--abs(Isnull(Release_tDayfobill,0))+abs(Isnull(Release_tdaycdbill,0))+
							--abs(Isnull(Release_tDayfobill,0))+
							--abs(Isnull(Release_tDaycdbill,0))+
							--abs(Isnull(Release_tdaycmbill,0))+
							--abs(Isnull(Release_tm1daycmbill,0))+ 
							--abs(Isnull(Release_tdaycmdeliveryin,0))+abs(Isnull(Release_tm1daycmdeliveryin,0))+abs(Isnull(Release_tdaycmturnover,0))+
							--abs(Isnull(Release_tdayfomargin,0))+abs(Isnull(Release_tdaycdmargin,0)))<>0
							and
							Release_Finyear='''+@FinYear+'''
							and	
							Release_PositionDate Between '''+@FromDate+''' and '''+@ToDate+''''
	SET	@MainQueryOrderBy=' Order by branch_code,cnt_ucc'	
		
	IF(@ByBranchGroupClient='Branch')
	   Begin
	         Declare @BranchOpt Varchar(10),@BranchIDs Varchar(Max)	         
	         IF(@IfBranch_OptAndIDs='All')
				 Begin
				        Set @BranchOpt=''
						Set @BranchIDs=''
						set @MainQuery=@MainQuerySelect+@MainQueryFrom+@MainQueryWhere+@MainQueryOrderBy
						--Print 'For All Branch-'+@MainQuery
				 END
	         ELSE
				 BEGIN
						Select @BranchOpt=SUBSTRING(@IfBranch_OptAndIDs,0,CharIndex('~',@IfBranch_OptAndIDs))
						Select @BranchIDs=SUBSTRING(@IfBranch_OptAndIDs,CharIndex('~',@IfBranch_OptAndIDs)+1,Len(@IfBranch_OptAndIDs))	
						SET @MainQueryWhere=@MainQueryWhere+' and branch_id in( '+@BranchIDs+')'
						set @MainQuery=@MainQuerySelect+@MainQueryFrom+@MainQueryWhere+@MainQueryOrderBy
						--Print 'For Selected Branch-'+@MainQuery
				 END
	   END
	   
	   IF(@ByBranchGroupClient='Group')
	   Begin
			Declare @GroupOpt Varchar(10),@GroupIDs Varchar(Max),@GroupType Varchar(30)		
			Select @GroupOpt=SUBSTRING(@IfGroup_OptAndIDsAndType,0,CharIndex('~',@IfGroup_OptAndIDsAndType))
			SET @MainQueryGroupOrderBy=' Order by Branch,Client'		
			IF(@GroupOpt='All')
				BEGIN
					Select @GroupIDs=''
					Select @GroupType=SUBSTRING(@IfGroup_OptAndIDsAndType,CharIndex('~',@IfGroup_OptAndIDsAndType)+1,Len(@IfGroup_OptAndIDsAndType))
					--Print @GroupType
					SET @MainQueryGroupSelectEnd=') T1
													Inner Join
													 (Select grp_contactId,gpm_Description,gpm_code,gpm_Type from tbl_master_groupMaster,tbl_trans_group
													  Where grp_groupMaster=gpm_ID) T2
													ON grp_contactId=cnt_internalId
													   and gpm_Type='''+@GroupType+'''		
												  ) T3'			
					SET @MainQuery=@MainQueryGroupSelectStart+@MainQuerySelect+@MainQueryFrom+@MainQueryWhere+@MainQueryGroupSelectEnd+@MainQueryGroupOrderBy
					--Print 'For All Group-'+@MainQuery
				END
			ELSE
				BEGIN
					Select @GroupIDs=SUBSTRING((Select SUBSTRING(@IfGroup_OptAndIDsAndType,CharIndex('~',@IfGroup_OptAndIDsAndType)+1,Len(@IfGroup_OptAndIDsAndType))),0,
												CharIndex('~',(Select SUBSTRING(@IfGroup_OptAndIDsAndType,CharIndex('~',@IfGroup_OptAndIDsAndType)+1,Len(@IfGroup_OptAndIDsAndType)))))		                          
					Select @GroupType=SUBSTRING((Select SUBSTRING(@IfGroup_OptAndIDsAndType,CharIndex('~',@IfGroup_OptAndIDsAndType)+1,Len(@IfGroup_OptAndIDsAndType))),
												(CharIndex('~',(Select SUBSTRING(@IfGroup_OptAndIDsAndType,CharIndex('~',@IfGroup_OptAndIDsAndType)+1,Len(@IfGroup_OptAndIDsAndType)))))+1,
												 Len((Select SUBSTRING(@IfGroup_OptAndIDsAndType,CharIndex('~',@IfGroup_OptAndIDsAndType)+1,Len(@IfGroup_OptAndIDsAndType)))))   
					SET @MainQueryGroupSelectEnd=') T1
													Inner Join
													 (Select grp_contactId,gpm_Description,gpm_code,gpm_Type from tbl_master_groupMaster,tbl_trans_group
													  Where grp_groupMaster=gpm_ID
													        AND gpm_id in ('+@GroupIDs+')) T2
													ON grp_contactId=cnt_internalId
													   and gpm_Type='''+@GroupType+'''		
												  ) T3'								                       
					SET @MainQuery=@MainQueryGroupSelectStart+@MainQuerySelect+@MainQueryFrom+@MainQueryWhere+@MainQueryGroupSelectEnd+@MainQueryGroupOrderBy
					--Print 'For Selected Group-'+@MainQuery
				END			
		END

     IF(@ByBranchGroupClient='Clients')
	   Begin
	         Declare @ClientsOpt Varchar(10),@ClientsIDs Varchar(Max)
	         IF(@IfClient_OptAndIDs='All')
				 Begin
				        Set @ClientsOpt=''
						Set @ClientsIDs=''						
						set @MainQuery=@MainQuerySelect+@MainQueryFrom+@MainQueryWhere+@MainQueryOrderBy
						--Print 'For All Client-'+@MainQuery
				 END
	         ELSE
				 BEGIN
						Select @ClientsOpt=SUBSTRING(@IfClient_OptAndIDs,0,CharIndex('~',@IfClient_OptAndIDs))
						Select @ClientsIDs=SUBSTRING(@IfClient_OptAndIDs,CharIndex('~',@IfClient_OptAndIDs)+1,Len(@IfClient_OptAndIDs))					
						
						SET @MainQueryWhere=@MainQueryWhere+' and cnt_internalId in ('+@ClientsIDs+')'						
						SET @MainQuery=@MainQuerySelect+@MainQueryFrom+@MainQueryWhere+@MainQueryOrderBy
						--Print 'For Selected Client-'+@MainQuery
				 END
	   END	
	EXEC sp_executesql @MainQuery
	--exec [Fetch_QuarterlySettlementOfFunds] 'COR0000002','2012-2013','2012-06-28','2012-7-3','Branch','All','',''										 --For Branch
	--exec [Fetch_QuarterlySettlementOfFunds] 'COR0000002','2012-2013','2012-06-28','2012-7-3','Branch','Selected~''178'',''130''','',''				 --For Branch with IDs
	--exec [Fetch_QuarterlySettlementOfFunds] 'COR0000002','2012-2013','2012-06-28','2012-7-3','Group','','All~Relationship Partner',''							 --For Group and Type
	--exec [Fetch_QuarterlySettlementOfFunds] 'COR0000002','2012-2013','2012-06-28','2012-7-3','Group','','Selected~466,311~Sub Broker',''		 --For Group with IDs and Type
	--exec [Fetch_QuarterlySettlementOfFunds] 'COR0000002','2012-2013','2012-06-28','2012-7-3','Clients','','','All'									 --For Client
	--exec [Fetch_QuarterlySettlementOfFunds] 'COR0000002','2012-2013','2012-06-28','2012-7-3','Clients','','','Selected~''CLA0000284'',''CLS0001270'''  --For Client with IDs
END	
