
ALTER procedure [dbo].[Report_MarginStocksInwardOutwardRegister]
@ForDate varchar(35),
@ClientId varchar(max),
@BranchHierchy varchar(max),
@GrpType varchar(25),
@Grpid varchar(max),
@Segment varchar(50),
@CompanyID varchar(50),
@Finyear varchar(50),
@Productid varchar(max),
@Accountid varchar(20),
@CheckDp varchar(6),
@CheckPur varchar(6),
@CheckSale varchar(6),
@Chkledgerbaln varchar(6),
@Chkcashmargin varchar(10),
@ReportFor varchar(5),
@PendingPurSalevalueMethod varchar(6),
@Stocknegative varchar(6),
@SecurityType varchar(15),
@CorpAcTypeChk varchar(8),
@CorpAc varchar(50)

------------------------------------------------------------------NOTE-----------------------------------------------------------------
/*
	Change 1. In Context of DP Holding Check its Only Checking for 'Default' DP Not 'Secondary'
*/
------------------------------------------------------------------End NOTE-------------------------------------------------------------

AS 
BEGIN-------------------------SP Begin
SET NOCOUNT ON

--------------------------Variable Declare  For Calculation Begin
				DECLARE @sql varchar(max)
				Declare @NextFinYear varchar(15)
				Select @NextFinYear=cast(right(@Finyear,4) as varchar)+'-'+cast(right(@Finyear,4)+1 as varchar)
				
				-------Client Selection
				CREATE TABLE #TABCLIENT (CLIENTID1 VARCHAR(15),BranchId1 varchar(30),
				CLIENTNAME1 VARCHAR(250),GROUPID1 bigint,GRPNAME1 VARCHAR(150),GrpEmail1 varchar(40),
				NSDLBenAcNo varchar(20),CDSLBenAcNo varchar(20),
				CName varchar(150),Ucc varchar(20))
				
				-------Client Selection For Dp
				CREATE TABLE #TABCLIENTFORDP (CLIENTID1 VARCHAR(15),BranchId1 varchar(30),
				CLIENTNAME1 VARCHAR(250),GROUPID1 bigint,GRPNAME1 VARCHAR(150),GrpEmail1 varchar(40),
				NSDLBenAcNo varchar(20),CDSLBenAcNo varchar(20),
				CName varchar(150),Ucc varchar(20))

				--------All Transaction Fetch
				CREATE table #TbTransaction (CustomerID varchar(15),ProductSeriesID varchar(30),
				SegmentID varchar(20),SourceSegmentId varchar(20),Quantity numeric(28,0),
				SettlementNumberS varchar(30),SettlementNumberT varchar(30),
				OwnAccountS varchar(30),OwnAccountT varchar(30))

				--------Transaction Filter
				CREATE Table #TbTransactionFilter (CustomerID varchar(15),ProductSeriesID varchar(30),
				SegmentID varchar(20),SourceSegmentId varchar(20),Quantity numeric(28,0),
				SettlementNumberS varchar(30),SettlementNumberT varchar(30),
				OwnAccountS varchar(30),OwnAccountT varchar(30))

				------------SettlementNumber and Type
				Create Table #SettNoType(SettlementNumber varchar(15),SettType varchar(5))

				------------For DematPosition[Pending Purchase and Sales]
				Create Table #DematPosition(Customerid varchar(15),ProductId varchar(30),Segmentid varchar(20),
				PendPur numeric(28,0),PendSale numeric(28,0),SettNumber varchar(20),
				QtyToReceive numeric(28,0),QtyToDeliver numeric(28,0),
				SettlementsNumber varchar(20),SettlementsType varchar(10))

				------------For DematTransaction[Pending Purchase and Sales]
				Create Table #DematTransaction(Clientid varchar(15),Seriesid varchar(30),Segment varchar(20),
				Qty numeric(28,0),SettNo varchar(20),SettType varchar(10))

				-------------For Dp Details Fetch
				Create Table #DPDetails(ClientId varchar(15),Productid varchar(30),ISIN varchar(30),
				FreeBalance numeric(28,0),HoldingDateTime Datetime,BenAcNumber varchar(20),DPStatus int)

				
				--------All Result Store
				CREATE Table #MainTab (ClientId varchar(15),Productid varchar(30),
				ScripName varchar(max),ClientName varchar(200),Grpname varchar(150),TabName varchar(max),
				Quantity numeric(28,0),GrpId bigint,GrpEmail varchar(40),
				OwnAc varchar(30),OwnAcname varchar(150),ClosePrice  numeric(28,2),HairCut numeric(28,2),
				SegmentId varchar(20),SegmentName varchar(10),MainType varchar(20),ISINNumber varchar(30),
				ValueBeforeHaicut numeric(28,2),ValueAfterHaicut numeric(28,2),MainOrder int,
				CliName varchar(150),Code varchar(20),SecurityType varchar(15))


				-----------Corporate Action
				Create Table #TbCorpAc(Seriesid varchar(30),Remarks varchar(5000))
---------------------------Variable Declare  For Calculation End

		--------Client Fetch
		SELECT @sql='Select Distinct cnt_internalid,
					(isnull(rtrim(cnt_firstName),'''') +'' ''+isnull(rtrim(cnt_middleName),'''')+'' ''+isnull(rtrim(cnt_lastName),''''))+''-''+rtrim(cnt_UCC),
					(isnull(rtrim(cnt_firstName),'''') +'' ''+isnull(rtrim(cnt_middleName),'''')+'' ''+isnull(rtrim(cnt_lastName),'''')),rtrim(cnt_UCC)
					,'
		if(@GrpType IN ('BRANCH','BRANCHGROUP'))
				BEGIN
					Select @sql=@sql+'branch_id,isnull(rtrim(branch_description),'+char(39)+''+char(39)+')+''[''+isnull(rtrim(branch_code),'+char(39)+''+char(39)+')+'']'',branch_cpEmail'
				END
		ELSE 
			BEGIN
					Select @sql=@sql+'gpm_id,isnull(rtrim(GPM_DESCRIPTION),'+char(39)+''+char(39)+')+''[''+isnull(rtrim(GPM_CODE),'+char(39)+''+char(39)+')+'']'',gpm_emailID'
			END
		Select @sql=@sql+'
		from tbl_master_contact,'
		IF(@GrpType='BRANCH')
			BEGIN
				Select @sql=@sql+'tbl_master_branch 
				where cnt_branchid=branch_id'
				IF(@Grpid<>'ALL')
				BEGIN
					Select @sql=@sql+' AND cnt_branchid IN ('+@Grpid+')'	
				END
			END
		ELSE IF(@GrpType='BRANCHGROUP')
			BEGIN
				Select @sql=@sql+'tbl_master_branch  
				where cnt_branchid=branch_id '
				IF(@Grpid<>'ALL')
					BEGIN
						Select @sql=@sql+' AND cnt_branchid in(select distinct branchgroupmembers_branchid 
										   from trans_branchgroupmembers where 
										   branchgroupmembers_branchgroupid in('+@Grpid+'))'	
					END
				ELSE 
					BEGIN
						Select @sql=@sql+' AND cnt_branchid in(select distinct branchgroupmembers_branchid 
										   from trans_branchgroupmembers)'	
					END
			END
		ELSE
			BEGIN
				Select @sql=@sql+'tbl_master_groupmaster,tbl_trans_group
				where cnt_internalid=grp_contactid
				AND gpm_type='''+@GrpType+'''
				AND grp_groupmaster=gpm_id
				AND GRP_GROUPTYPE='''+@GrpType+''''
				If @GrpId<>'ALL'
				BEGIN
					Select @sql=@sql+' and gpm_id in ('+@GrpId+')'
				END
			END
		If @ClientId='POA'
		BEGIN
			Select @sql=@sql+' and cnt_internalid in (select dpd_cntid From tbl_master_contactdpdetails Where dpd_POA=1)'
		END
		If (@ClientId<>'ALL' And @ClientId<>'POA')
		BEGIN
			Select @sql=@sql+' and cnt_internalid in ('+@ClientId+')'
		END
		Select @sql=@sql+'  and cnt_internalid like ''CL%'' and cnt_branchid in ('+@BranchHierchy+')'



		INSERT INTO #TABCLIENT(CLIENTID1,CLIENTNAME1,CName,Ucc,GROUPID1,GRPNAME1,GrpEmail1)EXEC(@sql)

		Update #TABCLIENT Set CLIENTNAME1=CLIENTNAME1+' [POA]'
		From tbl_master_contactdpdetails Where dpd_cntID=CLIENTID1
		and dpd_POA=1 and dpd_accounttype='Default'
		
		

		--------------Fetch Record From Demat Transaction
		select @Sql='Select 
		DematTransactions_CustomerID,DematTransactions_ProductSeriesID,
		DematTransactions_SegmentID,DematTransactions_SourceSegmentId,
		isnull(DematTransactions_Quantity,0),
		DematTransactions_SettlementNumberS,DematTransactions_SettlementNumberT,
		DematTransactions_OwnAccountS,DematTransactions_OwnAccountT 
		from Trans_DematTransactions Where
		DematTransactions_Date<='''+@ForDate+''' 
		and DematTransactions_FinYear='''+@Finyear+''''
		if @Accountid<>'ALL'
			BEGIN
					select @Sql=@Sql+' and (DematTransactions_OwnAccountS='''+@Accountid+''' or DematTransactions_OwnAccountT='''+@Accountid+''')'
			END
		if @Productid<>'ALL'
			BEGIN
					select @Sql=@Sql+' and DematTransactions_ProductSeriesID in ('+@Productid+')'
			END
		if @Segment<>'ALL'
			BEGIN
					select @Sql=@Sql+' and (DematTransactions_SegmentID in ('+@Segment+') or DematTransactions_SourceSegmentId in ('+@Segment+'))'
			END
		select @Sql=@Sql+' and DematTransactions_CustomerID in (Select Distinct CLIENTID1 From #TABCLIENT)
		and isnull(DematTransactions_TransferType,''H'')<>''CF''
		and DematTransactions_CompanyID='''+@CompanyID+''''

		Insert Into #TbTransactionFilter (CustomerID,ProductSeriesID,SegmentID,SourceSegmentId,Quantity,
		SettlementNumberS,SettlementNumberT,OwnAccountS,OwnAccountT) exec(@Sql) 


		---------Insert into Transaction  Filter Table
		Insert Into #TbTransaction (CustomerID,ProductSeriesID,SegmentID,SourceSegmentId,Quantity,
		SettlementNumberS,SettlementNumberT,OwnAccountS,OwnAccountT)
		select CustomerID,ProductSeriesID,SegmentID,SourceSegmentId,Quantity,
		SettlementNumberS,SettlementNumberT,OwnAccountS,OwnAccountT
		from #TbTransactionFilter where SourceSegmentId is not null

		delete from #TbTransactionFilter where SourceSegmentId is not null

		------------------------------SPLIT RECORDS FOR SOURCE SEGMENT ID
		insert into #TbTransactionFilter
		(
		Quantity,CustomerID,ProductSeriesID,SegmentID,
		SettlementNumberS,SettlementNumberT,SourceSegmentId,
		OwnAccountS,OwnAccountT
		)
		select Quantity,CustomerID,ProductSeriesID,SegmentID,null,
		SettlementNumberT,NULL,null,OwnAccountT
		from #TbTransaction where SourceSegmentId<>SegmentID


		insert into #TbTransactionFilter
		(
		Quantity,CustomerID,ProductSeriesID,SegmentID,
		SettlementNumberS,SettlementNumberT,SourceSegmentId,
		OwnAccountS,OwnAccountT
		)
		select Quantity,CustomerID,ProductSeriesID,SourceSegmentId,
		SettlementNumberS,null,NULL,OwnAccountS,null
		from #TbTransaction where SourceSegmentId<>SegmentID


		if @Segment<>'ALL'
		Begin
			delete from #TbTransactionFilter where SegmentID not in (select col From  [fnSplitReturnTable](@Segment,','))
		End
		
--		if @Accountid<>'ALL'
--		Begin
--			delete from #TbTransactionFilter where isnull(OwnAccountS,'R')<>@Accountid and OwnAccountS is not null and OwnAccountT is null
--			delete from #TbTransactionFilter where isnull(OwnAccountT,'R')<>@Accountid and OwnAccountT is not null and OwnAccountS is null
--		End
		------------Insert Into Margin 
		Insert Into  #MainTab (ClientId,Productid,Quantity,MainType,OwnAc,SegmentId,MainOrder)
		select 
		case when CustomerIDS is null then CustomerIDT else CustomerIDS end as Client,
		case when ProductSeriesIDS is null then ProductSeriesIDT else ProductSeriesIDS end as product,
		(ISNULL(Quantityt,0.0)-ISNULL(QuantityS,0.0)) AS QuantityTTEMP,'Margin',
		CASE WHEN OwnAccountS IS NULL THEN OwnAccountT ELSE OwnAccountS END,
		CASE WHEN SegmentIDS IS NULL THEN SegmentIDT ELSE SegmentIDS END,3  From

		(select  sum(isnull(Quantity,0)) as QuantityS,
		CustomerID as CustomerIDS,
		ProductSeriesID as ProductSeriesIDS,OwnAccountS,SegmentID as SegmentIDS
		from #TbTransactionFilter where
		rtrim(ltrim(SettlementNumberS))='Margin'
		group by CustomerID,ProductSeriesID,SegmentID,OwnAccountS) as tabS
		
		full outer join

		(select  sum(isnull(Quantity,0)) as QuantityT,
		CustomerID as CustomerIDT,
		ProductSeriesID as ProductSeriesIDT,OwnAccountT,SegmentID as SegmentIDT
		from #TbTransactionFilter where
		rtrim(ltrim(SettlementNumberT))='Margin'
		group by CustomerID,ProductSeriesID,SegmentID,OwnAccountT) as tabT
		
		on(CustomerIDS=CustomerIDT and ProductSeriesIDS=ProductSeriesIDT AND OwnAccountS=OwnAccountT AND SegmentIDS=SegmentIDT)


		if @Accountid<>'ALL'
		Begin
			Delete from #MainTab Where OwnAc<>@Accountid
		End
		

		------------Insert Into HLDBK 
		Insert Into  #MainTab (ClientId,Productid,Quantity,MainType,OwnAc,SegmentId,MainOrder)
		select 
		case when CustomerIDS is null then CustomerIDT else CustomerIDS end as Client,
		case when ProductSeriesIDS is null then ProductSeriesIDT else ProductSeriesIDS end as product,
		(ISNULL(Quantityt,0.0)-ISNULL(QuantityS,0.0)) AS QuantityTTEMP,'Hldbk',
		CASE WHEN OwnAccountS IS NULL THEN OwnAccountT ELSE OwnAccountS END,
		CASE WHEN SegmentIDS IS NULL THEN SegmentIDT ELSE SegmentIDS END,5  From

		(select  sum(isnull(Quantity,0)) as QuantityS,
		CustomerID as CustomerIDS,
		ProductSeriesID as ProductSeriesIDS,OwnAccountS,SegmentID as SegmentIDS
		from #TbTransactionFilter where
		rtrim(ltrim(SettlementNumberS))='HLDBK'
		group by CustomerID,ProductSeriesID,SegmentID,OwnAccountS) as tabS
		
		full outer join

		(select  sum(isnull(Quantity,0)) as QuantityT,
		CustomerID as CustomerIDT,
		ProductSeriesID as ProductSeriesIDT,OwnAccountT,SegmentID as SegmentIDT
		from #TbTransactionFilter where
		rtrim(ltrim(SettlementNumberT))='HLDBK'
		group by CustomerID,ProductSeriesID,SegmentID,OwnAccountT) as tabT
		
		on(CustomerIDS=CustomerIDT and ProductSeriesIDS=ProductSeriesIDT AND OwnAccountS=OwnAccountT AND SegmentIDS=SegmentIDT)

		if @Accountid<>'ALL'
		Begin
			Delete from #MainTab Where OwnAc<>@Accountid
		End
		

If @ReportFor='1'------------------------------************For Client Wise [Default] Begin
Begin
		-------------PenDing Purchase And Sales Begin
		If (@CheckPur<>'UnChk' or @CheckSale<>'UnChk')
		Begin

				If(cast(DATEADD(dd, 0, DATEDIFF(dd, 0,getdate())) as datetime)=@ForDate)
				Begin----------For Same Date Begin
					--------- Record Fetch Demat Position 
					Select @Sql='Select DematPosition_CustomerID,DematPosition_ProductSeriesID,
					DematPosition_Segmentid,
---- Suppressed on 01.11.2011 (Binay)----
----					Case When ((isnull(DematPosition_QtyToDeliver,0)-isnull(DematPosition_QtyDelivered,0))+(isnull(DematPosition_QtyReceived,0)-isnull(DematPosition_QtyToReceive,0))+isnull(DematPosition_BfOpeningQty,0))>0 Then abs((isnull(DematPosition_QtyToDeliver,0)-isnull(DematPosition_QtyDelivered,0))-(isnull(DematPosition_QtyReceived,0)-isnull(DematPosition_QtyToReceive,0))+isnull(DematPosition_BfOpeningQty,0)) Else 0 End,
----					Case When ((isnull(DematPosition_QtyToDeliver,0)-isnull(DematPosition_QtyDelivered,0))+(isnull(DematPosition_QtyReceived,0)-isnull(DematPosition_QtyToReceive,0))+isnull(DematPosition_BfOpeningQty,0))<0 Then abs((isnull(DematPosition_QtyToDeliver,0)-isnull(DematPosition_QtyDelivered,0))-(isnull(DematPosition_QtyReceived,0)-isnull(DematPosition_QtyToReceive,0))+isnull(DematPosition_BfOpeningQty,0)) Else 0 End,
---- Suppressed on 01.11.2011 (Binay)----
---- Modified on 01.11.2011 (Binay) Pending Purchase figure was not showing correctly where a client has purchased but wrongly given the same share to the broker.----
					Case When ((isnull(DematPosition_QtyToDeliver,0)+isnull(DematPosition_QtyReceived,0))-(isnull(DematPosition_QtyToReceive,0)+isnull(DematPosition_QtyDelivered,0))+isnull(DematPosition_BfOpeningQty,0))>0 
					Then abs(((isnull(DematPosition_QtyToDeliver,0)+isnull(DematPosition_QtyReceived,0))-(isnull(DematPosition_QtyToReceive,0)+isnull(DematPosition_QtyDelivered,0))+isnull(DematPosition_BfOpeningQty,0))) Else 0 End,
					Case When ((isnull(DematPosition_QtyToDeliver,0)+isnull(DematPosition_QtyReceived,0))-(isnull(DematPosition_QtyToReceive,0)+isnull(DematPosition_QtyDelivered,0))+isnull(DematPosition_BfOpeningQty,0))<0 
					Then abs(((isnull(DematPosition_QtyToDeliver,0)+isnull(DematPosition_QtyReceived,0))-(isnull(DematPosition_QtyToReceive,0)+isnull(DematPosition_QtyDelivered,0))+isnull(DematPosition_BfOpeningQty,0))) Else 0 End,
---- Modified on 01.11.2011 (Binay)----
					DematPosition_SettlementNumber+DematPosition_SettlementType
					From Trans_DematPosition
					Where 
					((isnull(DematPosition_QtyToDeliver,0)-isnull(DematPosition_QtyDelivered,0))+(isnull(DematPosition_QtyReceived,0)-isnull(DematPosition_QtyToReceive,0))+isnull(DematPosition_BfOpeningQty,0))<>0
					and isnull(DematPosition_SettlementNumber,''KKK'') not in (''Hldbk'',''Margin'',''Own'',''SYSTM'')
					and DematPosition_Finyear='''+@Finyear+'''
					and DematPosition_CustomerID like ''CL%''
					and DematPosition_CustomerID in  (Select CLIENTID1 From #TABCLIENT)'
					if @Segment<>'ALL'
					Begin
						Select @Sql=@Sql+' and DematPosition_Segmentid in ('+@Segment+')'
					End
					if @Productid<>'ALL'
					BEGIN
							select @Sql=@Sql+' and DematPosition_ProductSeriesID in ('+@Productid+')'
					END
					Select @Sql=@Sql+' 
					and DematPosition_companyid='''+@Companyid+''''

					Insert Into #DematPosition(Customerid,ProductId,Segmentid,PendPur,PendSale,SettNumber)exec(@Sql)
					Delete From #DematPosition Where isnull(PendPur,0)+isnull(PendSale,0)=0

					If (@CheckSale<>'UnChk')---------Pending Sales Begin
					Begin
						
						-----------Main Record Insert
						insert into #MainTab (ClientId,Productid,Quantity,MainType,OwnAcname,SegmentId,MainOrder)
						Select CustomerId,ProductId,Sum(isnull(PendSale,0)),'Pending Sales',SettNumber,Segmentid,8
						From #DematPosition
						Where isnull(PendSale,0)<>0
						Group by Segmentid,ProductId,CustomerId,SettNumber
						
					End---------Pending Sales End
					If (@CheckPur<>'UnChk')---------Pending Purchase Begin
					Begin
						
						-----------Main Record Insert
						insert into #MainTab (ClientId,Productid,Quantity,MainType,OwnAcname,SegmentId,MainOrder)
						Select CustomerId,ProductId,Sum(isnull(PendPur,0)),'Pending Purchase',SettNumber,Segmentid,10
						From #DematPosition
						Where isnull(PendPur,0)<>0
						Group by Segmentid,ProductId,CustomerId,SettNumber

					End---------Pending Purchase End
				End----------For Same Date End
				Else
				Begin----------For DIff Date Begin
						insert into #SettNoType(SettlementNumber,SettType)
						Select distinct rtrim(Settlements_Number),rtrim(Settlements_TypeSuffix)
						from Master_Settlements
						where Settlements_StartDateTime<=cast(DATEADD(dd, 0, DATEDIFF(dd, 0,@ForDate)) as datetime)
						and Settlements_FundsPayin>=DATEADD(day, -7, cast(DATEADD(dd, 0, DATEDIFF(dd, 0,@ForDate)) as datetime)) 

						--------- Record Fetch Demat Position 
						select @Sql='select DematPosition_CustomerID,DematPosition_ProductSeriesID,
						DematPosition_Segmentid,DematPosition_QtyToReceive,DematPosition_QtyToDeliver,
						DematPosition_SettlementNumber,DematPosition_SettlementType
						From Trans_DematPosition,#SettNoType
						where (DematPosition_QtyToReceive<>0.0 or DematPosition_QtyToDeliver<>0.0)
						and DematPosition_SettlementNumber=SettlementNumber
						and DematPosition_SettlementType=SettType
						and DematPosition_Finyear='''+@Finyear+'''
						and DematPosition_CustomerID like ''CL%''
						and DematPosition_CustomerID in (Select Distinct CLIENTID1 From #TABCLIENT)'
						if @Segment<>'ALL'
						Begin
							select @Sql=@Sql+' and DematPosition_Segmentid in ('+@Segment+')'
						End
						if @Productid<>'ALL'
						BEGIN
								select @Sql=@Sql+' and DematPosition_ProductSeriesID in ('+@Productid+')'
						END
						select @Sql=@Sql+' 
						and DematPosition_companyid='''+@Companyid+''''

						Insert Into #DematPosition(Customerid,ProductId,Segmentid,QtyToReceive,QtyToDeliver,
						SettlementsNumber,SettlementsType)exec(@Sql)

						If (@CheckSale<>'UnChk')---------Pending Sales Begin
						Begin
							insert into #DematTransaction(Clientid,Seriesid,Segment,SettNo,SettType,Qty)
							Select DematTransactions_CustomerID,DematTransactions_ProductSeriesID,
							DematTransactions_segmentid,
							DematTransactions_SettlementNumberT ,DematTransactions_SettlementTypeT,
							DematTransactions_Quantity
							From Trans_DematTransactions,#DematPosition 
							where 
							DematTransactions_SettlementTypeT=SettlementsType
							and DematTransactions_SettlementNumberT=SettlementsNumber
							and DematTransactions_ProductSeriesID=ProductId
							and DematTransactions_Date<=@ForDate
							and DematTransactions_CustomerID=Customerid
							and DematTransactions_segmentid=Segmentid
							and DematTransactions_companyid=@Companyid
							and DematTransactions_finyear=@Finyear

							-----------Main Record Insert
							insert into #MainTab (ClientId,Productid,Quantity,MainType,OwnAcname,SegmentId,MainOrder)
							Select 
							case when CustomerID is null then Clientid else CustomerID end,
							case when ProductId is  null then  Seriesid else ProductId end,
							(isnull(SumQtyToReceive,0.0)-isnull(Sum_Quantity,0.0)) as Quantity,
							'Pending Sales',
							case when SettNoPosition is null then SettNoTran else SettNoPosition end,
							case when Segmentid is null then Segment else segmentid end,8
							From
							(select sum(isnull(QtyToReceive,0.0)) as SumQtyToReceive,
							CustomerID,Segmentid,ProductId,SettlementsNumber+SettlementsType as SettNoPosition
							from #DematPosition where QtyToReceive>0
							group by SettlementsNumber,SettlementsType,Segmentid,CustomerID,ProductId) as TAB1

							left outer join

							(select sum(isnull(Qty,0.0)) as Sum_Quantity,
							Clientid,Segment,Seriesid,SettNo+SettType as SettNoTran
							From #DematTransaction 
							group by SettNo,SettType,Segment,Clientid,Seriesid) as TAB2

							on(SettNoPosition=SettNoTran and CustomerID=Clientid and Segmentid=Segment and ProductId=Seriesid)
						
						End---------Pending Sales End
						If (@CheckPur<>'UnChk')---------Pending Purchase Begin
						Begin
							Truncate Table #DematTransaction

							insert into #DematTransaction(Clientid,Seriesid,Segment,SettNo,SettType,Qty)
							Select DematTransactions_CustomerID,DematTransactions_ProductSeriesID,
							DematTransactions_segmentid,
							DematTransactions_SettlementNumberS ,DematTransactions_SettlementTypeS,
							DematTransactions_Quantity
							From Trans_DematTransactions,#DematPosition 
							where 
							DematTransactions_SettlementTypeS=SettlementsType
							and DematTransactions_SettlementNumberS=SettlementsNumber
							and DematTransactions_ProductSeriesID=ProductId
							and DematTransactions_Date<=@ForDate
							and DematTransactions_CustomerID=Customerid
							and DematTransactions_segmentid=Segmentid
							and DematTransactions_companyid=@Companyid
							and DematTransactions_finyear=@Finyear

							-----------Main Record Insert
							insert into #MainTab (ClientId,Productid,Quantity,MainType,OwnAcname,SegmentId,MainOrder)
							Select 
							case when CustomerID is null then Clientid else CustomerID end,
							case when ProductId is  null then  Seriesid else ProductId end,
							(isnull(SumQtyToDeliver,0.0)-isnull(Sum_Quantity,0.0)) as Quantity,
							'Pending Purchase',
							case when SettNoPosition is null then SettNoTran else SettNoPosition end,
							case when Segmentid is null then Segment else segmentid end,10
							From
							(select sum(isnull(QtyToDeliver,0.0)) as SumQtyToDeliver,
							CustomerID,Segmentid,ProductId,SettlementsNumber+SettlementsType as SettNoPosition
							from #DematPosition where QtyToDeliver>0
							Group by SettlementsNumber,SettlementsType,Segmentid,CustomerID,ProductId) as TAB1

							left outer join

							(select sum(isnull(Qty,0.0)) as Sum_Quantity,
							Clientid,Segment,Seriesid,SettNo+SettType as SettNoTran
							From #DematTransaction 
							Group by SettNo,SettType,Segment,Clientid,Seriesid) as TAB2

							on(SettNoPosition=SettNoTran and CustomerID=Clientid and Segmentid=Segment and ProductId=Seriesid)

						End---------Pending Purchase End
				End----------For DIff Date End
		End
		-------------PenDing Purchase And Sales End

		-------------For Dp Details Begin
		If @CheckDp<>'UnChk'
		Begin
				---Chages Made For Found out Record For Secondary DP
				Insert into #TABCLIENTFORDP
				Select * from #TABCLIENT
				
				--Drop Table TABCLIENTFORDP
				--Select * into TABCLIENTFORDP From #TABCLIENTFORDP
				
				Declare @AllDPAccountType Varchar(100),@DPAccountType Varchar(100),@LoopCounter int,
				@Dsql nVarchar(Max),@IsSecondaryDPExist Varchar(5),@MaxHoldingDateTime Varchar(20)
				
				Set @AllDPAccountType='Default~Secondary'
				
				--Cdsl Max HoldingDateTime
				Set @MaxHoldingDateTime=''
				Select @MaxHoldingDateTime=MAX((DATEADD(dd, 0, DATEDIFF(dd, 0, CdslHolding_HoldingDateTime)))) from Trans_CdslHolding,#TABCLIENTFORDP Where CdslHolding_BenAccountNumber=CDSLBenAcNo
				and CdslHolding_FinYear=@Finyear
				
				
				
				------------CDSL Begin
				
				Set @LoopCounter=1
				While(@LoopCounter<3)
				Begin
					
					Set @DPAccountType=dbo.fnSplit(@AllDPAccountType,'~',@LoopCounter)
					
					Update #TABCLIENTFORDP Set CDSLBenAcNo=
					(Select Case When Count(dpd_clientid)=1 Then dpd_clientid Else '00000000' End
					From tbl_master_contactdpdetails,tbl_master_companyexchange
					where dpd_dpcode=exch_tmcode AND EXCH_MEMBERSHIPTYPE in ('CDSL')
					AND exch_compid=@CompanyID AND dpd_cntid=CLIENTID1 and dpd_accounttype=@DPAccountType
					Group by dpd_clientid)
								
					
					Set @Dsql='Select CLIENTID1,CdslHolding_ISIN,CdslHolding_BenAccountNumber,CdslHolding_FreeBalance,CdslHolding_HoldingDateTime,0  from 
					(Select CLIENTID1,CdslHolding_ISIN,CdslHolding_BenAccountNumber,CdslHolding_FreeBalance,CdslHolding_HoldingDateTime,0 free
					from Trans_CdslHolding,#TABCLIENTFORDP Where CdslHolding_BenAccountNumber=CDSLBenAcNo and CdslHolding_FinYear='''+@Finyear+''''
					If(@Productid<>'ALL')
					Begin
						Set @Dsql=@Dsql+'and 
						CDSLHolding_ISIN in (Select ISIN_Number from Master_ISIN Where ISIN_ProductSeriesID in ('+@Productid+') and ISIN_IsActive=''Y'')
						and CdslHolding_BenAccountNumber=CDSLBenAcNo and (DATEADD(dd, 0, DATEDIFF(dd, 0, CdslHolding_HoldingDateTime)))='''+@MaxHoldingDateTime+''''
					End
					
					Set @Dsql=@Dsql+'
					) T1
					inner join 
					(Select ISIN,Max(HoldingDateTime) HoldingDateTime  from 
					(Select CDSLHolding_ISIN ISIN,CDSLHolding_HoldingDateTime HoldingDateTime from Trans_CDSLHolding,#TABCLIENTFORDP
					Where  CdslHolding_FinYear='''+@Finyear+''' and CdslHolding_BenAccountNumber=CDSLBenAcNo)T2
					inner join
					(Select CdslISIN_Number from Master_CdslISIN '
					
					If(@Productid<>'ALL')
					Begin
						Set @Dsql=@Dsql+'Where CdslISIN_Number in(Select ISIN_Number From Master_ISIN Where ISIN_ProductSeriesID in ('+@Productid+') and ISIN_IsActive=''Y'')'
					End
					
					Set @Dsql=@Dsql+') T3
					on ISIN=CdslISIN_Number
					Group By ISIN) T4
					On CdslHolding_ISIN=ISIN and CdslHolding_HoldingDateTime=HoldingDateTime and CdslHolding_HoldingDateTime='''+@MaxHoldingDateTime+''''

					--print @Dsql
					
					Insert Into #DPDetails(ClientId,ISIN,BenAcNumber,FreeBalance,HoldingDateTime,DPStatus)
					Exec Sp_ExecuteSql @Dsql
					
					Insert Into  #MainTab (ClientId,ISINNumber,Quantity,MainType,OwnAcname,SegmentName,MainOrder)
					Select ClientId,ISIN,FreeBalance,'CDSL',BenAcNumber,'CDSL',12 From #DPDetails 
					
					----Initiate Again
					Truncate Table #DPDetails
					Set @LoopCounter=@LoopCounter+1
					Set @DPAccountType=''
					
				End
				
				
				------------CDSL End
				------------NSDL Begin
				TrunCate Table #DPDetails
				
				--Nsdl Max HoldingDateTime
				
				Set @LoopCounter=1
				While(@LoopCounter<3)
				Begin
				
					Set @DPAccountType=dbo.fnSplit(@AllDPAccountType,'~',@LoopCounter)
					
					
					Update #TABCLIENTFORDP Set NSDLBenAcNo=dpd_clientid 
					From tbl_master_contactdpdetails,tbl_master_companyexchange
					where dpd_dpcode=exch_tmcode AND EXCH_MEMBERSHIPTYPE in ('NSDL')
					AND exch_compid=@CompanyID AND dpd_cntid=CLIENTID1 and dpd_accounttype=@DPAccountType
					
					Select @MaxHoldingDateTime=MAX((DATEADD(dd, 0, DATEDIFF(dd, 0, NsdlHolding_HoldingDateTime)))) from Trans_NsdlHolding,#TABCLIENTFORDP Where NsdlHolding_BenAccountNumber=NsdlBenAcNo
					and NsdlHolding_FinYear=@Finyear
				
					
					Set @Dsql='Select CLIENTID1,NSDLHolding_ISIN,NSDLHolding_Free,NSDLHolding_BenAccountNumber from 
					(Select CLIENTID1,NSDLHolding_ISIN,NSDLHolding_BenAccountNumber,NSDLHolding_Free,NSDLHolding_HoldingDateTime,0 free
					from Trans_NSDLHolding,#TABCLIENTFORDP Where NSDLHolding_BenAccountNumber=NSDLBenAcNo and NSDLHolding_FinYear='''+@Finyear+''''
					If(@Productid<>'ALL')
					Begin
						Set @Dsql=@Dsql+'and 
						NSDLHolding_ISIN in (Select ISIN_Number from Master_ISIN Where ISIN_ProductSeriesID in ('+@Productid+') and ISIN_IsActive=''Y'')
						and NSDLHolding_BenAccountNumber=NSDLBenAcNo'
					End
					
					Set @Dsql=@Dsql+'
					) T1
					inner join 
					(Select ISIN,Max(HoldingDateTime) HoldingDateTime  from 
					(Select NSDLHolding_ISIN ISIN,NSDLHolding_HoldingDateTime HoldingDateTime from Trans_NSDLHolding,#TABCLIENTFORDP
					Where  NsdlHolding_FinYear='''+@Finyear+''' and NsdlHolding_BenAccountNumber=NSDLBenAcNo
					and (DATEADD(dd, 0, DATEDIFF(dd, 0, NsdlHolding_HoldingDateTime)))='''+@MaxHoldingDateTime+''')T2
					inner join
					(Select NsdlISIN_Number from Master_NsdlISIN '
					
					If(@Productid<>'ALL')
					Begin
						Set @Dsql=@Dsql+'Where NsdlISIN_Number in(Select ISIN_Number From Master_ISIN Where ISIN_ProductSeriesID in ('+@Productid+') and ISIN_IsActive=''Y'')'
					End
					
					Set @Dsql=@Dsql+') T3
					on ISIN=NsdlISIN_Number
					Group By ISIN) T4
					On NSDLHolding_ISIN=ISIN and NSDLHolding_HoldingDateTime=HoldingDateTime'

					print @Dsql
					Insert Into #DPDetails(ClientId,ISIN,FreeBalance,BenAcNumber)
					Exec Sp_ExecuteSql @Dsql
					
					
					Insert Into  #MainTab (ClientId,ISINNumber,Quantity,MainType,OwnAcname,SegmentName,MainOrder)
					Select ClientId,ISIN,FreeBalance,'NSDL',BenAcNumber,'NSDL',14 From #DPDetails 
					----Initiate Again
					Truncate Table #DPDetails
					
					
					Set @LoopCounter=@LoopCounter+1
					Set @DPAccountType=''
				End	
					------------NSDL End

					----------Productid Fetch For Nsdl And CDSL From ISIN
					UPDATE #MainTab SET Productid=EQUITY_SERIESID FROM
					(
					SELECT EQUITY_SERIESID,substring(ISIN_NUMBER,1,12) AS ISINNo  
					FROM MASTER_EQUITY,MASTER_ISIN
					WHERE substring(ISIN_NUMBER,1,12) IN (SELECT ISIN_NUMBER FROM MASTER_ISIN,#MainTab 
														 WHERE substring(ISIN_NUMBER,1,12)=ISINNumber 
														 and ISIN_isactive='Y' and isnull(MainType,'R') in ('NSDL','CDSL')
														 GROUP BY ISIN_NUMBER HAVING COUNT(ISIN_NUMBER)>1)
					AND ISIN_PRODUCTSERIESID=EQUITY_SERIESID
					AND EQUITY_EXCHSEGMENTID=1
					AND ISIN_isactive='Y'
					) AS BB
					WHERE ISINNumber=ISINNo and isnull(MainType,'R') in ('NSDL','CDSL')
						
					UPDATE #MainTab SET PRODUCTID=EQUITY_SERIESID FROM
					(
					SELECT EQUITY_SERIESID,substring(ISIN_NUMBER,1,12) AS ISINNo
					FROM MASTER_EQUITY,MASTER_ISIN,#MainTab
					WHERE substring(ISIN_NUMBER,1,12)=ISINNumber
					and isnull(MainType,'R') in ('NSDL','CDSL')
					AND ISIN_PRODUCTSERIESID=EQUITY_SERIESID
					AND isin_isactive='Y' AND PRODUCTID IS NULL
					) AS BB
					WHERE ISINNUMBER=ISINNo AND PRODUCTID IS NULL and isnull(MainType,'R') in ('NSDL','CDSL')
					
				Drop Table #TABCLIENTFORDP
		End
		-------------For Dp Details End
		
		-------------Ledger Balance Begin
		If @Chkledgerbaln<>'UnChk'
		Begin
						Declare @NxtTwoDate varchar(40),@GetNxtTwoDateFinYear varchar(30)
						Select @NxtTwoDate=[dbo].[fn_TDays](cast(@ForDate as datetime),2,1)
						Select @GetNxtTwoDateFinYear=[dbo].[fn_GetFinYear](cast(@NxtTwoDate as datetime))


						Select @Sql='Select sum(isnull(accountsledger_amountCr,0.0)-isnull(accountsledger_amountDr,0.0)) as closing,
						AccountsLedger_SubAccountID,16,''Ledger Baln.'',''** Ledger Baln.''
						From trans_accountsledger,#TABCLIENT Where 
						accountsledger_mainaccountid=''SYSTM00001'''
						If(@GetNxtTwoDateFinYear<>@Finyear)
						Begin
								Select @SQL=@SQL+' AND ltrim(rtrim(AccountsLedger_FinYear))
								in ('''+@Finyear+''','''+@NextFinYear+''')'
						End
						Else
						Begin
								Select @SQL=@SQL+' AND ltrim(rtrim(AccountsLedger_FinYear))='''+@Finyear+''''
						End
						if @Segment<>'ALL'
						Begin
							Select @SQL=@SQL+' AND AccountsLedger_ExchangeSegmentID in('+@Segment+')'
						End
						select @Sql=@Sql+' and AccountsLedger_SubAccountID=CLIENTID1
						AND AccountsLedger_TransactionDate<='''+@NxtTwoDate+'''
						AND AccountsLedger_CompanyID='''+@Companyid+'''
						Group by AccountsLedger_SubAccountID
						Having sum(isnull(accountsledger_amountCr,0.0)-isnull(accountsledger_amountDr,0.0))<>0'

						insert into #MainTab (ValueAfterHaicut,ClientId,MainOrder,MainType,TabName) exec(@Sql)
	
						

		End
		-------------Ledger Balance End
		-------------Cash Margin Deposit Begin
		If @Chkcashmargin<>'UnChk'
		Begin
				Select @Sql='Select sum(isnull(accountsledger_amountCr,0.0)-isnull(accountsledger_amountDr,0.0)) as closing,
						AccountsLedger_SubAccountID,17,''Cash Margin Dept.'',''** Cash Margin Dept.''
						From trans_accountsledger Where 
						accountsledger_mainaccountid in(''SYSTM00002'',''SYSTM00003'')'
						If @Segment<>'ALL'
						Begin
							Select @SQL=@SQL+' AND AccountsLedger_ExchangeSegmentID in('+@Segment+')'
						End
						select @Sql=@Sql+' AND ltrim(rtrim(AccountsLedger_FinYear))='''+@Finyear+'''
						AND AccountsLedger_SubAccountID IN (Select Distinct CLIENTID1 From #TABCLIENT)
						AND AccountsLedger_TransactionDate<='''+@ForDate +'''
						AND AccountsLedger_CompanyID='''+@Companyid+'''
						Group by AccountsLedger_SubAccountID
						Having sum(isnull(accountsledger_amountCr,0.0)-isnull(accountsledger_amountDr,0.0))<>0'
						insert into #MainTab (ValueAfterHaicut,ClientId,MainOrder,MainType,TabName) exec(@Sql)
		End


		-------------Cash Margin Deposit End
		
		-----------Scrip Name  
		Update #MainTab set ScripName=(isnull(Equity_TickerSymbol,''))+' '+(isnull(Equity_Series,ISNULL('['+Equity_TICKERCODE+']','')))
		From master_equity where Equity_SeriesID=Productid
		and Productid is Not Null
		
		update #MainTab set ScripName=CDSLISIN_SHORTNAME
		from MASTER_CDSLISIN where CDSLISIN_number=ISINNumber  
		and ScripName is null and MainType='CDSL'

		update #MainTab set ScripName=nsdlisin_companyname
		from master_nsdlisin where nsdlisin_number=ISINNumber  
		and ScripName is null and MainType='NSDL'

		---------Update ISIN Number
		Update #MainTab set ISINNumber=substring(isin_number,1,12)
		From master_isin where Productid=ISIN_ProductSeriesID
		and isin_isactive='Y'
		----------------Security Fetch Begin
		If @SecurityType='All'
		Begin
			Update #MainTab Set ScripName=rtrim(ltrim(ScripName))+' [Approved]',SecurityType='Y' From Trans_ApprovedSecurities
			Where ApprovedSecurities_ISIN=ISINNumber
			and @ForDate between ApprovedSecurities_DateFrom and isnull(ApprovedSecurities_DateTo,'2200-12-31')
				
			Update #MainTab Set ScripName=rtrim(ltrim(ScripName))+' [Illiquid]',SecurityType='Y' From Trans_IlliquidScrips
			Where IlliquidScrips_ISIN=ISINNumber
			and month(@ForDate)=IlliquidScrips_Month and year(@ForDate)=IlliquidScrips_Year
		
		End
		If @SecurityType='Approved'
		Begin
			Update #MainTab Set ScripName=rtrim(ltrim(ScripName))+' [Approved]',SecurityType='Y' From Trans_ApprovedSecurities
			Where ApprovedSecurities_ISIN=ISINNumber
			and @ForDate between ApprovedSecurities_DateFrom and isnull(ApprovedSecurities_DateTo,'2200-12-31')
				
			Delete From #MainTab Where SecurityType is null and MainOrder in (3,5,8,10,12,14,16,17)
		End
		If @SecurityType='UnApproved'
		Begin
			Update #MainTab Set ScripName=rtrim(ltrim(ScripName))+' [UnApproved]',SecurityType='Y' Where  ISINNumber 
			not in (Select Distinct ApprovedSecurities_ISIN From Trans_ApprovedSecurities
			where @ForDate between ApprovedSecurities_DateFrom and isnull(ApprovedSecurities_DateTo,'2200-12-31'))
			
			Delete From #MainTab Where SecurityType is null and MainOrder in (3,5,8,10,12,14,16,17)
		End
		If @SecurityType='Illiquid'
		Begin
			Update #MainTab Set ScripName=rtrim(ltrim(ScripName))+' [Illiquid]',SecurityType='Y' From Trans_IlliquidScrips
			Where IlliquidScrips_ISIN=ISINNumber
			and month(@ForDate)=IlliquidScrips_Month and year(@ForDate)=IlliquidScrips_Year
				
			Delete From #MainTab Where SecurityType is null and MainOrder in (3,5,8,10,12,14,16,17)
		End
		If @SecurityType='liquid'
		Begin
			Update #MainTab Set ScripName=rtrim(ltrim(ScripName))+' [liquid]',SecurityType='Y' From Trans_IlliquidScrips
			Where IlliquidScrips_ISIN<>ISINNumber
				
			Delete From #MainTab Where SecurityType is null and MainOrder in (3,5,8,10,12,14,16,17)
		End
		----------------Security Fetch End
		----------------Corporate Action Begin
		
		Select @sql='
		Select CorpAction_ProductSeriesID,Remarks
		From
		(
			Select CorpAction_ProductSeriesID,
			'' [''+ltrim(rtrim(CorpAction_Type))+
			isnull((Case When CorpAction_RecordDate is null 
					Then isnull(
								('';BcStrt :''+(Case When CorpAction_BCStart is null Then null Else convert(varchar(9),CorpAction_BCStart,6) End)),''''
							   )
					Else isnull(
								('';RD :''+(Case When CorpAction_RecordDate is null Then null Else convert(varchar(9),CorpAction_RecordDate,6) End)),''''
							   )
					End)
				  ,'''')+'']''
			 as Remarks,
			Case When CorpAction_RecordDate is null  Then CorpAction_BCStart Else CorpAction_RecordDate End Date
			From Trans_CorporateActions,#MainTab Where CorpAction_ProductSeriesID=Productid
			and (
				(CorpAction_RecordDate is not null and CorpAction_RecordDate>='''+@ForDate+''')
				or
				(CorpAction_ExDate is not null and CorpAction_ExDate>=DATEADD(day,1,'''+@ForDate+''')  )
				)'
			If @CorpAc<>'ALL'
			Begin
				Select @sql=@sql+ ' and ltrim(rtrim(CorpAction_Type))='''+@CorpAc+''' '
			End
		Select @sql=@sql+ '
		) as kk
		Order by Date Desc'

		Insert Into #TbCorpAc(Seriesid,Remarks)Exec(@sql)

		Update #MainTab Set ScripName=rtrim(ltrim(ScripName))+' '+ Remarks From #TbCorpAc Where Seriesid=Productid

		----------------Corporate Action End
		---------Blank Record Insert Begin
		If @ReportFor='1'
		Begin
			--------- Margin Band Insert
			Insert Into  #MainTab (ClientId,TabName,MainType,MainOrder)
			Select Distinct ClientId,'** Margin Stocks','Margin',2 From #MainTab Where MainType='Margin'
			and ClientId in (Select Distinct ClientId From #MainTab Where MainType='Margin' and isnull(Quantity,0)<>0)
		
			--------- Hldbk Band Insert
			Insert Into  #MainTab (ClientId,TabName,MainType,MainOrder)
			Select Distinct ClientId,'** Hldbk Stocks','Hldbk',4 From #MainTab Where MainType='Hldbk'
			and ClientId in (Select Distinct ClientId From #MainTab Where MainType='Hldbk' and isnull(Quantity,0)<>0)

			If (@CheckSale<>'UnChk')---------Pending Sales Begin
			Begin
				
				Insert Into  #MainTab (ClientId,TabName,MainType,MainOrder)
				Select Distinct ClientId,'** Pending Sales','Pending Sales',7 From #MainTab 
				Where MainType='Pending Sales'
				and ClientId in (Select Distinct ClientId From #MainTab Where MainType='Pending Sales' and isnull(Quantity,0)<>0)
				
			End---------Pending Sales End
			If (@CheckPur<>'UnChk')---------Pending Purchase Begin
			Begin
				
				Insert Into  #MainTab (ClientId,TabName,MainType,MainOrder)
				Select Distinct ClientId,'** Pending Purchase','Pending Purchase',9 From #MainTab Where MainType='Pending Purchase'
				and ClientId in (Select Distinct ClientId From #MainTab Where MainType='Pending Purchase' and isnull(Quantity,0)<>0)

			End---------Pending Purchase End
			If @CheckDp<>'UnChk'
			Begin
				---------CDSL Band Insert
				Insert Into  #MainTab (ClientId,TabName,MainType,MainOrder)
				Select Distinct ClientId,'** CDSL Holding','CDSL',11 From #MainTab Where MainType='CDSL'
				and ClientId in (Select Distinct ClientId From #MainTab Where MainType='CDSL' and isnull(Quantity,0)<>0)

				---------NSDL Band Insert
				Insert Into  #MainTab (ClientId,TabName,MainType,MainOrder)
				Select Distinct ClientId,'** NSDL Holding','NSDL',13 From #MainTab Where MainType='NSDL'
				and ClientId in (Select Distinct ClientId From #MainTab Where MainType='NSDL' and isnull(Quantity,0)<>0)
			End
		End
		---------Blank Record Insert End

		--------Update SegmentName 
		Update 	#MainTab Set SegmentName=CASE 
											  WHEN EXCH_SEGMENTID='CM' AND EXCH_EXCHID='EXN0000002' THEN 'NSE-CM'
											  WHEN EXCH_SEGMENTID='CM' AND EXCH_EXCHID='EXB0000001' THEN 'BSE-CM'
											  WHEN EXCH_SEGMENTID='CM' AND EXCH_EXCHID='EXC0000001' THEN 'CSE-CM'
											  WHEN EXCH_SEGMENTID='FO' AND EXCH_EXCHID='EXN0000002' THEN 'NSE-FO'
											  WHEN EXCH_SEGMENTID='FO' AND EXCH_EXCHID='EXB0000001' THEN 'BSE-FO'
											  WHEN EXCH_SEGMENTID='COMM' AND EXCH_EXCHID='EXM0000001' THEN 'MCX-COMM'
											  WHEN EXCH_SEGMENTID='COMM' AND EXCH_EXCHID='EXI0000001' THEN 'ICEX-COMM'
											  WHEN EXCH_SEGMENTID='COMM' AND EXCH_EXCHID='EXN0000004' THEN 'NCDEX-COMM'
											  WHEN EXCH_SEGMENTID='COMM' AND EXCH_EXCHID='EXN0000005' THEN 'NMCE-COMM'
											  WHEN EXCH_SEGMENTID='COMM' AND EXCH_EXCHID='EXD0000001' THEN 'DGCX-COMM'

											  WHEN EXCH_SEGMENTID='CDX' AND EXCH_EXCHID='EXM0000002' THEN 'MCXSX-CDX'
											  WHEN EXCH_SEGMENTID='CDX' AND EXCH_EXCHID='EXU0000001' THEN 'USE-CDX'
											  WHEN EXCH_SEGMENTID='CDX' AND EXCH_EXCHID='EXB0000001' THEN 'BSE-CDX'
											  WHEN EXCH_SEGMENTID='CDX' AND EXCH_EXCHID='EXN0000002' THEN 'NSE-CDX'

											  WHEN EXCH_SEGMENTID='SPOT' AND EXCH_EXCHID='EXN0000006' THEN 'NSEL-SPOT'
											  ELSE NULL END			
		FROM TBL_MASTER_COMPANYEXCHANGE WHERE SegmentId=EXCH_INTERNALID
		and SegmentId is not null
							
		---------Account Name Fetch
		Update #MainTab Set OwnAcname=DPAccounts_ShortName
		From Master_DPAccounts
		Where DPAccounts_ID=OwnAc and DPAccounts_CompanyID=@CompanyID and OwnAc is not null

		----------Update ClientName
		Update #MainTab Set ClientName=CLIENTNAME1,Grpname=Grpname1,GrpId=Groupid1,GrpEmail=GrpEmail1
		From #TABCLIENT  Where ClientId=CLIENTID1 and CLIENTID1 is not null

		---------Close Price Fetch
		Update #MainTab set ClosePrice=DailyStat_Close from 
		Trans_DailyStatistics,
								(
									Select MAX(DailyStat_DateTime) AS DATE,DailyStat_ProductSeriesID AS PRDID
									From Trans_DailyStatistics,#MainTab
									where DailyStat_DateTime<=@ForDate
									AND DailyStat_ProductSeriesID=Productid
									GROUP BY DailyStat_ProductSeriesID
								) AS TB
		Where DailyStat_ProductSeriesID=PRDID
		AND DailyStat_ProductSeriesID=Productid
		AND PRDID=Productid
		AND DailyStat_DateTime=DATE
		
		---------HairCut Fetch
		update #MainTab set HairCut=DailyVar_AppMargin from 
		Trans_DailyVar,
						(
							Select MAX(DailyVar_Date) AS DATE,DailyVar_ProductSeriesID AS PRDID
							from Trans_DailyVar,#MainTab
							where DailyVar_Date<=@ForDate
							AND DailyVar_ProductSeriesID=Productid
							GROUP BY DailyVar_ProductSeriesID
						) AS TB
		Where DailyVar_ProductSeriesID=PRDID
		AND DailyVar_ProductSeriesID=Productid
		AND PRDID=Productid
		AND DailyVar_Date=DATE

		-----------Update Value Before Haicut
		Update #MainTab Set ValueBeforeHaicut=(isnull(ClosePrice,0))*isnull(Quantity,0)
		Where MainType in ('Pending Sales','Pending Purchase','Margin','Hldbk','NSDL','CDSL')

		If (@CheckPur<>'UnChk' or @CheckSale<>'UnChk')
		Begin
			If @PendingPurSalevalueMethod='Trade'
			Begin
					-------------For TradeValueCal
					Create Table #TransCustomerTrades(CustomerId varchar(15),Segment varchar(20),
					Seriesid varchar(30),Qty numeric(28,0),
					NetValue numeric(28,2),SettNoType varchar(20))
					
					Select @Sql='Select 
					customertrades_customerid,customertrades_productseriesid,
					customertrades_exchangesegment,
					isnull(CustomerTrades_UnitPriceQuantity,0),isnull(customertrades_netvalue,0),
					CustomerTrades_SettlementNumber+CustomerTrades_SettlementType
					From Trans_customertrades,#MainTab Where
					customertrades_productseriesid=Productid 
					and MainType in (''Pending Sales'',''Pending Purchase'') and isnull(Quantity,0)<>0
					and customertrades_brokeragetype=''D'' and customertrades_customerid=ClientId
					and CustomerTrades_SettlementNumber+CustomerTrades_SettlementType=OwnAcname'
					if @CheckPur<>'Unchk'
					BEGIN
							select @Sql=@Sql+' and isnull(CustomerTrades_UnitPriceQuantity,0.0)<0 '
					END
					if @CheckSale<>'Unchk'
					BEGIN
							select @Sql=@Sql+' and isnull(CustomerTrades_UnitPriceQuantity,0.0)>0 '
					END
					select @Sql=@Sql+' 
					and customertrades_companyid='''+@CompanyID+''''
					Insert Into #TransCustomerTrades(CustomerId,Seriesid,Segment,Qty,NetValue,SettNoType)exec(@Sql)

					----------For Pending Purchase
					Update #MainTab Set 
										ValueBeforeHaicut=NetValue,
										ClosePrice=UnitPriceQuantity From

					(Select CustomerId,sum(isnull(NetValue,0.0)) as NetValue,
					abs(sum(isnull(Qty,0.0))) as UnitPriceQuantity,Seriesid,Segment,SettNoType
					From #TransCustomerTrades
					Where isnull(Qty,0.0)<0 group by Segment,SettNoType,Seriesid,CustomerId)as tab

					where  Seriesid=Productid and SettNoType=OwnAcname  and isnull(Quantity,0)<>0
					and CustomerId=ClientId and Segment=SegmentId and  MainType='Pending Purchase'


					----------For Pending Sales
					Update #MainTab Set 
										ValueBeforeHaicut=NetValue,
										ClosePrice=UnitPriceQuantity From

					(Select CustomerId,sum(isnull(NetValue,0.0)) as NetValue,
					abs(sum(isnull(Qty,0.0))) as UnitPriceQuantity,Seriesid,Segment,SettNoType
					From #TransCustomerTrades
					Where isnull(Qty,0.0)>0 group by Segment,SettNoType,Seriesid,CustomerId)as tab

					where  Seriesid=Productid and SettNoType=OwnAcname  and isnull(Quantity,0)<>0
					and CustomerId=ClientId and Segment=SegmentId and  MainType='Pending Sales'

					Drop Table #TransCustomerTrades

					-------Update Value Before Haicut
					update #MainTab set ValueBeforeHaicut=(abs(isnull(ValueBeforeHaicut,0))/abs(isnull(ClosePrice,1))*abs(isnull(Quantity,0)))
					Where  MainType in ('Pending Sales','Pending Purchase')  and isnull(Quantity,0)<>0


					
			End
		End

		----------For Pending Sales
		Update #MainTab Set Quantity=(-1)*isnull(Quantity,0),ValueBeforeHaicut=(-1)*isnull(ValueBeforeHaicut,0),
							ValueAfterHaicut=(-1)*isnull(ValueAfterHaicut,0)
		Where  MainType='Pending Sales'

		-----------Update Value Before Haicut
		Update #MainTab Set ValueAfterHaicut=((isnull(ValueBeforeHaicut,0)*(100-isnull(HairCut,0)))/100)
		Where MainType in ('Pending Purchase','Margin','Hldbk','NSDL','CDSL')

		Update #MainTab Set ValueAfterHaicut=((isnull(ValueBeforeHaicut,0)*(100+isnull(HairCut,0)))/100)
		Where MainType in ('Pending Sales')

		-----------Delete Quantity
		Delete From #MainTab Where isnull(Quantity,0)=0 
		and MainOrder in (3,5,8,10,12,14)

		-----------Main Tab Update
		Update #MainTab Set TabName=ScripName Where ScripName is not null

		----------- Result Sum
		Insert Into #MainTab(ClientId,ClientName,GrpId,GrpEmail,Grpname,TabName,MainOrder,ValueBeforeHaicut,ValueAfterHaicut)
		-------Net
		Select ClientId,ClientName,GrpId,GrpEmail,Grpname,'Net:',
		18,Sum(Isnull(ValueBeforeHaicut,0)),Sum(Isnull(ValueAfterHaicut,0))
		From #MainTab Group By ClientId,ClientName,GrpId,Grpname,GrpEmail 

		--------Distinct GrpName and ClientName Insert 
		Insert Into #MainTab(ClientId,ClientName,GrpId,GrpEmail,Grpname,TabName,MainOrder)
		Select Distinct 'G',null,GrpId,GrpEmail,Grpname,
		Case When @GrpType='Branch' Then 'Branch : '+ Grpname Else 'Group: '+ Grpname End,0 From #MainTab
		Union All
		Select Distinct ClientId,ClientName,GrpId,GrpEmail,Grpname,'Client :  ' +ClientName,1 From #MainTab

		

		----------- Result Sum
		Insert Into #MainTab(ClientId,ClientName,GrpId,GrpEmail,Grpname,TabName,MainOrder,ValueBeforeHaicut,ValueAfterHaicut)
		--------Margin
		Select ClientId,ClientName,GrpId,GrpEmail,Grpname,'Total:',6,Sum(Isnull(ValueBeforeHaicut,0)),Sum(Isnull(ValueAfterHaicut,0))
		From #MainTab Where MainOrder in (3,5) Group By ClientId,ClientName,GrpId,Grpname ,GrpEmail

		Union All
		--------Pending
		Select ClientId,ClientName,GrpId,GrpEmail,Grpname,'Total:',11,Sum(Isnull(ValueBeforeHaicut,0)),Sum(Isnull(ValueAfterHaicut,0))
		From #MainTab Where MainOrder in (8,10) Group By ClientId,ClientName,GrpId,Grpname ,GrpEmail

		Union All
		--------DP
		Select ClientId,ClientName,GrpId,GrpEmail,Grpname,'Total:',15,Sum(Isnull(ValueBeforeHaicut,0)),Sum(Isnull(ValueAfterHaicut,0))
		From #MainTab Where MainOrder in (12,14) Group By ClientId,ClientName,GrpId,Grpname,GrpEmail 

		----------- Per Group Sum
		Insert Into #MainTab(ClientId,ClientName,GrpEmail,GrpId,Grpname,TabName,MainOrder,ValueBeforeHaicut,ValueAfterHaicut)
		Select 'ZZZ','ZZZ',GrpEmail,GrpId,Grpname,'Grand Total :',
		20,Sum(Isnull(ValueBeforeHaicut,0)),Sum(Isnull(ValueAfterHaicut,0))
		From #MainTab Where MainOrder in (3,5,8,10,12,14,16,17) Group By Grpname,GrpId,GrpEmail

		
		----------Result Display
		Select ClientId,GrpId,GrpEmail,
		Case When @GrpType='Branch' Then 'Branch : '+ Grpname Else 'Group: '+ Grpname End as Grpname,
		TabName as [Scrip Name],
		Case When TabName like '**%' and MainOrder in (3,5,8,10,12,14) Then 'Test' When Left(TabName,5) in ('Clien','Branc','Group') Then 'Test' Else SegmentName End as [Segment],
		ISINNumber [ISIN],
		OwnAcname as [Account/Settlement/Ben Acc.],
		CASE WHEN ISNULL(Quantity,0)=0 THEN NULL WHEN Quantity<0 THEN '-'+dbo.fn_FormatNumber(CAST(ABS(Quantity) AS VARCHAR(8000)),'Y') ELSE dbo.fn_FormatNumber(CAST(Quantity AS VARCHAR(8000)),'Y') END AS [Qty],
		CASE WHEN ISNULL(ClosePrice,0)=0 THEN NULL ELSE dbo.fn_FormatNumber(CAST(ClosePrice AS VARCHAR(8000)),'N') END AS [Rate],
		CASE WHEN ISNULL(ValueBeforeHaicut,0)=0 THEN NULL WHEN ValueBeforeHaicut<0 THEN '-'+dbo.fn_FormatNumber(CAST(ABS(ValueBeforeHaicut) AS VARCHAR(8000)),'N') ELSE dbo.fn_FormatNumber(CAST(ValueBeforeHaicut AS VARCHAR(8000)),'N') END AS [Mkt Value],
		CASE WHEN ISNULL(HairCut,0)=0 THEN NULL  ELSE dbo.fn_FormatNumber(CAST(HairCut AS VARCHAR(8000)),'N') END AS [Haircut (%)],
		CASE WHEN ISNULL(ValueAfterHaicut,0)=0 THEN NULL WHEN ValueAfterHaicut<0 THEN '-'+dbo.fn_FormatNumber(CAST(ABS(ValueAfterHaicut) AS VARCHAR(8000)),'N') ELSE dbo.fn_FormatNumber(CAST(ValueAfterHaicut AS VARCHAR(8000)),'N') END AS [Value After Haircut]
		From #MainTab order by Grpname,ClientName,MainOrder,ScripName

		--------CompanyDetails
		Select distinct cmp_panNo as CmpPanNo,cmp_Name as CmpName,TabName as Grpname,
		isnull((Select top 1 phf_countryCode+'-'+phf_areaCode+'-'+phf_phoneNumber from tbl_master_phonefax where  PHF_TYPE='Work' AND phf_cntId=@CompanyID),'')as CmpPh,
		isnull((select Top 1(eml_email) from tbl_master_email where eml_cntid=@CompanyID and eml_type='Official'),'')as CmpEmail,
		isnull((select Top 1(cmp_ServiceTaxNo) from tbl_master_company where cmp_internalid=@CompanyID),'')as CmpServiceTaxNo,
		isnull((select top 1(isnull(add_address1,' ')+' '+
		isnull(add_address2,' ')+' '+isnull(add_address3,' ')) 
		from tbl_master_address,tbl_master_company,tbl_master_city
		where cmp_internalid=add_cntid and cmp_internalid=@CompanyID
		and add_city=city_id and add_cntID=@CompanyID
		AND add_entity='Company' AND add_addressType='Office'),'')as CmpAddress,
		isnull((select top 1 (isnull(city_name,' ')+'-'+ isnull(add_pin,' '))
		from tbl_master_address,tbl_master_company,tbl_master_city
		where cmp_internalid=add_cntid and cmp_internalid=@CompanyID
		and add_city=city_id and add_cntID=@CompanyID
		AND add_entity='Company' AND add_addressType='Office'),'')as Cmpaddress1,
		'Segment : '+(SELECT SUBSTRING((SELECT distinct ','+  T.SegmentName
		FROM #MainTab AS T Where SegmentName is not null  
		FOR XML PATH('')),2,200000))as SegmentName,
		'For A Date : '+Convert(varchar(11),cast(@ForDate as Datetime),106) as Date
		From tbl_master_company,#MainTab 
		Where cmp_internalid=@CompanyID and MainOrder=0
	

End------------------------------************For Client Wise [Default] End
If @ReportFor='2'------------------------------************For DP Account+Scrip+Client Begin
Begin
		Delete From #MainTab Where ISNULL(Quantity,0)=0

		If @Stocknegative='Chk'
		Begin
			Delete From #MainTab Where ISNULL(Quantity,0)>0
		End
		
		---------Close Price Fetch
		Update #MainTab set ClosePrice=DailyStat_Close from 
		Trans_DailyStatistics,
								(
									Select MAX(DailyStat_DateTime) AS DATE,DailyStat_ProductSeriesID AS PRDID
									From Trans_DailyStatistics,#MainTab
									where DailyStat_DateTime<=@ForDate
									AND DailyStat_ProductSeriesID=Productid
									GROUP BY DailyStat_ProductSeriesID
								) AS TB
		Where DailyStat_ProductSeriesID=PRDID
		AND DailyStat_ProductSeriesID=Productid
		AND PRDID=Productid
		AND DailyStat_DateTime=DATE
		
		---------HairCut Fetch
		update #MainTab set HairCut=DailyVar_AppMargin from 
		Trans_DailyVar,
						(
							Select MAX(DailyVar_Date) AS DATE,DailyVar_ProductSeriesID AS PRDID
							from Trans_DailyVar,#MainTab
							where DailyVar_Date<=@ForDate
							AND DailyVar_ProductSeriesID=Productid
							GROUP BY DailyVar_ProductSeriesID
						) AS TB
		Where DailyVar_ProductSeriesID=PRDID
		AND DailyVar_ProductSeriesID=Productid
		AND PRDID=Productid
		AND DailyVar_Date=DATE

		Update #MainTab Set ValueBeforeHaicut=(isnull(ClosePrice,0))*isnull(Quantity,0),MainOrder=3
		Update #MainTab Set ValueAfterHaicut=((isnull(ValueBeforeHaicut,0)*(100-isnull(HairCut,0)))/100)

		-----------Scrip Name  
		Update #MainTab set ScripName=(isnull(Equity_TickerSymbol,''))+' '+(isnull(Equity_Series,ISNULL('['+Equity_TICKERCODE+']','')))
		From master_equity where Equity_SeriesID=Productid
		and Productid is Not Null
		
		---------Update ISIN Number
		Update #MainTab set ISINNumber=substring(isin_number,1,12)
		From master_isin where Productid=ISIN_ProductSeriesID
		and isin_isactive='Y'
		
		----------------Security Fetch Begin
		If @SecurityType='All'
		Begin
			Update #MainTab Set ScripName=rtrim(ltrim(ScripName))+' [Approved]',SecurityType='Y' From Trans_ApprovedSecurities
			Where ApprovedSecurities_ISIN=ISINNumber
			and @ForDate between ApprovedSecurities_DateFrom and isnull(ApprovedSecurities_DateTo,'2200-12-31')
				
			Update #MainTab Set ScripName=rtrim(ltrim(ScripName))+' [Illiquid]',SecurityType='Y' From Trans_IlliquidScrips
			Where IlliquidScrips_ISIN=ISINNumber
			and month(@ForDate)=IlliquidScrips_Month and year(@ForDate)=IlliquidScrips_Year
		
		End
		If @SecurityType='Approved'
		Begin
			Update #MainTab Set ScripName=rtrim(ltrim(ScripName))+' [Approved]',SecurityType='Y' From Trans_ApprovedSecurities
			Where ApprovedSecurities_ISIN=ISINNumber
			and @ForDate between ApprovedSecurities_DateFrom and isnull(ApprovedSecurities_DateTo,'2200-12-31')
				
			Delete From #MainTab Where SecurityType is null and MainOrder in (3,5,8,10,12,14,16,17)
		End
		If @SecurityType='UnApproved'
		Begin
			Update #MainTab Set ScripName=rtrim(ltrim(ScripName))+' [UnApproved]',SecurityType='Y' Where  ISINNumber 
			not in (Select Distinct ApprovedSecurities_ISIN From Trans_ApprovedSecurities
			where @ForDate between ApprovedSecurities_DateFrom and isnull(ApprovedSecurities_DateTo,'2200-12-31'))
			
			Delete From #MainTab Where SecurityType is null and MainOrder in (3,5,8,10,12,14,16,17)
		End
		If @SecurityType='Illiquid'
		Begin
			Update #MainTab Set ScripName=rtrim(ltrim(ScripName))+' [Illiquid]',SecurityType='Y' From Trans_IlliquidScrips
			Where IlliquidScrips_ISIN=ISINNumber
			and month(@ForDate)=IlliquidScrips_Month and year(@ForDate)=IlliquidScrips_Year
				
			Delete From #MainTab Where SecurityType is null and MainOrder in (3,5,8,10,12,14,16,17)
		End
		If @SecurityType='liquid'
		Begin
			Update #MainTab Set ScripName=rtrim(ltrim(ScripName))+' [liquid]',SecurityType='Y' From Trans_IlliquidScrips
			Where IlliquidScrips_ISIN<>ISINNumber
				
			Delete From #MainTab Where SecurityType is null and MainOrder in (3,5,8,10,12,14,16,17)
		End
		----------------Security Fetch End
		----------------Corporate Action Begin
		If @CorpAcTypeChk='true'
		Begin
			Select @sql='
			Select CorpAction_ProductSeriesID,Remarks
			From
			(
				Select CorpAction_ProductSeriesID,
				''CA Type:''+ltrim(rtrim(CorpAction_Type))+
				isnull((Case When CorpAction_RecordDate is null 
						Then isnull(
									('';BcStrt :''+(Case When CorpAction_BCStart is null Then null Else convert(varchar(9),CorpAction_BCStart,6) End)),''''
								   )
						Else isnull(
									('';RD :''+(Case When CorpAction_RecordDate is null Then null Else convert(varchar(9),CorpAction_RecordDate,6) End)),''''
								   )
						End)
					  ,'''')+
				'';ExD :''+(Case When CorpAction_ExDate is null Then null Else convert(varchar(9),CorpAction_ExDate,6) End)+
				+
				'' [''+ltrim(rtrim(CorpAction_Remarks))+'']'' as Remarks,
				Case When CorpAction_RecordDate is null  Then CorpAction_BCStart Else CorpAction_RecordDate End Date
				From Trans_CorporateActions,#MainTab Where CorpAction_ProductSeriesID=Productid
				and (
					(CorpAction_RecordDate is not null and CorpAction_RecordDate>='''+@ForDate+''')
					or
					(CorpAction_ExDate is not null and CorpAction_ExDate>='''+@ForDate+''')
					)'
				If @CorpAc<>'ALL'
				Begin
					Select @sql=@sql+ ' and ltrim(rtrim(CorpAction_Type))='''+@CorpAc+''' '
				End
			Select @sql=@sql+ '
			) as kk
			Order by Date Desc'

			Insert Into #TbCorpAc(Seriesid,Remarks)Exec(@sql)

			Update #MainTab Set ScripName=rtrim(ltrim(ScripName))+isnull('['+ISINNumber+']','') +' '+ Remarks From #TbCorpAc Where Seriesid=Productid

			If @CorpAc<>'ALL'
			Begin
				Delete From #MainTab Where Productid not in (Select Seriesid From #TbCorpAc)
			End

		End
		----------------Corporate Action End
		
		--------Update SegmentName 
		Update 	#MainTab Set SegmentName=CASE 
											  WHEN EXCH_SEGMENTID='CM' AND EXCH_EXCHID='EXN0000002' THEN 'NSE-CM'
											  WHEN EXCH_SEGMENTID='CM' AND EXCH_EXCHID='EXB0000001' THEN 'BSE-CM'
											  WHEN EXCH_SEGMENTID='CM' AND EXCH_EXCHID='EXC0000001' THEN 'CSE-CM'
											  WHEN EXCH_SEGMENTID='FO' AND EXCH_EXCHID='EXN0000002' THEN 'NSE-FO'
											  WHEN EXCH_SEGMENTID='FO' AND EXCH_EXCHID='EXB0000001' THEN 'BSE-FO'
											  WHEN EXCH_SEGMENTID='COMM' AND EXCH_EXCHID='EXM0000001' THEN 'MCX-COMM'
											  WHEN EXCH_SEGMENTID='COMM' AND EXCH_EXCHID='EXI0000001' THEN 'ICEX-COMM'
											  WHEN EXCH_SEGMENTID='COMM' AND EXCH_EXCHID='EXN0000004' THEN 'NCDEX-COMM'
											  WHEN EXCH_SEGMENTID='COMM' AND EXCH_EXCHID='EXN0000005' THEN 'NMCE-COMM'
											  WHEN EXCH_SEGMENTID='COMM' AND EXCH_EXCHID='EXD0000001' THEN 'DGCX-COMM'

											  WHEN EXCH_SEGMENTID='CDX' AND EXCH_EXCHID='EXM0000002' THEN 'MCXSX-CDX'
											  WHEN EXCH_SEGMENTID='CDX' AND EXCH_EXCHID='EXU0000001' THEN 'USE-CDX'
											  WHEN EXCH_SEGMENTID='CDX' AND EXCH_EXCHID='EXB0000001' THEN 'BSE-CDX'
											  WHEN EXCH_SEGMENTID='CDX' AND EXCH_EXCHID='EXN0000002' THEN 'NSE-CDX'

											  WHEN EXCH_SEGMENTID='SPOT' AND EXCH_EXCHID='EXN0000006' THEN 'NSEL-SPOT'
											  ELSE NULL END		
		FROM TBL_MASTER_COMPANYEXCHANGE WHERE SegmentId=EXCH_INTERNALID
		and SegmentId is not null
							
		---------Account Name Fetch
		Update #MainTab Set OwnAcname=DPAccounts_ShortName
		From Master_DPAccounts
		Where DPAccounts_ID=OwnAc and DPAccounts_CompanyID=@CompanyID and OwnAc is not null

		----------Update ClientName
		Update #MainTab Set CliName=CName,Code=Ucc,Grpname=Grpname1,GrpId=Groupid1,GrpEmail=GrpEmail1,Tabname=CName
		From #TABCLIENT  Where ClientId=CLIENTID1 and CLIENTID1 is not null

		--------------AccountName Insert
		Insert Into #MainTab(OwnAc,OwnAcname,Code,Tabname,MainOrder)
		Select Distinct OwnAc,OwnAcname,'Test','Account Name : '+OwnAcname,1 From #MainTab Where MainOrder=3 

		--------------ScripName Insert
		Insert Into #MainTab(OwnAc,OwnAcname,MainOrder,Tabname,ScripName,Productid,ISINNumber,Code)
		Select Distinct OwnAc,OwnAcname,2,'**  '+ScripName,
		ScripName,Productid,ISINNumber,'Test'
		From #MainTab Where MainOrder=3 

		-----------Sum Record Insert For Scrip
		Insert Into #MainTab(OwnAc,OwnAcname,MainOrder,Tabname,ScripName,Productid,ISINNumber,Quantity,ValueBeforeHaicut,ValueAfterHaicut)
		Select OwnAc,OwnAcname,4,'Total:',ScripName,Productid,ISINNumber,Sum(isnull(Quantity,0)),
		Sum(Isnull(ValueBeforeHaicut,0)),Sum(Isnull(ValueAfterHaicut,0))
		From #MainTab Where MainOrder=3  Group By OwnAc,OwnAcname,ScripName,Productid,ISINNumber

		-----------Insert Blank Row
		Insert Into #MainTab(OwnAc,OwnAcname,Code,Tabname,MainOrder,ScripName)
		Select Distinct OwnAc,OwnAcname,null,null,5,'ZZZ' From #MainTab Where MainOrder=3

		-----------Sum Record Insert For Account
		Insert Into #MainTab(OwnAc,OwnAcname,MainOrder,Tabname,ScripName,Productid,ISINNumber,Quantity,ValueBeforeHaicut,ValueAfterHaicut)
		Select OwnAc,OwnAcname,6,'Account Total:','ZZZ','ZZZ','ZZZ',Sum(isnull(Quantity,0)),
		Sum(Isnull(ValueBeforeHaicut,0)),Sum(Isnull(ValueAfterHaicut,0))
		From #MainTab Where MainOrder=3  Group By OwnAc,OwnAcname
		
		
		-----------Sum Record Insert For Account
		Insert Into #MainTab(OwnAc,OwnAcname,MainOrder,Tabname,ScripName,Productid,ISINNumber,Quantity,ValueBeforeHaicut,ValueAfterHaicut)
		Select 'ZZZ','ZZZ',8,'Grand Total:','ZZZ','ZZZ','ZZZ',Qty,ValueBeforeHaicut,ValueAfterHaicut From
		(
			Select 
			Sum(Isnull(ValueBeforeHaicut,0)) as ValueBeforeHaicut,Sum(Isnull(ValueAfterHaicut,0)) as ValueAfterHaicut,
			Sum(isnull(Quantity,0)) as Qty From #MainTab Where MainOrder=3 
		)as kk Where (Isnull(ValueBeforeHaicut,0)+Isnull(ValueAfterHaicut,0))<>0

		


		-----------All Result Display
		Select Tabname as [Account Name],Code as [Ucc],
		Grpname as [Group/Branch],
		OwnAcname,
		MainOrder,
		CASE WHEN ISNULL(Quantity,0)=0 THEN NULL WHEN Quantity<0 THEN '-'+dbo.fn_FormatNumber(CAST(ABS(Quantity) AS VARCHAR(8000)),'Y') ELSE dbo.fn_FormatNumber(CAST(Quantity AS VARCHAR(8000)),'Y') END AS [Qty],
		CASE WHEN ISNULL(ClosePrice,0)=0 THEN NULL ELSE dbo.fn_FormatNumber(CAST(ClosePrice AS VARCHAR(8000)),'N') END AS [Rate],
		CASE WHEN ISNULL(ValueBeforeHaicut,0)=0 THEN NULL WHEN ValueBeforeHaicut<0 THEN '-'+dbo.fn_FormatNumber(CAST(ABS(ValueBeforeHaicut) AS VARCHAR(8000)),'N') ELSE dbo.fn_FormatNumber(CAST(ValueBeforeHaicut AS VARCHAR(8000)),'N') END AS [Mkt Value],
		CASE WHEN ISNULL(HairCut,0)=0 THEN NULL  ELSE dbo.fn_FormatNumber(CAST(HairCut AS VARCHAR(8000)),'N') END AS [Haircut (%)],
		CASE WHEN ISNULL(ValueAfterHaicut,0)=0 THEN NULL WHEN ValueAfterHaicut<0 THEN '-'+dbo.fn_FormatNumber(CAST(ABS(ValueAfterHaicut) AS VARCHAR(8000)),'N') ELSE dbo.fn_FormatNumber(CAST(ValueAfterHaicut AS VARCHAR(8000)),'N') END AS [Value After Haircut]
		From #MainTab Order By OwnAcname,ScripName,ISINNumber,MainOrder,CliName


		--------CompanyDetails
		Select distinct cmp_panNo as CmpPanNo,cmp_Name as CmpName,
		isnull((Select top 1 phf_countryCode+'-'+phf_areaCode+'-'+phf_phoneNumber from tbl_master_phonefax where  PHF_TYPE='Work' AND phf_cntId=@CompanyID),'')as CmpPh,
		isnull((select Top 1(eml_email) from tbl_master_email where eml_cntid=@CompanyID and eml_type='Official'),'')as CmpEmail,
		isnull((select Top 1(cmp_ServiceTaxNo) from tbl_master_company where cmp_internalid=@CompanyID),'')as CmpServiceTaxNo,
		isnull((select top 1(isnull(add_address1,' ')+' '+
		isnull(add_address2,' ')+' '+isnull(add_address3,' ')) 
		from tbl_master_address,tbl_master_company,tbl_master_city
		where cmp_internalid=add_cntid and cmp_internalid=@CompanyID
		and add_city=city_id and add_cntID=@CompanyID
		AND add_entity='Company' AND add_addressType='Office'),'')as CmpAddress,
		isnull((select top 1 (isnull(city_name,' ')+'-'+ isnull(add_pin,' '))
		from tbl_master_address,tbl_master_company,tbl_master_city
		where cmp_internalid=add_cntid and cmp_internalid=@CompanyID
		and add_city=city_id and add_cntID=@CompanyID
		AND add_entity='Company' AND add_addressType='Office'),'')as Cmpaddress1,
		'Segment : '+(SELECT SUBSTRING((SELECT distinct ','+  T.SegmentName
		FROM #MainTab AS T Where SegmentName is not null  
		FOR XML PATH('')),2,200000))as SegmentName,
		'For A Date : '+Convert(varchar(11),cast(@ForDate as Datetime),106) as Date
		From tbl_master_company,#MainTab 
		Where cmp_internalid=@CompanyID and MainOrder=3
End------------------------------************For DP Account+Scrip+Client End

-----------Drop Table 
Drop Table #TABCLIENT	
Drop Table #TbTransaction
Drop Table #TbTransactionFilter
Drop Table #SettNoType
Drop Table #DematPosition
Drop Table #DematTransaction
Drop Table #DPDetails
Drop Table #MainTab
Drop Table #TbCorpAc
End-------------------------SP End























