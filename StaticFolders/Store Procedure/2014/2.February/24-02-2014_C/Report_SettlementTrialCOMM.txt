
ALTER procedure [dbo].[Report_SettlementTrialCOMM]
@Date varchar(30),
@Segment varchar(10),
@Companyid varchar(15),
@MasterSegment varchar(10),
@Rptview varchar(50)

As
Begin------------------------------SP Begin  
Set Nocount On

	If @MasterSegment IN (18,22)
		BEGIN
			Exec [Report_SettlementTrialCOMM_INMX] @DATE,@Segment,@Companyid,@MasterSegment,@Rptview
		END
	
--Exec [Report_SettlementTrialCOMM] '2014-02-19','23','COR0000002','7','BranchClient'


If not exists(select 'Y' from Trans_ComDailyStat where 
					cast(DATEADD(dd, 0, DATEDIFF(dd, 0,ComDailyStat_DateTime)) as datetime)=
					cast(DATEADD(dd, 0, DATEDIFF(dd, 0,@Date)) as datetime) 
					and ComDailyStat_ExchangeSegmentID=@MasterSegment)

	Begin
			Select 1 as Status--Rates For This Date Does Not Exists
	End

Else
	Begin-----------------------------------If Rates Is Exists Begin
			Select 2 as Status
			
			Declare @SegmentName varchar(10)
			select @SegmentName=exch_segmentId from Tbl_Master_CompanyExchange 
			where exch_internalId=@Segment
			
			---------Table and Variable Declearation Begin
			Create Table #TbComCustomerTrades(Id varchar(30)
			,Clientid varchar(15),Seriesid varchar(20),ExpiryDate Datetime,FoIdentifier varchar(30)
			,TradeCategory varchar(10),CustodianIdentifier varchar(10),MktValue numeric(28,2),Quantity numeric(28,0),Qty numeric(28,2),NetValue numeric(28,2)
			,SrvBrkg numeric(28,6),TotBrkg numeric(28,2),BuySaleFlag varchar(3))

			------------For Update and Insert Data
			 Create Table #TbUpdateInsert(Customerid1 varchar(15),Seriesid1 varchar(20),ExpiryDate1 Datetime,FoIdentifier1 varchar(30)
			,Qty1 numeric(28,0),Value1 numeric(28,2),Flag varchar(3))

			------------All Data Fetch
			Create Table #TbMain(Customerid varchar(15),ClientName varchar(150),Ucc varchar(20),BranchName varchar(200),BranchCode varchar(30)
			,Seriesid varchar(20),ExpiryDate Datetime,FoIdentifier varchar(30),ClientType varchar(3)
			,BuyQty numeric(28,0),BuyValue numeric(28,2),SaleQty numeric(28,0),SaleValue numeric(28,2)
			,ExcAsnQty numeric(28,0)
			,BfQty numeric(28,0),BfPrice  numeric(28,4),BfValue numeric(28,2)
			,CfQty numeric(28,0),CfPrice  numeric(28,4),CfValue numeric(28,2)
			,Mtm numeric(28,2),Prm numeric(28,2),FinSett numeric(28,2),ExcAsn numeric(28,2)
			)

			---------Table and Variable Declearation Begin
			Create Table #TbComExchangeTrades(Id varchar(30),Productid varchar(20),ExpiryDate Datetime,FoIdentifier varchar(30)
			,TradeCategory varchar(10),CustodianFlag varchar(10),MarktValue numeric(28,2),Quantity numeric(28,0),BuySaleFlag varchar(3))

			------------All Data Fetch
			Create Table #TbExchange(Productid varchar(20),ExpiryDate Datetime,FoIdentifier varchar(30)
			,BuyQty numeric(28,0),BuyValue numeric(28,2),SaleQty numeric(28,0),SaleValue numeric(28,2)
			,ExcAsnQty numeric(28,0),BfQty numeric(28,0),BfPrice  numeric(28,4),BfValue numeric(28,2)
			,CfQty numeric(28,0),CfPrice  numeric(28,4),CfValue numeric(28,2)
			,Mtm numeric(28,2),Prm numeric(28,2),FinSett numeric(28,2),ExcAsn numeric(28,2)
			)

			---------For DisPlay Data
			Create Table #TbDisPlayData(Customerid varchar(15),ClientName varchar(150),Ucc varchar(20),BranchName varchar(200),BranchCode varchar(30)
			,Mtm numeric(28,2),Prm numeric(28,2),FinSett numeric(28,2),ExcAsn numeric(28,2)
			,SrvTax numeric(28,2),TranCharge numeric(28,2),StampDuty numeric(28,2),Sebi numeric(28,2),OtherCharge numeric(28,2)
			,NetDr numeric(28,2),NetCr numeric(28,2)
			,StOrder int)


			--------------Charges Cal
			 Create Table #Charges (Temp_Clientsid varchar(15),BRKGCHARGESETUP VARCHAR(30),
			 Temp_BrokerageId varchar(30),Temp_GroupCode varchar(30),
			 Temp_FUTMkt numeric(28,6),Temp_OPTMkt numeric(28,6),
			 Temp_FUTEXPMkt numeric(28,6),Temp_OPTEXCASNMkt numeric(28,6),
			 Temp_FUTQTYMkt numeric(28,6),Temp_OPTQTYMkt numeric(28,6),
			 Temp_FUTEXPQTYMkt numeric(28,6),Temp_OPTEXCASNQTYMkt numeric(28,6),Temp_TranChargeRate1 numeric(8,6),
			 Temp_TranChargeRate2 numeric(8,6),Temp_TranChargeRate3 numeric(8,6),Temp_TranChargeRate4 numeric(8,6),
			 Temp_ServiceTax numeric(8,6),Temp_ServTaxEduCess numeric(8,6),Temp_ServTaxHgrEduCess numeric(8,6),
			 Temp_TotalTrancharge numeric(28,6),Temp_STApplicable varchar(5),
			 Temp_ServiceTaxOnTranCharge numeric(28,6),Temp_EduCessOnTranCharge numeric(28,6),
			 Temp_HgrEduCessOnTranCharge numeric(28,6),Temp_Tranchargemode varchar(15),

			 Temp_State int,CalBasis varchar(50),CLIENTTYPE VARCHAR(50),
			 RateCLFut numeric(28,6),RateCLOpt numeric(28,6),RateCLFS numeric(28,6),
			 CntrSlabMultiple numeric(28,0),MinCntr numeric(28,6),SlabAmount numeric(28,6),
			 MaxCntr numeric(28,6),
			 Temp_FUTStamduty numeric(28,6),Temp_OPTStamduty numeric(28,6),Temp_FSStamduty numeric(28,6),
			 Temp_EXPStamduty numeric(28,6),Temp_TotalStamduty numeric(28,6),
			 OPTBasis VARCHAR(50),Temp_STAMPmode VARCHAR(50),
			
			 Temp_sebifeerate numeric(28,6),Temp_sebifeerateOpt numeric(28,6),Temp_applicabel varchar(20),Temp_sebifee numeric(28,6),TEMP_SEBIMODE VARCHAR(50),Temp_Chargebasis varchar(20),

			 Temp_OtherChargID int,Temp_OtherChargOn varchar(200),Temp_OtherchargesName varchar(100),
		 	 Temp_OtherChargesRate numeric(28,6),Temp_ChargeGroup varchar(100),Temp_OtherChargCode varchar(50),
			 Temp_OTHERServiceTax numeric(8,6),Temp_OTHERServTaxEduCess numeric(8,6),Temp_OTHERServTaxHgrEduCess numeric(8,6),
			 Temp_OtherchargesResult numeric(28,6),Temp_OTHERServiceTaxOnCharge numeric(18,6),
			 Temp_OTHEREduCessOnCharge numeric(18,6),Temp_OTHERHgrEduCessOnCharge numeric(18,6),
			 Temp_OTHERTotalCharge numeric(18,6),STApplicable VARCHAR(50)
			)

			---------Table and Variable Declearation End

			----------Fetch All Data From ComComCustomerTrades
			Insert Into #TbComCustomerTrades(Id,Clientid,Seriesid,ExpiryDate,FoIdentifier,
			TradeCategory,CustodianIdentifier,MktValue,Quantity,NetValue,SrvBrkg,TotBrkg,BuySaleFlag,Qty)
			
			Select Distinct ComCustomerTrades_Id,ComCustomerTrades_CustomerID
			,ComCustomerTrades_ProductSeriesID,Commodity_ExpiryDate,Commodity_Identifier
			,Case When ComCustomerTrades_TradeCategory in ('EXC','ASN','EXP','CA') Then ComCustomerTrades_TradeCategory Else null End 
			,isnull(ComCustomerTrades_CustodianTradeIdentifier,'N')
			,abs(isnull(ComCustomerTrades_MarketValue,0)),(isnull(ComCustomerTrades_UnitPriceQuantity,0)),abs(isnull(ComCustomerTrades_NetValue,0))
			,(isnull(ComCustomerTrades_ServiceTaxOnBrkg,0)+isnull(ComCustomerTrades_EduCessOnBrkg,0)+isnull(ComCustomerTrades_HgrEduCessOnBrkg,0))
			,(isnull(ComCustomerTrades_TotalBrokerage,0))
			,Case When isnull(ComCustomerTrades_UnitPriceQuantity,0)<0 Then '1' Else '2' End
			,(isnull(Commodity_StrikePrice,0)*abs(isnull(ComCustomerTrades_UnitPriceQuantity,0)))
			From Trans_ComCustomerTrades,Master_Commodity
			Where ComCustomerTrades_ProductSeriesID=Commodity_ProductSeriesID and Commodity_ExpiryDate>=@Date
			and Commodity_ExchangeSegmentID=@MasterSegment and ComCustomerTrades_TradeDate=@Date
			and ComCustomerTrades_ExchangeSegment=@Segment and ComCustomerTrades_CompanyID=@Companyid
			AND isnull(ComCustomerTrades_TradeCategory,'KKK') not in ('ARS','ART')	
				
				
			CREATE NONCLUSTERED INDEX [IX_11] ON #TbComCustomerTrades  
			( 
					Clientid ASC,
					Seriesid ASC, 
					ExpiryDate ASC ,
					FoIdentifier ASC 
			)

			-------------DayBuy and DaySale Fetch
			Insert Into #TbMain(Customerid,Seriesid,ExpiryDate,FoIdentifier,BuyQty,BuyValue,SaleQty,SaleValue)
			Select 
			 Case When BuyClientid is null then SaleClientid Else BuyClientid End
			,Case When BuySeriesid is null then SaleSeriesid Else BuySeriesid End
			,Case When BuyExpiryDate is null then SaleExpiryDate Else BuyExpiryDate End
			,Case When BuyFoIdentifier is null then SaleFoIdentifier Else BuyFoIdentifier End
			,BuyQty,BuyValue,SaleQty,SaleValue
			From 
			(Select Clientid as BuyClientid,Seriesid as BuySeriesid
			,ExpiryDate as BuyExpiryDate,FoIdentifier as BuyFoIdentifier
			,abs(Sum(Quantity)) as BuyQty,Sum(NetValue) as BuyValue
			From #TbComCustomerTrades Where BuySaleFlag=1 and isnull(TradeCategory,'EXP')='EXP'
			Group By Clientid,Seriesid,ExpiryDate,FoIdentifier) as TabBuy

			 Full Outer Join

			(Select Clientid as SaleClientid,Seriesid as SaleSeriesid
			,ExpiryDate as SaleExpiryDate,FoIdentifier as SaleFoIdentifier
			,abs(Sum(Quantity)) as SaleQty,Sum(NetValue) as SaleValue
			From #TbComCustomerTrades Where BuySaleFlag=2 and isnull(TradeCategory,'EXP')='EXP'
			Group By Clientid,Seriesid,ExpiryDate,FoIdentifier) as TabSale
			

			on (BuyClientid=SaleClientid and BuySeriesid=SaleSeriesid
				and BuyExpiryDate=SaleExpiryDate and BuyFoIdentifier=SaleFoIdentifier)
		    
		    			
			--select * from #TbMain
			
			-------------Exc and Asn Fetch
			Insert Into #TbUpdateInsert(Customerid1,Seriesid1,ExpiryDate1,FoIdentifier1,Qty1,Value1)
			Select 
			 Case When BuyClientid is null then SaleClientid Else BuyClientid End
			,Case When BuySeriesid is null then SaleSeriesid Else BuySeriesid End
			,Case When BuyExpiryDate is null then SaleExpiryDate Else BuyExpiryDate End
			,Case When BuyFoIdentifier is null then SaleFoIdentifier Else BuyFoIdentifier End
			,(isnull(SaleQty,0)-isnull(BuyQty,0)),(isnull(SaleValue,0)-isnull(BuyValue,0))
			From 
			(Select Clientid as BuyClientid,Seriesid as BuySeriesid
			,ExpiryDate as BuyExpiryDate,FoIdentifier as BuyFoIdentifier
			,abs(Sum(Quantity)) as BuyQty,Sum(NetValue) as BuyValue
			From #TbComCustomerTrades Where BuySaleFlag=1 and isnull(TradeCategory,'EXP') in ('EXC','ASN') and FoIdentifier like 'Opt%'
			Group By Clientid,Seriesid,ExpiryDate,FoIdentifier) as TabBuy

			 Full Outer Join

			(Select Clientid as SaleClientid,Seriesid as SaleSeriesid
			,ExpiryDate as SaleExpiryDate,FoIdentifier as SaleFoIdentifier
			,abs(Sum(Quantity)) as SaleQty,Sum(NetValue) as SaleValue
			From #TbComCustomerTrades Where BuySaleFlag=2 and isnull(TradeCategory,'EXP') in ('EXC','ASN') and FoIdentifier like 'Opt%'
			Group By Clientid,Seriesid,ExpiryDate,FoIdentifier) as TabSale

			on (BuyClientid=SaleClientid and BuySeriesid=SaleSeriesid
				and BuyExpiryDate=SaleExpiryDate and BuyFoIdentifier=SaleFoIdentifier)

			------Main Tab Update
			Update #TbMain Set ExcAsnQty=Qty1,ExcAsn=Value1
			From #TbUpdateInsert Where 
			Customerid=Customerid1 and Seriesid=Seriesid1 and ExpiryDate=ExpiryDate1 and FoIdentifier=FoIdentifier1 
			
			Update #TbUpdateInsert Set Flag='Y' From #TbMain Where 
			Customerid=Customerid1 and Seriesid=Seriesid1 and ExpiryDate=ExpiryDate1 and FoIdentifier=FoIdentifier1 

			Insert Into #TbMain(Customerid,Seriesid,ExpiryDate,FoIdentifier,ExcAsnQty,ExcAsn)
			Select Customerid1,Seriesid1,ExpiryDate1,FoIdentifier1,Qty1,Value1
			From #TbUpdateInsert Where Flag is null and isnull(Qty1,0)<>0

			Truncate Table #TbUpdateInsert
			-------------Bf Position Fetch
			Insert Into #TbUpdateInsert(Customerid1,Seriesid1,ExpiryDate1,FoIdentifier1,Qty1)
			Select ComCustomerTrades_CustomerID,ComCustomerTrades_ProductSeriesID
			,Commodity_ExpiryDate,Commodity_Identifier
			,Sum(isnull(ComCustomerTrades_UnitPriceQuantity,0)) as Qty
			From Trans_ComCustomerTrades,Master_Commodity
			Where ComCustomerTrades_ProductSeriesID=Commodity_ProductSeriesID and Commodity_ExpiryDate>=@Date
			and Commodity_ExchangeSegmentID=@MasterSegment and ComCustomerTrades_TradeDate<@Date
			and ComCustomerTrades_ExchangeSegment=@Segment and ComCustomerTrades_CompanyID=@Companyid
			and isnull(ComCustomerTrades_TradeCategory,'KKK') not in ('ARS','ART')
			Group By ComCustomerTrades_CustomerID,ComCustomerTrades_ProductSeriesID,Commodity_ExpiryDate,Commodity_Identifier

			------Main Tab Update
			Update #TbMain Set BfQty=Qty1  From #TbUpdateInsert Where 
			Customerid=Customerid1 and Seriesid=Seriesid1 and ExpiryDate=ExpiryDate1 and FoIdentifier=FoIdentifier1 
			
			Update #TbUpdateInsert Set Flag='Y' From #TbMain Where 
			Customerid=Customerid1 and Seriesid=Seriesid1 and ExpiryDate=ExpiryDate1 and FoIdentifier=FoIdentifier1 

			Insert Into #TbMain(Customerid,Seriesid,ExpiryDate,FoIdentifier,BfQty)
			Select Customerid1,Seriesid1,ExpiryDate1,FoIdentifier1,Qty1 From #TbUpdateInsert Where Flag is null and isnull(Qty1,0)<>0			

			---------Bf Price Fetch
			Update #TbMain Set BfPrice=ComDailyStat_SettlementPrice,BfValue=ComDailyStat_SettlementPrice*BfQty
			From Trans_ComDailyStat,
									(
										Select ComDailyStat_ProductSeriesID as prdid,Max(ComDailyStat_DateTime) as Date
										From Trans_ComDailyStat,#TbMain
										Where ComDailyStat_ProductSeriesID=Seriesid and ComDailyStat_ExchangeSegmentID=@MasterSegment
										and ComDailyStat_DateTime<@Date and isnull(BfQty,0)<>0
										Group By ComDailyStat_ProductSeriesID
									) as Tbkk

			Where ComDailyStat_ProductSeriesID=Seriesid and ComDailyStat_ProductSeriesID=prdid and prdid=Seriesid
			and ComDailyStat_DateTime=Date and isnull(BfQty,0)<>0

			-----------Fetch Settlement Price
			Update #TbMain Set   CfQty=(isnull(SaleQty,0)-isnull(BuyQty,0)+isnull(ExcAsnQty,0)+isnull(BfQty,0))
								,CfPrice=ComDailyStat_SettlementPrice
								,CfValue=(isnull(SaleQty,0)-isnull(BuyQty,0)+isnull(ExcAsnQty,0)+isnull(BfQty,0))*ComDailyStat_SettlementPrice
			
			From Trans_ComDailyStat Where ComDailyStat_ProductSeriesID=Seriesid AND ComDailyStat_DateTime=@Date
			and (isnull(SaleQty,0)-isnull(BuyQty,0)+isnull(ExcAsnQty,0)+isnull(BfQty,0))<>0

			---------Mtm and Prm 
			UPDATE #TbMain SET Prm=isnull(SaleValue,0.0)-isnull(BuyValue,0.0) Where FoIdentifier like 'Opt%'
			UPDATE #TbMain SET Mtm= Case When
									   ExpiryDate<>cast(@Date as datetime) then isnull(SaleValue,0.0)-isnull(BuyValue,0.0)
																				+isnull(BfValue,0.0)-isnull(CfValue,0.0)
									Else Null End,
							FinSett=Case When
										   ExpiryDate=cast(@Date as datetime) then isnull(SaleValue,0.0)-isnull(BuyValue,0.0)
																				   +isnull(BfValue,0.0)-isnull(CfValue,0.0)
									Else Null End
			Where FoIdentifier like 'Fut%'

			------------Update BranchName and Client Name
			Update #TbMain Set  ClientName=(isnull(rtrim(cnt_firstName),'') +''+isnull(rtrim(cnt_middleName),'')+' '+isnull(rtrim(cnt_lastName),''))
							   ,Ucc=isnull(rtrim(cnt_UCC),'')
							   ,BranchName=isnull(rtrim(branch_description),''),BranchCode=isnull(rtrim(branch_code),'')
							   ,ClientType=Left(isnull(cnt_clienttype,'Retail'),1)
			From tbl_master_contact,tbl_master_branch
			Where cnt_internalid=Customerid and branch_id=cnt_branchid 

			---------All DisPlay Data Fetch
			Insert Into #TbDisPlayData(Customerid,ClientName,Ucc,BranchName,BranchCode,Mtm,Prm,FinSett,ExcAsn,StOrder)
			Select Customerid,ClientName,Ucc,BranchName,BranchCode,Sum(isnull(Mtm,0)) as Mtm,Sum(isnull(Prm,0)) as Prm
			,Sum(isnull(FinSett,0)) as FinSett,Sum(isnull(ExcAsn,0)) as ExcAsn
			,Case When ClientType='P' Then 8 Else 7 End
			From #TbMain
			Group By Customerid,ClientName,Ucc,BranchName,BranchCode,ClientType
				
			--------------*******Charges Cal*******--------------
			
			-------******Start CTT Charge****------------------------					
			if(@SegmentName='COMM')
				Begin
						Create Table #TempCTT_Detail(Ctt_CustomerID varchar(10),ctt_ProductSeriesID int,ctt_Mode varchar(10))
						Declare @CTT_Sql varchar(max)
						Set @Ctt_Sql= 'Select Cttax_CustomerID,Cttax_ProductSeriesID,Cttax_Mode from Trans_Cttax 
										Where Cttax_SegmentID='''+@Segment+'''
									and Cttax_CompanyID='''+@Companyid+''' and Cttax_CTTDate='''+@Date+'''
									and Cttax_Type=''PROV''
									and Cttax_CustomerID in (Select Clientid From #TbComCustomerTrades)'
						Insert into #TempCTT_Detail
						Exec (@CTT_Sql)			
					    
						Alter Table #TbComCustomerTrades Add tbclient_CTTMode Char(1)
						Update #TbComCustomerTrades Set tbclient_CTTMode=ctt_Mode 
						From #TempCTT_Detail Where Clientid=Ctt_CustomerID and Seriesid=ctt_ProductSeriesID
									
						Create Table #Get_CtMode(AutoID int identity(1,1),CtMode_ClientID Varchar(50),CTMode Char(2))
						
						Insert into #Get_CtMode
						Select ChargeGroupMembers_CustomerID,ChargeBasis from 			
						(select ChargeGroupMembers_CustomerID,ChargeGroupMembers_GroupCode 
						from Trans_ChargeGroupMembers,#TbComCustomerTrades
						where ChargeGroupMembers_CustomerID=Clientid and ChargeGroupMembers_SegmentID=@segment
							and tbclient_CTTMode is null
						) as T1			
						Left Outer Join			
						(Select (Select BrokerageMain_CustomerID From Config_BrokerageMain 
								 Where BrokerageMain_ID=ChargeSetup_MainID) ClientID,
								 Case
									When ChargeSetup_ChargeBasis=1 Then 'I'
									When ChargeSetup_ChargeBasis=2 Then 'E'
									When ChargeSetup_ChargeBasis=3 Then 'N'
								 End as ChargeBasis
						 from Config_ChargeSetUp 
						 Where ChargeSetup_MainID in (Select Distinct BrokerageMain_ID 
													   from Config_BrokerageMain 
													   Where BrokerageMain_CustomerID in (select ChargeGroupMembers_GroupCode 
																						   from Trans_ChargeGroupMembers,#TbComCustomerTrades
																						   where ChargeGroupMembers_CustomerID=ClientID 
																								 and ChargeGroupMembers_SegmentID=@segment
																								 and tbclient_CTTMode is null) 
																and BrokerageMain_SegmentID=@segment
																and (@date Between BrokerageMain_FromDate and IsNull(BrokerageMain_UntilDate,'2099-12-31')))
							and ChargeSetUp_ChargeType='CT') as T2
						On ChargeGroupMembers_GroupCode=ClientID

						Update #TbComCustomerTrades Set tbclient_CTTMode=isnull(CTMode,tbclient_CTTMode) 
						From #Get_CtMode Where clientid=CtMode_ClientID
						
						Drop Table #Get_CtMode 
					    
						----------------------------------------------------------------------------------------------------
				
						----Update tbclient CttMode='E' For Products Those have CTT='N' (Calculation Purpose)-----------------
						update #TbComCustomerTrades Set tbclient_CTTMode='E'
						From Master_Products Where Products_ID=Seriesid and Products_CTT='N'
						and tbclient_CTTMode is null
			--select * From #TbComCustomerTrades			

						Alter Table #TbMain Add CTTAX numeric(28,4)	 
						--SELECT DISTINCT CUSTOMERID,* FROM #TbMain 		
						------------------------FETCH CTT TAX[for not proclient]----------------------- 
						select @CTT_Sql='update #TbMain set CTTAX=ctt 
										 from
												(select sum(isnull(Cttax_TotalCtt,0)) as ctt,Cttax_CustomerID as CTTAXCUSTID
												 from Trans_Cttax 
												 where Cttax_Type=''Prov''
													  and Cttax_CustomerID IN (SELECT DISTINCT CUSTOMERID FROM #TbMain where CUSTOMERID<>''ProClient'')			
													  and Cttax_CTTDate='''+@Date+''' 
													  and Cttax_SegmentID='+char(39)+@Segment+char(39)+'
													  and Cttax_CompanyID='''+@Companyid+'''	
												 group by Cttax_CustomerID) as kk
										WHERE customerid=CTTAXCUSTID'
										
										print '1--'
										print @CTT_Sql
						exec(@CTT_Sql)							

				--		----------------FETCH CTT Round[for not proclient] -----------------------
						
						select @CTT_Sql='update #TbMain set CTTAX=isnull(CTTAX,0)+CttaxSummary_RoundOffAmount 
										 from 
												(select sum(cast(isnull(CttaxSummary_RoundOffAmount,0.0) as numeric(28,6))) as CttaxSummary_RoundOffAmount,
														CttaxSummary_CustomerID AS CTTAXCUSTID
												 from Trans_CttaxSummary 
												 where CttaxSummary_Type=''Prov'' 
														and CttaxSummary_CustomerID IN (SELECT DISTINCT CUSTOMERID FROM #TbMain where CUSTOMERID<>''ProClient'')
														and CttaxSummary_CTTDate='''+@date+''' 
														and CttaxSummary_SegmentID='''+@segment+''' 
														and CttaxSummary_CompanyID='''+@companyid+'''
												 GROUP BY CttaxSummary_CustomerID) as CTTTAXTAB
										WHERE customerid=CTTAXCUSTID'
										print '2--'
										print @CTT_Sql
						exec(@CTT_Sql)
						
				--		------------------------FETCH CTT TAX[for proclient]-----------------------			
						select @CTT_Sql='update #TbMain set CTTAX=ctt  
										 from
												(select sum(isnull(Cttax_TotalCtt,0))as ctt 
													from Trans_Cttax 
													where Cttax_Type=''Prov''
														  and Cttax_CustomerID IN (SELECT DISTINCT Customerid FROM #TbMain where ClientType like ''P%'') 
														  and Cttax_CTTDate='''+@date+''' 
														  and Cttax_SegmentID='+char(39)+@segment+char(39)+'
														  and Cttax_CompanyID='''+@companyid+''') as jj
										where  ClientType like ''P%''
										'
										print '3--'
										print @CTT_Sql
						exec(@CTT_Sql)
--select * from #TbMain
				--		----------------FETCH CTT Round[for proclient] -----------------------
						
						select @CTT_Sql='update #TbMain set CTTAX=isnull(CTTAX,0)+CttaxSummary_RoundOffAmount 
										 from 
											   (select sum(cast(isnull(CttaxSummary_RoundOffAmount,0.0) as numeric(28,6))) as CttaxSummary_RoundOffAmount
												 from Trans_CttaxSummary 
												 where CttaxSummary_Type=''Prov''
														and CttaxSummary_CustomerID IN (SELECT DISTINCT Customerid FROM #TbMain where ClientType like ''P%'')
														and CttaxSummary_CTTDate='''+@date+''' 
														and CttaxSummary_SegmentID='''+@segment+''' 
														and CttaxSummary_CompanyID='''+@companyid+''') as CTTTAXTAB
										WHERE ClientType like ''P%''
										'
										print '4--'
										print @CTT_Sql
						exec(@CTT_Sql)
									
				End
			-------******End CTT Charge******----------------------	
					
			 Insert into #Charges (Temp_Clientsid,Temp_BrokerageId)
			 Select Distinct Clientid,BrokerageMain_ID  
			 From Trans_ChargeGroupMembers,Config_BrokerageMain,#TbComCustomerTrades
			 Where ChargeGroupMembers_GroupCode=BrokerageMain_CustomerID 
			 AND cast(@Date as datetime) between cast(CONVERT(VARCHAR(11),BrokerageMain_FromDate,106) as datetime) 
			 AND cast(CONVERT(VARCHAR(11),isnull(BrokerageMain_UntilDate,'2100-01-01 00:00:00.000'),106) as datetime)
			 AND BrokerageMain_SegmentID=@Segment AND BrokerageMain_CompanyID=@Companyid 
			 AND Clientid=ChargeGroupMembers_CustomerID
			 AND cast(@Date as datetime) between cast(CONVERT(VARCHAR(11),ChargeGroupMembers_FromDate,106) as datetime)
			 AND cast(CONVERT(VARCHAR(11),isnull(ChargeGroupMembers_UntilDate,'2100-01-01 00:00:00.000'),106) as datetime)
			 AND ChargeGroupMembers_SegmentID=@Segment AND ChargeGroupMembers_CompanyID=@Companyid

			DECLARE @TRANCHARGES Varchar(5),@STAMPCHARGES Varchar(5),@SEBICHARGES Varchar(5),@OTHERCHARGES Varchar(5)
			SELECT @TRANCHARGES='N'
			SELECT @TRANCHARGES='Y' FROM Config_TranCharge WHERE TranCharge_COMPANYID=@Companyid AND TranCharge_EXCHANGESEGMENTID=@Segment AND cast(@Date as datetime) BETWEEN TranCharge_DATEFROM AND isnull(TranCharge_DATETO,'2100-01-01 00:00:00.000')
			SELECT @STAMPCHARGES='N'
			SELECT @STAMPCHARGES='Y' FROM Config_StampDuty WHERE StampDuty_COMPANYID=@Companyid AND StampDuty_EXCHANGESEGMENTID=@Segment AND cast(@Date as datetime) BETWEEN StampDuty_DATEFROM AND isnull(StampDuty_DATETO,'2100-01-01 00:00:00.000') 
			SELECT @SEBICHARGES='N'
			SELECT @SEBICHARGES='Y' FROM Config_sebifee WHERE sebifee_COMPANYID=@Companyid AND sebifee_EXCHANGESEGMENTID=@Segment AND cast(@Date as datetime) BETWEEN sebifee_DATEFROM AND isnull(sebifee_DATETO,'2100-01-01 00:00:00.000') and sebifee_Applicablefor not in('None','NA') 
			Select @OTHERCHARGES='N'
			Select @OTHERCHARGES='Y' From Trans_OtherChargeMember Where cast(@Date as datetime) BETWEEN OtherChargeMember_DateFrom AND isnull(OtherChargeMember_DateTo,'2100-01-01 00:00:00.000')  and OtherChargeMember_SegmentID=@Segment and OtherChargeMember_CompanyID=@Companyid
			------------------***********Charges Begin**********-----------------------------------
			IF((@TRANCHARGES='Y') OR (@STAMPCHARGES='Y') OR (@SEBICHARGES='Y'))
			BEGIN

				
				 ----------'FUTCOM','FUTCUR'------
				 Update #Charges Set Temp_FUTMkt=Mkt,Temp_FUTQTYMkt=Qty From
				(Select Sum(abs(isnull(MktValue,0.0))) as Mkt,Sum(ISNULL(Qty,0)) AS Qty,Clientid
				 From #TbComCustomerTrades Where TradeCategory  is null and FOIdentifier LIKE 'FUT%'
				 Group By Clientid) as tb
				 Where Temp_Clientsid =Clientid

				 ----------'OPTCOM','OPTCUR'------
				Update #Charges Set Temp_OPTMkt=Mkt,Temp_OPTQTYMkt=Qty From
				(Select Sum(abs(isnull(MktValue,0.0))) as Mkt,Sum(ISNULL(Qty,0)) AS Qty,Clientid
				 From #TbComCustomerTrades Where TradeCategory  is null and FOIdentifier LIKE 'OPT%'
				 Group By Clientid) as tb
				 Where Clientid=Temp_Clientsid 
	           
				 ----------FUT(EXP)------
				 Update #Charges Set Temp_FUTEXPMkt=Mkt,Temp_FUTEXPQTYMkt=Qty From
				(Select Sum(abs(isnull(MktValue,0.0))) as Mkt,Sum(ISNULL(Qty,0)) AS Qty,Clientid
				 From #TbComCustomerTrades Where isnull(TradeCategory,'KKK')='EXP'
				 and SUBSTRING(FOIdentifier,1,3)='FUT'
				 Group By Clientid) as tb
				 Where Clientid=Temp_Clientsid 

				 ----------OPT(EXC,ASN)------
				 Update #Charges Set Temp_OPTEXCASNMkt=Mkt,Temp_OPTEXCASNQTYMkt=Qty From
				 (Select Sum(abs(isnull(MktValue,0.0))) as Mkt,Sum(ISNULL(Qty,0)) AS Qty,Clientid
				 From #TbComCustomerTrades Where isnull(TradeCategory,'KKK')  in('EXC','ASN')
				  and SUBSTRING(FOIdentifier,1,3)='OPT'
				 Group By Clientid) as tb
				 Where Clientid=Temp_Clientsid 

				

				IF @TRANCHARGES='Y'
				BEGIN

						-----------Rate Fetch
						update #Charges SET
						Temp_TranChargeRate1=CASE WHEN @MasterSegment='14' THEN TranCharge_Rate1 ELSE TranCharge_RateFut END ,
						Temp_TranChargeRate2=TranCharge_RateOpt,
						Temp_TranChargeRate3=TranCharge_RateFutExp,
						Temp_TranChargeRate4=TranCharge_RateOptFS,
						Temp_STApplicable =TranCharge_STApplicable,
						Temp_GroupCode=ChargeSetup_ChargeGroup,
						Temp_Tranchargemode=CASE WHEN ChargeSetup_ChargeBasis='2' THEN 'E'
												 WHEN ChargeSetup_ChargeBasis='1' THEN 'I'
												 ELSE NULL END
						from Config_TranCharge,Config_ChargeSetup
						WHERE ChargeSetup_ChargeType='TX'
						AND ChargeSetup_MainID=Temp_BrokerageId
						AND TranCharge_ChargeGroupID=ChargeSetup_ChargeGroup
						AND cast(@Date as datetime) between cast(CONVERT(VARCHAR(11),TranCharge_DateFrom,106) as datetime) 
						AND cast(CONVERT(VARCHAR(11),isnull(TranCharge_DateTo,'2100-01-01 00:00:00.000'),106) as datetime)
						AND TranCharge_ExchangeSegmentID=@Segment AND TranCharge_CompanyID=@Companyid	

						-------SrvTax Fetch
						update #Charges set	Temp_ServiceTax=ServTax_Rate,
											Temp_ServTaxEduCess = ServTax_EduCess,
											Temp_ServTaxHgrEduCess =ServTax_HgrEduCess
						FROM Config_ServTax
						WHERE ServTax_ChargeGroupID=Temp_GroupCode AND Temp_STApplicable='YES' and Temp_Tranchargemode='E'
						AND cast(@Date as datetime) between cast(CONVERT(VARCHAR(11),ServTax_DateFrom,106) as datetime)
						AND cast(CONVERT(VARCHAR(11),isnull(ServTax_DateTo,'2100-01-01 00:00:00.000'),106) as datetime)
						AND ServTax_ExchangeSegmentID=@Segment AND ServTax_CompanyID=@Companyid

						----------------Calculate Transaction Charge FOR FUTSTK------------------
						update #Charges set Temp_TotalTrancharge=
						 round((isnull(Temp_FUTMkt,0.0)*isnull(Temp_TranChargeRate1,0)/100)+
						(isnull(Temp_OPTMkt,0.0)*isnull(Temp_TranChargeRate2,0)/100)+
						(isnull(Temp_FUTEXPMkt,0.0)*isnull(Temp_TranChargeRate3,0)/100)+
						(isnull(Temp_OPTEXCASNMkt,0.0)*isnull(Temp_TranChargeRate4,0)/100),2)
						WHERE Temp_Tranchargemode='E'
						
						--For Brokers this will be negative
						Update #Charges set Temp_TotalTrancharge=Temp_TotalTrancharge*-1 where left(Temp_Clientsid,2)='BO'
						
						-----------------Calculate Service Tax Of Transaction charge----
						update #Charges set Temp_ServiceTaxOnTranCharge=round(((Temp_Totaltrancharge*Temp_ServiceTax)/100),2)
						WHERE Temp_STApplicable='Yes' AND Temp_Tranchargemode='E'

						update #Charges set Temp_EduCessOnTranCharge=round(((Temp_ServiceTaxOnTranCharge*Temp_ServTaxEduCess)/100),2),
											Temp_HgrEduCessOnTranCharge=round(((Temp_ServiceTaxOnTranCharge*Temp_ServTaxHgrEduCess)/100),2) 
						WHERE Temp_STApplicable='Yes' AND Temp_Tranchargemode='E'

						Update #TbDisPlayData Set TranCharge=		 Temp_TotalTrancharge,
												  SrvTax=			 ISNULL(Temp_ServiceTaxOnTranCharge,0)+
																	 ISNULL(Temp_EduCessOnTranCharge,0)+
																	 ISNULL(Temp_HgrEduCessOnTranCharge,0)
						From #Charges Where CustomerID=Temp_Clientsid 

				END
				-------CALCULATION FOR STAMP DUTY
				IF @STAMPCHARGES='Y'
				BEGIN
						IF EXISTS(SELECT 'Y' FROM Config_StampDuty WHERE StampDuty_COMPANYID=@Companyid AND StampDuty_ApplicableState<>0 AND StampDuty_EXCHANGESEGMENTID=@Segment AND cast(@Date as datetime) BETWEEN StampDuty_DATEFROM AND isnull(StampDuty_DATETO,'2100-01-01 00:00:00.000')) 
						BEGIN
																			 
							UPDATE #Charges SET Temp_State=isnull(add_state,0)
							FROM tbl_master_address
							WHERE add_cntID=Temp_Clientsid AND add_entity in ('Customer/Client','Broker') AND 
							add_addressType=(select top 1 add_addressType from 
												(select add_addressType,
												case when rtrim(ltrim(add_addressType))='Registered' then 1
												when rtrim(ltrim(add_addressType))='Correspondence' then 2
												when rtrim(ltrim(add_addressType))='Residence' then 3
												else 4 end as addreorder
												from tbl_master_address where 
												add_cntID=Temp_Clientsid
												and add_entity in ('Customer/Client','Broker')) tb
											order by addreorder)
						END
						UPDATE #Charges SET Temp_State=isnull(Temp_State,0)

						update #Charges set 
						CLIENTTYPE=ISNULL(CNT_CLIENTTYPE,'Retail'), CalBasis=StampDuty_CalBasis, RateCLFut=StampDuty_RateCLFut,
						RateCLOpt=StampDuty_RateCLOpt, RateCLFS=StampDuty_RateCLFS, CntrSlabMultiple=StampDuty_CntrSlabMultiple,
						SlabAmount=StampDuty_SlabAmount, MinCntr=StampDuty_MinCntr, MaxCntr=StampDuty_MaxCntr, OPTBasis=StampDuty_OPTBasis,
						Temp_STAMPmode=CASE WHEN ChargeSetup_ChargeBasis='2' THEN 'E'
											WHEN ChargeSetup_ChargeBasis='1' THEN 'I'
											ELSE NULL END
						from Config_StampDuty,Config_ChargeSetup,TBL_MASTER_CONTACT
						WHERE ChargeSetup_ChargeType='SD' 
						AND CNT_INTERNALID=Temp_Clientsid
						AND StampDuty_ApplicableState=isnull(Temp_State,0)
						AND ChargeSetup_MainID=Temp_BrokerageId
						AND StampDuty_ChargeGroupID=ChargeSetup_ChargeGroup
						AND cast(@Date as datetime) between cast(CONVERT(VARCHAR(11),StampDuty_DateFrom,106) as datetime) 
						AND cast(CONVERT(VARCHAR(11),isnull(StampDuty_DateTo,'2100-01-01 00:00:00.000'),106) as datetime)
						AND StampDuty_ExchangeSegmentID=@Segment
						AND StampDuty_CompanyID=@Companyid

						update #Charges set  
						CLIENTTYPE=ISNULL(CNT_CLIENTTYPE,'Retail'), CalBasis=StampDuty_CalBasis, RateCLFut=StampDuty_RateCLFut,
						RateCLOpt=StampDuty_RateCLOpt, RateCLFS=StampDuty_RateCLFS, CntrSlabMultiple=StampDuty_CntrSlabMultiple,
						SlabAmount=StampDuty_SlabAmount, MinCntr=StampDuty_MinCntr, MaxCntr=StampDuty_MaxCntr, OPTBasis=StampDuty_OPTBasis,
						Temp_STAMPmode=CASE WHEN ChargeSetup_ChargeBasis='2' THEN 'E'
											WHEN ChargeSetup_ChargeBasis='1' THEN 'I'
											ELSE NULL END
						from Config_StampDuty,Config_ChargeSetup,TBL_MASTER_CONTACT
						WHERE ChargeSetup_ChargeType='SD' 
						AND CNT_INTERNALID=Temp_Clientsid AND StampDuty_ApplicableState=0 AND RateCLFut IS NULL
						AND ChargeSetup_MainID=Temp_BrokerageId
						AND StampDuty_ChargeGroupID=ChargeSetup_ChargeGroup
						AND cast(@Date as datetime) between cast(CONVERT(VARCHAR(11),StampDuty_DateFrom,106) as datetime) 
						AND cast(CONVERT(VARCHAR(11),isnull(StampDuty_DateTo,'2100-01-01 00:00:00.000'),106) as datetime)
						AND StampDuty_ExchangeSegmentID=@Segment
						AND StampDuty_CompanyID=@Companyid

						update #Charges set 
						Temp_FUTStamduty =round((((ISNULL(Temp_FUTMkt,0))*RateCLFut) /100),2),
						Temp_EXPStamduty=round((((ISNULL(Temp_FUTEXPMkt,0))*RateCLFS ) /100),2)
						
						update #Charges set
						Temp_OPTStamduty  =round((((ISNULL(Temp_OPTMkt,0))*RateCLOpt)  /100),2),
						Temp_FSStamduty  =round((((ISNULL(Temp_OPTEXCASNMkt,0))*RateCLFS ) /100),2)
						where CLIENTTYPE<>'Pro Trading'  and CalBasis='Market Turnover' AND OPTBasis='Premium' AND Temp_STAMPmode='E'

						update #Charges set 
						Temp_OPTStamduty  =round((((ISNULL(Temp_OPTQTYMkt,0))*RateCLOpt ) /100),2),
						Temp_FSStamduty  =round((((ISNULL(Temp_OPTEXCASNQTYMkt,0) )*RateCLFS ) /100),2)
						where CLIENTTYPE<>'Pro Trading'  and CalBasis='Market Turnover' AND OPTBasis='Strike'  AND Temp_STAMPmode='E'

						update #Charges set 
						Temp_OPTStamduty  =round((((ISNULL(Temp_OPTMkt,0)+ISNULL(Temp_OPTQTYMkt,0))*RateCLOpt ) /100),2),
						Temp_FSStamduty  =round((((ISNULL(Temp_OPTEXCASNMkt,0)+ISNULL(Temp_OPTEXCASNQTYMkt,0))*RateCLFS)  /100),2)
						Where CLIENTTYPE<>'Pro Trading'  and CalBasis='Market Turnover' AND OPTBasis='Premium And Strike'  AND Temp_STAMPmode='E'

						Update #Charges set Temp_TotalStamduty=(ISNULL(Temp_FUTStamduty,0)+ISNULL(Temp_OPTStamduty,0)+ISNULL(Temp_FSStamduty,0)+ISNULL(Temp_EXPStamduty,0))
						Where CalBasis='Market Turnover'  AND Temp_STAMPmode='E'
						
						Update #Charges set Temp_TotalStamduty=(ISNULL(Temp_FUTQTYMkt,0)+ISNULL(Temp_FUTMkt,0)+
																ISNULL(Temp_OPTQTYMkt,0) +ISNULL(Temp_OPTMkt,0) +
																ISNULL(Temp_OPTEXCASNQTYMkt,0)+ISNULL(Temp_OPTEXCASNMkt,0)+
																ISNULL(Temp_FUTEXPQTYMkt,0)+ISNULL(Temp_FUTEXPMkt,0) )
						Where CalBasis='Contract Value' AND OPTBasis='Premium And Strike'  AND Temp_STAMPmode='E'

						Update #Charges set Temp_TotalStamduty=(ISNULL(Temp_FUTQTYMkt,0)+
																ISNULL(Temp_OPTQTYMkt,0)+
																ISNULL(Temp_OPTEXCASNQTYMkt,0)+
																ISNULL(Temp_FUTEXPQTYMkt,0) )
						Where CalBasis='Contract Value' AND OPTBasis='Strike'  AND Temp_STAMPmode='E'

						Update #Charges set Temp_TotalStamduty=case when MinCntr>[dbo].[fn_NSECMChargesRoundOffFORNETAMOUNT]
																(3,((Temp_TotalStamduty*SlabAmount)/CntrSlabMultiple)) and MinCntr<>0 then MinCntr

																when MaxCntr<[dbo].[fn_NSECMChargesRoundOffFORNETAMOUNT]
																(3,((Temp_TotalStamduty*SlabAmount)/CntrSlabMultiple))  and MaxCntr<>0 then MaxCntr 

																else [dbo].[fn_NSECMChargesRoundOffFORNETAMOUNT]
																(3,((Temp_TotalStamduty*SlabAmount)/CntrSlabMultiple)) end

					    Where CLIENTTYPE<>'Pro Trading'  and CalBasis='Contract Value'  AND Temp_STAMPmode='E'

						--For Brokers this will be negative
						Update #Charges set Temp_TotalStamduty=Temp_TotalStamduty*-1 where left(Temp_Clientsid,2)='BO'
						

						Update #TbDisPlayData Set StampDuty=Temp_TotalStamduty From #Charges Where CustomerID=Temp_Clientsid
			
				END
				---------------CALCULATE SEBI FEE
				IF @SEBICHARGES='Y'
				BEGIN
							Update #Charges Set Temp_sebifeerate=sebifee_rate,
												Temp_sebifeerateOpt=SebiFee_RateOPT,
												Temp_applicabel=sebifee_Applicablefor,
												Temp_Chargebasis=ChargeSetup_ChargeBasis

							From config_sebifee,Config_ChargeSetup
							Where ChargeSetup_ChargeType='SF' and sebifee_Applicablefor not in('None','NA')
							and ChargeSetup_MainID=Temp_BrokerageId and sebifee_ChargeGroupID=ChargeSetup_ChargeGroup
							and cast(@Date as datetime) between cast(CONVERT(VARCHAR(11),sebifee_DateFrom,106) as datetime)
							and cast(CONVERT(VARCHAR(11),isnull(sebifee_DateTo,'2100-01-01 00:00:00.000'),106) as datetime)
							and sebifee_ExchangeSegmentID=@Segment and sebifee_CompanyID=@Companyid

							
							update #Charges set Temp_sebifee=round((   ((
															(isnull(Temp_FUTMkt,0.0)*(Temp_sebifeerate) /100)+
															(isnull(Temp_OPTMkt,0.0)*(Temp_sebifeerateOpt) /100)
															))),2)
							WHERE Temp_Chargebasis='2'

						--For Brokers this will be negative
						Update #Charges set Temp_sebifee=Temp_sebifee*-1 where left(Temp_Clientsid,2)='BO'
						
					
							Update #TbDisPlayData Set Sebi=Temp_sebifee From #Charges Where CustomerID=Temp_Clientsid 
				END
				----------------OtherCharge
				If @OTHERCHARGES='Y'
				Begin
							update #Charges set Temp_OtherChargCode=OtherChargeMember_OtherChargeCode
							from Trans_OtherChargeMember
							where cast(@Date as datetime) between 
							cast(CONVERT(VARCHAR(11),OtherChargeMember_DateFrom,106) as datetime) 
							AND cast(CONVERT(VARCHAR(11),isnull(OtherChargeMember_DateTo,'2100-01-01 00:00:00.000'),106) as datetime)
							AND OtherChargeMember_SegmentID=@Segment
							AND OtherChargeMember_CompanyID=@Companyid
							AND OtherChargeMember_CustomerID=Temp_Clientsid

							update #Charges set  Temp_OtherChargID=OtherCharges_ID,
							Temp_OtherChargOn=OtherCharges_ChargeOn,
							Temp_OtherchargesName=OtherCharges_Name+'['+OtherCharges_Code+']' from
							Master_OtherCharges where
							OtherCharges_Code=Temp_OtherChargCode

							 update #Charges set  Temp_OtherChargesRate=OtherCharge_Rate,
												  Temp_ChargeGroup=OtherCharge_ChargeGroupID,
												  STApplicable=OtherCharge_STApplicable

							 from Config_OtherChargeRates
							 where OtherCharge_MasterID=Temp_OtherChargID
							 and cast(@Date as datetime) between 
							 cast(CONVERT(VARCHAR(11),OtherCharge_ApplicableFrom,106) as datetime) 
							 and cast(CONVERT(VARCHAR(11),isnull(OtherCharge_ApplicableUntil,'2100-01-01 00:00:00.000'),106) as datetime)
							 and OtherCharge_ExchangeSegmentID=@Segment
							 and OtherCharge_CompanyID=@Companyid
									
							 update #Charges set	        Temp_OTHERServiceTax=ServTax_Rate,Temp_OTHERServTaxEduCess = ServTax_EduCess,  
															Temp_OTHERServTaxHgrEduCess =ServTax_HgrEduCess from Config_ServTax
															where ServTax_ChargeGroupID=Temp_ChargeGroup And STApplicable='Yes'
															and cast(@Date as datetime) between cast(CONVERT(VARCHAR(11),ServTax_DateFrom,106) as datetime)
															and cast(CONVERT(VARCHAR(11),isnull(ServTax_DateTo,'2100-01-01 00:00:00.000'),106) as datetime)
															and ServTax_ExchangeSegmentID=@Segment
															and ServTax_CompanyID=@Companyid

						   update #Charges set Temp_OtherchargesResult=
														round((((ISNULL(Temp_FUTMkt,0)+ISNULL(Temp_OPTMkt,0))*Temp_OtherChargesRate) /100),2)
						   where Temp_OtherChargOn='Turnover'

						--For Brokers this will be negative
						Update #Charges set Temp_OtherchargesResult=Temp_OtherchargesResult*-1 where left(Temp_Clientsid,2)='BO'
						

						update #Charges set Temp_OTHERServiceTaxOnCharge=
													round((Temp_OtherchargesResult*isnull(Temp_OTHERServiceTax,0) /100),2)
						where Temp_OtherChargOn='Turnover'
										 
						update #Charges set Temp_OTHEREduCessOnCharge=round((Temp_OTHERServiceTaxOnCharge*isnull(Temp_OTHERServTaxEduCess,0) /100),2),
												 Temp_OTHERHgrEduCessOnCharge=round((Temp_OTHERServiceTaxOnCharge*isnull(Temp_OTHERServTaxHgrEduCess,0) /100),2)
						where Temp_OtherChargOn='Turnover'

						   
						   Update #TbDisPlayData Set OtherCharge=	 Temp_OtherchargesResult,
													 SrvTax=SrvTax + ISNULL(Temp_OTHERServiceTaxOnCharge,0)+
																	 ISNULL(Temp_OTHEREduCessOnCharge,0)+
																	 ISNULL(Temp_OTHERHgrEduCessOnCharge,0)
							From #Charges Where CustomerID=Temp_Clientsid 

				End
				
			End
		
			------------------***********Charges End**********-----------------------------------
			------------BRKG FETCH
			Update #Charges Set BRKGCHARGESETUP=ChargeSetup_ChargeBasis From Config_ChargeSetup 
			Where ChargeSetup_MainID=Temp_BrokerageId and  ChargeSetup_ChargeType='ST'

			Update #TbDisPlayData Set SrvTax=(isnull(SrvTax,0)+isnull(SrBrkg,0)) From
			(Select Sum(isnull(SrvBrkg,0)) as SrBrkg,Clientid From  #TbComCustomerTrades
			 Where Clientid in (Select Distinct Temp_Clientsid From #Charges Where BRKGCHARGESETUP=2) Group By Clientid
			) as Tbk
			Where CustomerID=Clientid
	
	----------************Start CTT Add in Final Table ****************--------------		
			if(@SegmentName='COMM')
				Begin
						ALTER TABLE #TbDisPlayData Add CTT_Tax numeric(28,2)
						Update #TbDisPlayData set CTT_Tax=CTTAX from #TbMain Where #TbDisPlayData.Customerid=#TbMain.Customerid

						--Update #TbDisPlayData Set CTT_Tax=null where Customerid in(Select Clientid from #TbComCustomerTrades 
						--															Where tbclient_CTTMode='I')
						Update #TbDisPlayData set NetCr=ISNULL(NetCr,0.0)--+ISNULL(CTT_Tax,0.0)
			--select * from #TbDisPlayData

						-------------------******Start Ctt Payable To Exchange********----------------------------
						declare @SQLSELECTSUM varchar(max),@SQLSELECTRound nvarchar(max),@SQLSELECTcttax nvarchar(max),
						@selectcttatxround numeric(28,6),@selectcttatx numeric(28,6)
						select @SQLSELECTSUM='',@selectcttatxround=0.0,@selectcttatx =0.0,@SQLSELECTcttax=''

						select @SQLSELECTRound='select @selectcttatxround=sum(cast(isnull(CttaxSummary_RoundOffAmount,0.0) as numeric(28,6))) 
												from Trans_CttaxSummary 
												where cttaxSummary_Type=''Exch''
													and CttaxSummary_CTTDate=cast('''+@Date+''' as datetime)
													and CttaxSummary_SegmentID='''+@Segment+'''
													and CttaxSummary_CompanyID='''+@Companyid+''''

						exec sp_executeSQL @SQLSELECTRound,N'@selectcttatxround numeric(28,6) OUTPUT',@selectcttatxround=@selectcttatxround OUTPUT

						select @SQLSELECTcttax='select @selectcttatx=(sum(isnull(Cttax_TotalCtt,0.0))) 
												from Trans_Cttax 
												where Cttax_Type=''Exch''
													and Cttax_CTTDate=cast('''+@Date+''' as datetime)
													and Cttax_SegmentID='''+@Segment+'''
													and Cttax_CompanyID='''+@Companyid+''''


						exec sp_executeSQL @SQLSELECTcttax,N'@selectcttatx numeric(28,6) OUTPUT',@selectcttatx=@selectcttatx OUTPUT
						
									
						Declare @NetTotal_InclusiveCtTax Numeric(18,4)
						Select @NetTotal_InclusiveCtTax=sum(isnull(CTTAX,0.0)) from #TbMain 
						where Customerid in(Select Clientid from #TbComCustomerTrades Where tbclient_CTTMode='I')	
						
						
						
				End
	----------------******End Ctt Payable To Exchange********----------------------------
							
--Select * From #TbDisPlayData	
      		----------------Client Net Fetch
			if(@SegmentName='COMM')
				Begin
			
						Insert Into #TbDisPlayData(BranchName,CustomerID,ClientName,Mtm,Prm,FinSett,ExcAsn,OtherCharge,TranCharge,StampDuty,Sebi,CTT_Tax,SrvTax,StOrder)
						Select 'ZZZZZZZ','ZZZZZZ',Case When @Rptview='Branch' Then 'Branch Net :' Else 'Client Net :' End,
						Sum(isnull(Mtm,0)),Sum(isnull(Prm ,0)),Sum(isnull(FinSett ,0)),Sum(isnull(ExcAsn ,0)),Sum(isnull(OtherCharge ,0)),
						Sum(isnull(TranCharge,0)),Sum(isnull(StampDuty,0)),Sum(isnull(Sebi,0)),sum(isnull(CTT_Tax,0.0)),Sum(isnull(SrvTax,0)),15
						From #TbDisPlayData Where StOrder=7
					
						Declare @Total_CtTax Numeric(18,4)
						Select @Total_CtTax=sum(isnull(CTT_Tax,0.0)) from #TbDisPlayData where StOrder in(15,8)
						--select * from #TbDisPlayData
						--select @Total_CtTax
						--select isnull(@selectcttatx,0.0),isnull(@selectcttatxround,0.0),isnull(@Total_CtTax,0.0)			
				End
			Else
				Begin
						Insert Into #TbDisPlayData(BranchName,CustomerID,ClientName,Mtm,Prm,FinSett,ExcAsn,OtherCharge,TranCharge,StampDuty,Sebi,SrvTax,StOrder)
						Select 'ZZZZZZZ','ZZZZZZ',Case When @Rptview='Branch' Then 'Branch Net :' Else 'Client Net :' End,
						Sum(isnull(Mtm,0)),Sum(isnull(Prm ,0)),Sum(isnull(FinSett ,0)),Sum(isnull(ExcAsn ,0)),Sum(isnull(OtherCharge ,0)),
						Sum(isnull(TranCharge,0)),Sum(isnull(StampDuty,0)),Sum(isnull(Sebi,0)),Sum(isnull(SrvTax,0)),15
						From #TbDisPlayData Where StOrder=7
				End	
				--select * From #TbDisPlayData
			-----------------Pro Client Check
			Insert Into #TbDisPlayData(BranchName,CustomerID,ClientName,Mtm,Prm,FinSett,ExcAsn,OtherCharge,StOrder,ctt_tax)
			Select 'ZZZZZZZZ','Pro','Pro Account Obligation :',
			Sum(isnull(Mtm,0)),Sum(isnull(Prm ,0)),Sum(isnull(FinSett ,0)),Sum(isnull(ExcAsn ,0)),Sum(isnull(OtherCharge ,0)),16,Sum(isnull(ctt_tax ,0))
			From #TbDisPlayData Where StOrder=8 
			
			Delete From #TbDisPlayData Where StOrder=8 			
			--select * From #TbDisPlayData
			--------------------------------------**********Exchange Obligation Begin******************---------------------
			Insert Into #TbComExchangeTrades(Id,Productid,ExpiryDate,FoIdentifier,TradeCategory,CustodianFlag,MarktValue,Quantity,BuySaleFlag)
			
			Select Distinct ComExchangeTrades_ID,ComExchangeTrades_ProductSeriesID,Commodity_ExpiryDate,Commodity_Identifier
			,Case When ComExchangeTrades_TradeCategory in ('EXC','ASN','EXP','CA') Then ComExchangeTrades_TradeCategory Else null End 
			,isnull(ComExchangeTrades_CustodialFlag,'N')
			,abs(isnull(ComExchangeTrades_MarketValue,0)),abs(isnull(ComExchangeTrades_UnitPriceQuantity,0)),ComExchangeTrades_BuySellFlag
			From Trans_ComExchangeTrades,Master_Commodity
			Where ComExchangeTrades_ProductSeriesID=Commodity_ProductSeriesID and Commodity_ExpiryDate>=@Date
			and Commodity_ExchangeSegmentID=@MasterSegment and ComExchangeTrades_TradeDate=@Date
			and ComExchangeTrades_Segment=@Segment and ComExchangeTrades_CompanyID=@Companyid
			AND isnull(ComExchangeTrades_TradeCategory,'KKK') not in ('ARS','ART','CFS','CFT')
			and left(ISNULL(ComExchangeTrades_CounterPartyID,'EX'),2) NOT IN ('CL','BO')

			CREATE NONCLUSTERED INDEX [IX_12] ON #TbComExchangeTrades  
			( 
					Productid ASC, 
					ExpiryDate ASC ,
					FoIdentifier ASC 
			)


			-------------DayBuy and DaySale Fetch
			Insert Into #TbExchange(Productid,ExpiryDate,FoIdentifier,BuyQty,BuyValue,SaleQty,SaleValue)
			Select 
			Case When BuySeriesid is null then SaleSeriesid Else BuySeriesid End
			,Case When BuyExpiryDate is null then SaleExpiryDate Else BuyExpiryDate End
			,Case When BuyFoIdentifier is null then SaleFoIdentifier Else BuyFoIdentifier End
			,BuyQty,BuyValue,SaleQty,SaleValue
			From 
			(Select Productid as BuySeriesid
			,ExpiryDate as BuyExpiryDate,FoIdentifier as BuyFoIdentifier
			,Sum(Quantity) as BuyQty,Sum(MarktValue) as BuyValue
			 From #TbComExchangeTrades Where BuySaleFlag=1 and isnull(TradeCategory,'EXP')='EXP'
			 Group By Productid,ExpiryDate,FoIdentifier) as TabBuy

			 Full Outer Join

			(Select Productid as SaleSeriesid
			,ExpiryDate as SaleExpiryDate,FoIdentifier as SaleFoIdentifier
			,Sum(Quantity) as SaleQty,Sum(MarktValue) as SaleValue
			 From #TbComExchangeTrades Where BuySaleFlag=2 and isnull(TradeCategory,'EXP')='EXP'
			 Group By Productid,ExpiryDate,FoIdentifier) as TabSale

			on (BuySeriesid=SaleSeriesid and BuyExpiryDate=SaleExpiryDate and BuyFoIdentifier=SaleFoIdentifier)

			Truncate Table #TbUpdateInsert
			-------------Exc and Asn Fetch
			Insert Into #TbUpdateInsert(Seriesid1,ExpiryDate1,FoIdentifier1,Qty1,Value1)
			Select 
			 Case When BuySeriesid is null then SaleSeriesid Else BuySeriesid End
			,Case When BuyExpiryDate is null then SaleExpiryDate Else BuyExpiryDate End
			,Case When BuyFoIdentifier is null then SaleFoIdentifier Else BuyFoIdentifier End
			,(isnull(SaleQty,0)-isnull(BuyQty,0)),(isnull(SaleValue,0)-isnull(BuyValue,0))
			From 
			(Select Productid as BuySeriesid
			,ExpiryDate as BuyExpiryDate,FoIdentifier as BuyFoIdentifier
			,Sum(Quantity) as BuyQty,Sum(MarktValue) as BuyValue
			From #TbComExchangeTrades Where BuySaleFlag=1 and isnull(TradeCategory,'EXP') in ('EXC','ASN') and FoIdentifier like 'Opt%'
			Group By Productid,ExpiryDate,FoIdentifier) as TabBuy

			 Full Outer Join

			(Select Productid as SaleSeriesid
			,ExpiryDate as SaleExpiryDate,FoIdentifier as SaleFoIdentifier
			,Sum(Quantity) as SaleQty,Sum(MarktValue) as SaleValue
			From #TbComExchangeTrades Where BuySaleFlag=2 and isnull(TradeCategory,'EXP') in ('EXC','ASN') and FoIdentifier like 'Opt%'
			Group By Productid,ExpiryDate,FoIdentifier) as TabSale

			on (BuySeriesid=SaleSeriesid and BuyExpiryDate=SaleExpiryDate and BuyFoIdentifier=SaleFoIdentifier)

			------Main Tab Update
			Update #TbExchange Set ExcAsnQty=Qty1,ExcAsn=Value1
			From #TbUpdateInsert Where Productid=Seriesid1 and ExpiryDate=ExpiryDate1 and FoIdentifier=FoIdentifier1 
			
			Update #TbUpdateInsert Set Flag='Y' From #TbExchange Where Productid=Seriesid1 and ExpiryDate=ExpiryDate1 and FoIdentifier=FoIdentifier1 

			Insert Into #TbExchange(Productid,ExpiryDate,FoIdentifier,ExcAsnQty,ExcAsn)
			Select Seriesid1,ExpiryDate1,FoIdentifier1,Qty1,Value1
			From #TbUpdateInsert Where Flag is null and isnull(Qty1,0)<>0

			Truncate Table #TbUpdateInsert
			-------------Bf Position Fetch
			Insert Into #TbUpdateInsert(Seriesid1,ExpiryDate1,FoIdentifier1,Qty1)
			Select Seriesid,ExpiryDate,Identifier,Sum(isnull(Qty,0))
			From 
			(
				Select ComExchangeTrades_ProductSeriesID as Seriesid,Commodity_ExpiryDate as ExpiryDate,Commodity_Identifier as Identifier
				,Case When ComExchangeTrades_BuySellFlag=1 Then Sum((-1)*(isnull(ComExchangeTrades_UnitPriceQuantity,0)))	
					  Else Sum(isnull(ComExchangeTrades_UnitPriceQuantity,0)) 
				End as Qty
				From Trans_ComExchangeTrades,Master_Commodity
				Where  ComExchangeTrades_ProductSeriesID=Commodity_ProductSeriesID and Commodity_ExpiryDate>=@Date
				and  ComExchangeTrades_TradeDate<@Date and Commodity_ExchangeSegmentID=@MasterSegment
				and ComExchangeTrades_Segment=@Segment and ComExchangeTrades_CompanyID=@Companyid
				AND isnull(ComExchangeTrades_TradeCategory,'KKK') not in ('ARS','ART','CFS','CFT')
				and left(ISNULL(ComExchangeTrades_CounterPartyID,'EX'),2) NOT IN ('CL','BO')
				Group By ComExchangeTrades_BuySellFlag,Commodity_ExpiryDate,Commodity_Identifier,ComExchangeTrades_ProductSeriesID
			) as kk
			Group By Seriesid,ExpiryDate,Identifier

			------Main Tab Update
			Update #TbExchange Set BfQty=Qty1  From #TbUpdateInsert Where 
			Productid=Seriesid1 and ExpiryDate=ExpiryDate1 and FoIdentifier=FoIdentifier1 
			
			Update #TbUpdateInsert Set Flag='Y' From #TbExchange Where 
			Productid=Seriesid1 and ExpiryDate=ExpiryDate1 and FoIdentifier=FoIdentifier1 

			Insert Into #TbExchange(Productid,ExpiryDate,FoIdentifier,BfQty)
			Select Seriesid1,ExpiryDate1,FoIdentifier1,Qty1 From #TbUpdateInsert Where Flag is null and isnull(Qty1,0)<>0			

			---------Bf Price Fetch
			Update #TbExchange Set BfPrice=BPrice,BfValue=BPrice*BfQty From
			(Select Seriesid,BfPrice as BPrice,BfQty as BQty From #TbMain Where isnull(BfPrice,0)<>0) as kk
			Where Seriesid=Productid 

			Update #TbExchange Set BfPrice=ComDailyStat_SettlementPrice,BfValue=ComDailyStat_SettlementPrice*BfQty
			From Trans_ComDailyStat,
									(
										Select ComDailyStat_ProductSeriesID as prdid,Max(ComDailyStat_DateTime) as Date
										From Trans_ComDailyStat,#TbExchange
										Where ComDailyStat_ProductSeriesID=Productid and ComDailyStat_ExchangeSegmentID=@MasterSegment
										and ComDailyStat_DateTime<@Date and isnull(BfQty,0)<>0 and isnull(BfPrice,0)<>0
										Group By ComDailyStat_ProductSeriesID
									) as Tbkk

			Where ComDailyStat_ProductSeriesID=Productid and ComDailyStat_ProductSeriesID=prdid and prdid=Productid
			and ComDailyStat_DateTime=Date and isnull(BfQty,0)<>0 and isnull(BfPrice,0)<>0

			-----------Fetch Settlement Price
			Update #TbExchange Set 
								 CfQty=(isnull(SaleQty,0)-isnull(BuyQty,0)+isnull(ExcAsnQty,0)+isnull(BfQty,0))
								,CfPrice=ComDailyStat_SettlementPrice
								,CfValue=(isnull(SaleQty,0)-isnull(BuyQty,0)+isnull(ExcAsnQty,0)+isnull(BfQty,0))*ComDailyStat_SettlementPrice
			
			From Trans_ComDailyStat Where ComDailyStat_ProductSeriesID=Productid AND ComDailyStat_DateTime=@Date
			and (isnull(SaleQty,0)-isnull(BuyQty,0)+isnull(ExcAsnQty,0)+isnull(BfQty,0))<>0

			---------Mtm and Prm 
			UPDATE #TbExchange SET Prm=isnull(SaleValue,0.0)-isnull(BuyValue,0.0) Where FoIdentifier like 'Opt%'
			UPDATE #TbExchange SET Mtm= Case When
									   ExpiryDate<>cast(@Date as datetime) then isnull(SaleValue,0.0)-isnull(BuyValue,0.0)
																				+isnull(BfValue,0.0)-isnull(CfValue,0.0)
									Else Null End,
							FinSett=Case When
										   ExpiryDate=cast(@Date as datetime) then isnull(SaleValue,0.0)-isnull(BuyValue,0.0)
																				   +isnull(BfValue,0.0)-isnull(CfValue,0.0)
									Else Null End
			Where FoIdentifier like 'Fut%'			
			
			--------------------------------------**********Exchange Obligation Begin******************---------------------
			
			Update #TbDisPlayData Set NetDr=Case When (
													  (isnull(Mtm,0)+isnull(Prm,0)+isnull(ExcAsn,0)+isnull(FinSett,0.0))-
													  (isnull(SrvTax,0)+isnull(TranCharge,0)+isnull(StampDuty,0)+isnull(Sebi,0.0)+isnull(OtherCharge,0)+isnull(ctt_tax,0))
													  )<0
												 Then abs(
													 (isnull(Mtm,0)+isnull(Prm,0)+isnull(ExcAsn,0)+isnull(FinSett,0.0))-
													  (isnull(SrvTax,0)+isnull(TranCharge,0)+isnull(StampDuty,0)+isnull(Sebi,0.0)+isnull(OtherCharge,0)+isnull(ctt_tax,0))
													  )
												 Else 0 End
									,NetCr=Case When (
													  (isnull(Mtm,0)+isnull(Prm,0)+isnull(ExcAsn,0)+isnull(FinSett,0.0))-
													  (isnull(SrvTax,0)+isnull(TranCharge,0)+isnull(StampDuty,0)+isnull(Sebi,0.0)+isnull(OtherCharge,0)+isnull(ctt_tax,0))
													  )>0
												 Then abs(
													  (isnull(Mtm,0)+isnull(Prm,0)+isnull(ExcAsn,0)+isnull(FinSett,0.0))-
													  (isnull(SrvTax,0)+isnull(TranCharge,0)+isnull(StampDuty,0)+isnull(Sebi,0.0)+isnull(OtherCharge,0)+isnull(ctt_tax,0))
													  )
												 Else 0 End

			-------------Exchange Obligation
			Insert Into #TbDisPlayData(BranchName,CustomerID,ClientName,NetDr,NetCr,StOrder)
			Select 'ZZZZZZZZZ','ZZZZZZZZZ','Exchange Obligation :'
			,Case When Sum(isnull(Mtm,0)+isnull(Prm,0)+isnull(ExcAsn,0)+isnull(FinSett,0.0))>0
					  Then abs(Sum(isnull(Mtm,0)+isnull(Prm,0)+isnull(ExcAsn,0)+isnull(FinSett,0.0)))
				 Else 0 End
			,Case When Sum(isnull(Mtm,0)+isnull(Prm,0)+isnull(ExcAsn,0)+isnull(FinSett,0.0))<0
					  Then abs(Sum(isnull(Mtm,0)+isnull(Prm,0)+isnull(ExcAsn,0)+isnull(FinSett,0.0)))
				 Else 0 End
			,20
			From #TbExchange
			----------------CTT Payable To Exchange
			if(@SegmentName='COMM')
				Begin
					Insert Into #TbDisPlayData(BranchName,CustomerID,ClientName,NetDr,NetCr,StOrder)
					Select 'ZZZZZZZZZ','ZZZZZZZZZ','CTT Payable To Exchange:',0,abs(isnull(@selectcttatx,0.0)+isnull(@selectcttatxround,0.0)),21			
				End
				
			-------------Brkg Income
			Insert Into #TbDisPlayData(BranchName,CustomerID,ClientName,NetDr,NetCr,StOrder)
			Select 'ZZZZZZZZZZZZZ','ZZZZZZZZZ','Brkg Income :',0,Sum(isnull(TotBrkg,0)),22 From #TbComCustomerTrades
			-------------Transaction Charges
			Union All
			Select 'ZZZZZZZZZZZZZ','ZZZZZZZZZ','Tran. Charges :',0,isnull(TranCharge,0),23 From #TbDisPlayData Where StOrder=15 and isnull(TranCharge,0)<>0
			------------- Stamp Duty
			Union All
			Select 'ZZZZZZZZZZZZZ','ZZZZZZZZZ','Stamp Duty :',0,isnull(StampDuty,0),24 From #TbDisPlayData Where StOrder=15 and isnull(StampDuty,0)<>0
			------------- SEBI Fee 
			Union All
			Select 'ZZZZZZZZZZZZZ','ZZZZZZZZZ','SEBI Fee :',0,isnull(Sebi,0),25 From #TbDisPlayData Where StOrder=15 and isnull(Sebi,0)<>0 
			------------- Other Charge
			Union All
			Select 'ZZZZZZZZZZZZZ','ZZZZZZZZZ','Other Charge :',0,isnull(OtherCharge,0),26 From #TbDisPlayData Where StOrder=15 and isnull(OtherCharge,0)<>0 

			------------- Srv Tax Payable
			Union All
			Select 'ZZZZZZZZZZZZZ','ZZZZZZZZZ','Serv Tax Payable:',0,
			isnull((Select Sum(isnull(SrvBrkg,0)) From #TbComCustomerTrades),0)+
			isnull((Select Sum(ISNULL(Temp_ServiceTaxOnTranCharge,0)+ISNULL(Temp_EduCessOnTranCharge,0)+ISNULL(Temp_HgrEduCessOnTranCharge,0)+
							   ISNULL(Temp_OTHERServiceTaxOnCharge,0)+ISNULL(Temp_OTHEREduCessOnCharge,0)+ISNULL(Temp_OTHERHgrEduCessOnCharge,0)) 
					From #Charges
					)
					,0
				  )
			,27

			------------- Service Tax Unrecoverable:
			Union All
			Select 'ZZZZZZZZZZZZZ','ZZZZZZZZZ','Serv Tax Unrecoverable:',0,
			(Select Sum(isnull(SrvBrkg,0)) as SrBrkg From  #TbComCustomerTrades
			Where Clientid in (Select Distinct Temp_Clientsid From #Charges Where BRKGCHARGESETUP<>2))
			,28
			
			
			
			-----------Round Off Due To Trade Avg.
			declare @Buy numeric(28,6),@Sell numeric(28,6),@diffbrkg numeric(28,6)
			Select @Buy=0.0,@Sell=0.0,@diffbrkg=0.0

			Select @Buy=(buyprov-buyexch) from
			(Select sum(abs(isnull(MarktValue,0))) as buyexch From #TbComExchangeTrades Where
			 BuySaleFlag='1' and CustodianFlag='N') as tbexch,
			(Select sum(abs(isnull(MktValue,0))) as buyprov From #TbComCustomerTrades Where
			 BuySaleFlag='1' AND CustodianIdentifier='N') as tbprov

			 Select @Sell=(Sellexch-Sellprov) from
			(Select sum(abs(isnull(MarktValue,0))) as Sellexch From #TbComExchangeTrades Where
			 BuySaleFlag='2' and CustodianFlag='N') as tbexch,
			(Select sum(abs(isnull(MktValue,0))) as Sellprov From #TbComCustomerTrades Where
			 BuySaleFlag='2' AND CustodianIdentifier='N') as tbprov

			 Select @diffbrkg=abs(sum(isnull(ComCustomerTrades_NetValue,0.0))
										 -sum(isnull(ComCustomerTrades_MarketValue,0.0)))
										-(sum(isnull(ComCustomerTrades_TotalBrokerage,0.0)))
							  From Trans_ComCustomerTrades 
							  Where ComCustomerTrades_TradeDate=@Date
							  and ComCustomerTrades_ExchangeSegment=@Segment 
							  and ComCustomerTrades_CompanyID=@Companyid

			------------- Round-Off (Due To Trade Averaging) :
			Insert Into #TbDisPlayData(BranchName,CustomerID,ClientName,NetDr,NetCr,StOrder)
			Select 'ZZZZZZZZZZZZZ','ZZZZZZZZZ','Round-Off Avg :',
			Case When (isnull(@Buy,0)+isnull(@Sell,0)+isnull(@diffbrkg,0))<0 Then abs(isnull(@Buy,0)+isnull(@Sell,0)+isnull(@diffbrkg,0))
			Else 0 End,
			Case When (isnull(@Buy,0)+isnull(@Sell,0)+isnull(@diffbrkg,0))>0 Then abs(isnull(@Buy,0)+isnull(@Sell,0)+isnull(@diffbrkg,0))
			Else 0 End
			,29

			if(@SegmentName='COMM')
				Begin
					Delete From #TbDisPlayData Where StOrder Between 22 and 29 and (abs(isnull(NetDr,0))+abs(isnull(NetCr,0)))=0
				end
			else
				Begin
					Delete From #TbDisPlayData Where StOrder Between 21 and 29 and (abs(isnull(NetDr,0))+abs(isnull(NetCr,0)))=0
			
				End	
			Delete From #TbDisPlayData Where StOrder=16 and (abs(isnull(NetDr,0))+abs(isnull(NetCr,0)))=0
			---------------Total
			if(@SegmentName='COMM')
				Begin		
					-------------- CTT Tax Diff and UnRealzed-----------
					--select isnull(@selectcttatx,0.0),isnull(@selectcttatxround,0.0),isnull(@Total_CtTax,0.0)
					--select abs(isnull(@selectcttatx,0.0)+isnull(@selectcttatxround,0.0))-isnull(@Total_CtTax,0.0)
					Insert Into #TbDisPlayData(BranchName,CustomerID,ClientName,NetDr,NetCr,StOrder)
					Select 'ZZZZZZZZZZZZZ','ZZZZZZZZZ','CTT Diff:',abs(isnull(@selectcttatx,0.0)+isnull(@selectcttatxround,0.0))-isnull(@Total_CtTax,0.0),null,29
					Union All
					Select 'ZZZZZZZZZZZZZ','ZZZZZZZZZ','CTT - Unrealized:',@NetTotal_InclusiveCtTax,null,30
					--select * from #TbDisPlayData
					------------Total calculation
					--select * from #TbDisPlayData
					Insert Into #TbDisPlayData(BranchName,CustomerID,ClientName,NetDr,NetCr,StOrder)
					Select 'ZZZZZZZZZZZZZ','ZZZZZZZZZ','Total :',(Sum(isnull(NetDr,0))),null,31
					From #TbDisPlayData Where StOrder in (20,16,15) --From Exchange Obligation
					
					Declare @sum_NetCR numeric(28,2) 
					Select @sum_NetCR=Sum(isnull(NetCr,0)) From #TbDisPlayData where StOrder>13
					
					Update #TbDisPlayData set NetCr=@sum_NetCR where StOrder=31
					
					Insert Into #TbDisPlayData(BranchName,CustomerID,ClientName,NetDr,NetCr,StOrder)
					Select 'ZZZZZZZZZZZZZ','ZZZZZZZZZ','Diff (If Any) :'
							,Case When (Sum(isnull(NetCr,0)-isnull(NetDr,0)))<0 
								  Then Abs(Sum(isnull(NetCr,0)-isnull(NetDr,0)))
							Else 0 End
							,Case When (Sum(isnull(NetCr,0)-isnull(NetDr,0)))>0 
								  Then Abs(Sum(isnull(NetCr,0)-isnull(NetDr,0)))
							Else 0 End
							,32
					From #TbDisPlayData Where StOrder=31
			
				end
			else
				Begin
					Insert Into #TbDisPlayData(BranchName,CustomerID,ClientName,NetDr,NetCr,StOrder)
					Select 'ZZZZZZZZZZZZZ','ZZZZZZZZZ','Total :',Sum(isnull(NetDr,0)),Sum(isnull(NetCr,0)),29
					From #TbDisPlayData Where StOrder>13
					
					Union All
					
					Select 'ZZZZZZZZZZZZZ','ZZZZZZZZZ','Diff (If Any) :'
							,Case When Sum(isnull(NetCr,0)-isnull(NetDr,0))<0 
								  Then Abs(Sum(isnull(NetCr,0)-isnull(NetDr,0)))
							Else 0 End
							,Case When Sum(isnull(NetCr,0)-isnull(NetDr,0))>0 
								  Then Abs(Sum(isnull(NetCr,0)-isnull(NetDr,0)))
							Else 0 End
							,30
					From #TbDisPlayData Where StOrder>13
				End

			-------------Delete Column
			If @Rptview='Client'
			Begin
				ALTER TABLE #TbDisPlayData Drop Column BranchName  ; 
				ALTER TABLE #TbDisPlayData Drop Column BranchCode  ; 
				ALTER TABLE #TbDisPlayData Drop Column CustomerID  ; 
				
					---Add Grand Client Total------------
			if(@SegmentName='COMM')
				Begin
					Insert Into #TbDisPlayData(ClientName,Mtm,Prm,FinSett,ExcAsn,OtherCharge,TranCharge,StampDuty,Sebi,CTT_Tax,SrvTax,NetDr,NetCr,StOrder)
					Select 'Grand Client Total:','0','0','0','0','0','0','0','0','0','0'
					,SUM(isnull(NetDr,'0')),SUM(isnull(NetCr,'0')),14
					From #TbDisPlayData Where StOrder=7
				
				end
			else
				Begin
					Insert Into #TbDisPlayData(ClientName,Mtm,Prm,FinSett,ExcAsn,OtherCharge,TranCharge,StampDuty,Sebi,SrvTax,NetDr,NetCr,StOrder)
					Select 'Grand Client Total:','0','0','0','0','0','0','0','0','0'
					,SUM(isnull(NetDr,'0')),SUM(isnull(NetCr,'0')),14
					From #TbDisPlayData Where StOrder=7
				End
			End
			
			If @Rptview='Branch'
			Begin
				ALTER TABLE #TbDisPlayData Drop Column Ucc  ; 
				ALTER TABLE #TbDisPlayData Drop Column CustomerID  ; 

				if(@SegmentName='COMM')
				Begin
					Insert Into #TbDisPlayData(ClientName,BranchCode,Mtm,Prm,FinSett,ExcAsn,OtherCharge,TranCharge,StampDuty,Sebi,CTT_Tax,SrvTax,StOrder)
					Select BranchName,BranchCode,
							Sum(isnull(Mtm,0)),Sum(isnull(Prm ,0)),Sum(isnull(FinSett ,0)),Sum(isnull(ExcAsn ,0)),Sum(isnull(OtherCharge ,0)),
							Sum(isnull(TranCharge,0)),Sum(isnull(StampDuty,0)),Sum(isnull(Sebi,0)),Sum(isnull(CTT_Tax,0)),Sum(isnull(SrvTax,0)),13
					From #TbDisPlayData Where StOrder=7
					Group By BranchName,BranchCode
				end
			else
				Begin
					Insert Into #TbDisPlayData(ClientName,BranchCode,Mtm,Prm,FinSett,ExcAsn,OtherCharge,TranCharge,StampDuty,Sebi,SrvTax,StOrder)
					Select BranchName,BranchCode,
							Sum(isnull(Mtm,0)),Sum(isnull(Prm ,0)),Sum(isnull(FinSett ,0)),Sum(isnull(ExcAsn ,0)),Sum(isnull(OtherCharge ,0)),
							Sum(isnull(TranCharge,0)),Sum(isnull(StampDuty,0)),Sum(isnull(Sebi,0)),Sum(isnull(SrvTax,0)),13
					From #TbDisPlayData Where StOrder=7
					Group By BranchName,BranchCode
				end	
					---Add Grand Client Total------------
			if(@SegmentName='COMM')
				Begin
					Insert Into #TbDisPlayData(ClientName,BranchCode,Mtm,Prm,FinSett,ExcAsn,OtherCharge,TranCharge,StampDuty,Sebi,CTT_Tax,SrvTax,NetDr,NetCr,StOrder)
					Select 'Grand Client Total:',null,'0','0','0','0','0','0','0','0','0','0'
					,SUM(isnull(NetDr,'0')),SUM(isnull(NetCr,'0')),14
					From #TbDisPlayData Where StOrder=7
				end
			else
				Begin
					Insert Into #TbDisPlayData(ClientName,BranchCode,Mtm,Prm,FinSett,ExcAsn,OtherCharge,TranCharge,StampDuty,Sebi,SrvTax,NetDr,NetCr,StOrder)
					Select 'Grand Client Total:',null,'0','0','0','0','0','0','0','0','0'
					,SUM(isnull(NetDr,'0')),SUM(isnull(NetCr,'0')),14
					From #TbDisPlayData Where StOrder=7
				end	
				
				Delete From #TbDisPlayData Where StOrder=7

			End
			If @Rptview='BranchClient'
			Begin
				Insert Into #TbDisPlayData(ClientName,BranchName,BranchCode,Ucc,StOrder)
				Select Distinct 'Branch :'+BranchName +'['+BranchCode+']'
				,BranchName,BranchCode,'Test',6 From #TbDisPlayData Where StOrder=7
				
				if(@SegmentName='COMM')
					Begin
							Insert Into #TbDisPlayData(ClientName,BranchName,BranchCode,Mtm,Prm,FinSett,ExcAsn,
									OtherCharge,TranCharge,StampDuty,Sebi,CTT_Tax,SrvTax,NetDr,NetCr,StOrder)
				
							Select 'Client Total:',BranchName,BranchCode
								   ,'0','0','0','0','0','0','0','0','0','0'
								   ,Sum(isnull(NetDr,0)),Sum(isnull(NetCr,0)),12
							From #TbDisPlayData Where StOrder=7
							Group By BranchName,BranchCode				
							
							Union All	
							
							Select 'Total:',BranchName,BranchCode,
							Sum(isnull(Mtm,0)),Sum(isnull(Prm ,0)),Sum(isnull(FinSett ,0)),Sum(isnull(ExcAsn ,0)),Sum(isnull(OtherCharge ,0)),
							Sum(isnull(TranCharge,0)),Sum(isnull(StampDuty,0)),Sum(isnull(Sebi,0)),Sum(isnull(CTT_Tax,0)),Sum(isnull(SrvTax,0))
							,Case When Sum(isnull(NetCr,0)-isnull(NetDr,0))<0
								  Then abs(Sum(isnull(NetCr,0)-isnull(NetDr,0)))
							 Else 0 End
							,Case When Sum(isnull(NetCr,0)-isnull(NetDr,0))>0
								  Then abs(Sum(isnull(NetCr,0)-isnull(NetDr,0)))
							 Else 0 End,13
							From #TbDisPlayData Where StOrder=7
							Group By BranchName,BranchCode
					End
				else
					Begin
							Insert Into #TbDisPlayData(ClientName,BranchName,BranchCode,Mtm,Prm,FinSett,ExcAsn,
									OtherCharge,TranCharge,StampDuty,Sebi,SrvTax,NetDr,NetCr,StOrder)
				
							Select 'Client Total:',BranchName,BranchCode
								   ,'0','0','0','0','0','0','0','0','0'
								   ,Sum(isnull(NetDr,0)),Sum(isnull(NetCr,0)),12
							From #TbDisPlayData Where StOrder=7
							Group By BranchName,BranchCode				
							
							Union All	
							
							Select 'Total:',BranchName,BranchCode,
							Sum(isnull(Mtm,0)),Sum(isnull(Prm ,0)),Sum(isnull(FinSett ,0)),Sum(isnull(ExcAsn ,0)),Sum(isnull(OtherCharge ,0)),
							Sum(isnull(TranCharge,0)),Sum(isnull(StampDuty,0)),Sum(isnull(Sebi,0)),Sum(isnull(SrvTax,0))
							,Case When Sum(isnull(NetCr,0)-isnull(NetDr,0))<0
								  Then abs(Sum(isnull(NetCr,0)-isnull(NetDr,0)))
							 Else 0 End
							,Case When Sum(isnull(NetCr,0)-isnull(NetDr,0))>0
								  Then abs(Sum(isnull(NetCr,0)-isnull(NetDr,0)))
							 Else 0 End,13
							From #TbDisPlayData Where StOrder=7
							Group By BranchName,BranchCode
					End
						
				---Add Grand Client Total------------
				if(@SegmentName='COMM')
					Begin
							
							Insert Into #TbDisPlayData(BranchName,CustomerID,ClientName,Mtm,Prm,FinSett,ExcAsn,OtherCharge,TranCharge,StampDuty,Sebi,CTT_Tax,SrvTax,NetDr,NetCr,StOrder)
							Select 'ZZZZZZZ','ZZZZZZ','Grand Client Total:','0','0','0','0','0','0','0','0','0','0'
							,SUM(isnull(NetDr,'0')),SUM(isnull(NetCr,'0')),14
							From #TbDisPlayData Where StOrder=12
					End
				Else
					Begin
							Insert Into #TbDisPlayData(BranchName,CustomerID,ClientName,Mtm,Prm,FinSett,ExcAsn,OtherCharge,TranCharge,StampDuty,Sebi,SrvTax,NetDr,NetCr,StOrder)
							Select 'ZZZZZZZ','ZZZZZZ','Grand Client Total:','0','0','0','0','0','0','0','0','0'
							,SUM(isnull(NetDr,'0')),SUM(isnull(NetCr,'0')),14
							From #TbDisPlayData Where StOrder=12
					End	
--Select * From #TbDisPlayData  
			End
				
			Declare @Tran varchar(3),@Stamp varchar(3),@Sebi varchar(3),@OtherCharge varchar(3),@Sql varchar(max)
			Select @Tran='N',@Stamp='N',@Sebi='N',@OtherCharge='N'

			If Not Exists(Select 'Y' From #TbDisPlayData Where StOrder=23)
			Begin
				Select @Tran='Y'
				ALTER TABLE #TbDisPlayData Drop Column TranCharge  ; 
			End
			If Not Exists(Select 'Y' From #TbDisPlayData Where StOrder=24)
			Begin
				Select @Stamp='Y'
				ALTER TABLE #TbDisPlayData Drop Column StampDuty  ; 
			End
			If Not Exists(Select 'Y' From #TbDisPlayData Where StOrder=25)
			Begin
				Select @Sebi='Y'
				ALTER TABLE #TbDisPlayData Drop Column Sebi  ; 
			End
			If Not Exists(Select Sum(ISNULL(OtherCharge,0)) From #TbDisPlayData Where StOrder in (15,16) Having Sum(ISNULL(OtherCharge,0))<>0)
			Begin
				Select @OtherCharge='Y'
				ALTER TABLE #TbDisPlayData Drop Column OtherCharge ; 
			End

							--select * from #TbDisPlayData
				---------------------Select List
				Select @Sql='Select '
							If @Rptview='Client'
							Begin
								Select @Sql=@Sql+' ClientName as [Client Name],Ucc '
							End
							If @Rptview='Branch'
							Begin
								Select @Sql=@Sql+' ClientName as [Branch Name],BranchCode as [Code] '
							End
							If @Rptview='BranchClient'
							Begin
								Select @Sql=@Sql+' ClientName as [Name],Ucc as [Code] '
							End
							Select @Sql=@Sql+'
							 ,CASE WHEN ISNULL(Mtm,0)=0 THEN null
								   WHEN Mtm<0 THEN ''-''+dbo.fn_FormatNumber(CAST(ABS(Mtm) AS VARCHAR(8000)),''N'') 
							 ELSE dbo.fn_FormatNumber(CAST(Mtm  AS VARCHAR(8000)),''N'') END as [Mtm]
							,CASE WHEN ISNULL(Prm,0)=0 THEN null
								   WHEN Prm<0 THEN ''-''+dbo.fn_FormatNumber(CAST(ABS(Prm) AS VARCHAR(8000)),''N'') 
							 ELSE dbo.fn_FormatNumber(CAST(Prm  AS VARCHAR(8000)),''N'') END as [Prm]
							,CASE WHEN ISNULL(FinSett,0)=0 THEN null
								   WHEN FinSett<0 THEN ''-''+dbo.fn_FormatNumber(CAST(ABS(FinSett) AS VARCHAR(8000)),''N'') 
							 ELSE dbo.fn_FormatNumber(CAST(FinSett  AS VARCHAR(8000)),''N'') END as [Fin Sett]
							,CASE WHEN ISNULL(ExcAsn,0)=0 THEN null
								   WHEN ExcAsn<0 THEN ''-''+dbo.fn_FormatNumber(CAST(ABS(ExcAsn) AS VARCHAR(8000)),''N'') 
							 ELSE dbo.fn_FormatNumber(CAST(ExcAsn  AS VARCHAR(8000)),''N'') END as [Exc Asn]'
							
							if(@SegmentName='COMM')
								Begin
									Select @Sql=@Sql+',CASE WHEN ISNULL(CTT_Tax,0)=0 THEN null
															 WHEN CTT_Tax<0 THEN ''-''+dbo.fn_FormatNumber(CAST(ABS(CTT_Tax) AS VARCHAR(8000)),''N'') 
														ELSE dbo.fn_FormatNumber(CAST(CTT_Tax  AS VARCHAR(8000)),''N'') END as [CTT Tax]'
								End
									
							Select @Sql=@Sql+',CASE WHEN ISNULL(SrvTax,0)=0 THEN null
								   WHEN SrvTax<0 THEN ''-''+dbo.fn_FormatNumber(CAST(ABS(SrvTax) AS VARCHAR(8000)),''N'') 
							 ELSE dbo.fn_FormatNumber(CAST(SrvTax  AS VARCHAR(8000)),''N'') END as [Srv Tax]'
							If @Tran='N'
								Begin
									Select @Sql=@Sql+' ,CASE WHEN ISNULL(TranCharge,0)=0 THEN null
															 WHEN TranCharge<0 THEN ''-''+dbo.fn_FormatNumber(CAST(ABS(TranCharge) AS VARCHAR(8000)),''N'') 
															 ELSE dbo.fn_FormatNumber(CAST(TranCharge AS VARCHAR(8000)),''N'') END as [Tran Charge]'
								End
							If @Stamp='N'
								Begin
									Select @Sql=@Sql+' ,CASE WHEN ISNULL(StampDuty,0)=0 THEN null
															 WHEN StampDuty<0 THEN ''-''+dbo.fn_FormatNumber(CAST(ABS(StampDuty) AS VARCHAR(8000)),''N'') 
															 ELSE dbo.fn_FormatNumber(CAST(StampDuty AS VARCHAR(8000)),''N'') END as [Stamp Duty]'
								End
							If @Sebi='N'
								Begin
									Select @Sql=@Sql+' ,CASE WHEN ISNULL(Sebi,0)=0 THEN null
															 WHEN Sebi<0 THEN ''-''+dbo.fn_FormatNumber(CAST(ABS(Sebi) AS VARCHAR(8000)),''N'') 
															 ELSE dbo.fn_FormatNumber(CAST(Sebi AS VARCHAR(8000)),''N'') END as [SebiFee]'
								End
							If @OtherCharge='N'
								Begin
									Select @Sql=@Sql+' ,CASE WHEN ISNULL(OtherCharge,0)=0 THEN null
															 WHEN OtherCharge<0 THEN ''-''+dbo.fn_FormatNumber(CAST(ABS(OtherCharge) AS VARCHAR(8000)),''N'') 
															 ELSE dbo.fn_FormatNumber(CAST(OtherCharge AS VARCHAR(8000)),''N'') END as [Other Charge]'
								End
							if(@SegmentName='COMM')
								Begin
									Select @Sql=@Sql+'
														,CASE	 When StOrder=32 and ISNULL(NetDr,0)=0 Then ''0.00'' WHEN ISNULL(NetDr,0)=0 THEN null
																 WHEN NetDr<0 THEN ''-''+dbo.fn_FormatNumber(CAST(ABS(NetDr) AS VARCHAR(8000)),''N'') 
																 ELSE dbo.fn_FormatNumber(CAST(NetDr AS VARCHAR(8000)),''N'') END as [Net Receivable]
														,CASE	 When StOrder=32 and ISNULL(NetCr,0)=0 Then ''0.00'' WHEN ISNULL(NetCr,0)=0 THEN null
																 WHEN NetCr<0 THEN ''-''+dbo.fn_FormatNumber(CAST(ABS(NetCr) AS VARCHAR(8000)),''N'') 
																 ELSE dbo.fn_FormatNumber(CAST(NetCr AS VARCHAR(8000)),''N'') END as [Net Payable]
												From #TbDisPlayData Order by '
								End
							else
								Begin
									Select @Sql=@Sql+'
														,CASE	 When StOrder=30 and ISNULL(NetDr,0)=0 Then ''0.00'' WHEN ISNULL(NetDr,0)=0 THEN null
																 WHEN NetDr<0 THEN ''-''+dbo.fn_FormatNumber(CAST(ABS(NetDr) AS VARCHAR(8000)),''N'') 
																 ELSE dbo.fn_FormatNumber(CAST(NetDr AS VARCHAR(8000)),''N'') END as [Net Receivable]
														,CASE	 When StOrder=30 and ISNULL(NetCr,0)=0 Then ''0.00'' WHEN ISNULL(NetCr,0)=0 THEN null
																 WHEN NetCr<0 THEN ''-''+dbo.fn_FormatNumber(CAST(ABS(NetCr) AS VARCHAR(8000)),''N'') 
																 ELSE dbo.fn_FormatNumber(CAST(NetCr AS VARCHAR(8000)),''N'') END as [Net Payable]
												From #TbDisPlayData Order by '
								End	
					If @Rptview='Client'
					Begin
						Select @Sql=@Sql+' StOrder, ClientName '
					End
					If @Rptview='Branch'
					Begin
						Select @Sql=@Sql+' StOrder, BranchName '
					End
					If @Rptview='BranchClient'
					Begin
						Select @Sql=@Sql+' BranchName,StOrder,ClientName '
					End
					Exec(@Sql)	

		----------Drop Table 
		Drop Table #TbComCustomerTrades
		Drop Table #TbUpdateInsert
		Drop Table #TbMain
		Drop Table #TbComExchangeTrades
		Drop Table #TbExchange
		Drop Table #TbDisPlayData
		Drop Table #Charges


	End-----------------------------------If Rates Is Exists End

End ------------------------------SP End









