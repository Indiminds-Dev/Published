


ALTER Procedure [dbo].[Report_ContractNoteCustomerTrades]
@Company varchar(15),
@Segment varchar(20),
@BranchHierchy varchar(max),
@Clientid varchar(max),
@GroupId varchar(max),
@GrpType varchar(40),
@SelectionType varchar(5),
@SettNoType varchar(15),
@FromDate varchar(40),
@ToDate varchar(40),
@ContractNo varchar(max),
@FinYear varchar (25),
@dosmode varchar(5)
--exec [Report_ContractNoteCustomerTrades] 'COR0000002',24,'1,129,130,131,133,134,135,137,139,142,143,145,149,150,153,157,161,162,164,166,167,169,170,174,178,180,185,186,188,189,190,191,192,193,196,197,198,199,200,204,211,213,214','ALL~ALL','ALL~ALL','BRANCH','2','2012067N','4/04/2012 12:00:00 AM','4/04/2012 12:00:00 AM','Select','2012-2013 ','B'
--exec [Report_ContractNoteCustomerTrades] 'COR0000002',23,'1','ALL~ALL','ALL~ALL','BRANCH','2','2013001F','2014-03-01','2014-03-28','Select','2013-2014 ','B'
--exec [Report_ContractNoteCustomerTrades] 'COR0000002',24,
--'1,129,130,131,133,134,135,137,139,142,143,145,149,150,153,157,161,162,164,166,167,169,170,
--174,178,180,185,186,188,189,190,191,192,193,196,197,198,199,200,204,211,213,214','ALL~ALL','ALL~ALL',
--'BRANCH','2','2013053N','2013-03-14','2013-03-14','Select','2012-2013 ','B'

AS
Begin----------------------------Sp Begin
Set NoCount On

Declare @SqlSelect varchar(max),@SqlWhere varchar(max),@SegmentName varchar(15),@ExSegmentId varchar(15),@Dsqlupdate varchar(max)

-----------SegmentName Fetch
Select @SegmentName= CASE 
					 WHEN EXCH_EXCHID='EXN0000002' and EXCH_SEGMENTID='CM' THEN 'NSE - CM'
					 WHEN EXCH_EXCHID='EXB0000001' and EXCH_SEGMENTID='CM' THEN 'BSE - CM'
					 WHEN EXCH_EXCHID='EXC0000001' and EXCH_SEGMENTID='CM' THEN 'CSE - CM'
					 WHEN EXCH_EXCHID='EXN0000002' and EXCH_SEGMENTID='FO' THEN 'NSE - FO'
					 WHEN EXCH_EXCHID='EXB0000001' and EXCH_SEGMENTID='FO' THEN 'BSE - FO'
					 ELSE NULL END
	   ,@ExSegmentId=CASE 
					 WHEN EXCH_EXCHID='EXN0000002' and EXCH_SEGMENTID='CM' THEN '1'
					 WHEN EXCH_EXCHID='EXB0000001' and EXCH_SEGMENTID='CM' THEN '4'
					 WHEN EXCH_EXCHID='EXC0000001' and EXCH_SEGMENTID='CM' THEN '15'
					 WHEN EXCH_EXCHID='EXN0000002' and EXCH_SEGMENTID='FO' THEN '2'
					 WHEN EXCH_EXCHID='EXB0000001' and EXCH_SEGMENTID='FO' THEN '5'
					 ELSE NULL END
From TBL_MASTER_COMPANYEXCHANGE WHERE EXCH_INTERNALID=@Segment AND EXCH_COMPID=@Company

---------------------Split Trades SettlNo-----------------
Declare @SettType varchar(2),@SettNo varchar(10)

If @SelectionType='1'
Begin
	Set @SettNo  =substring(@SettNoType,1,7)---------Only Number ---------
	Set @SettType =substring(@SettNoType,8,1)-------Only Character --------
End
---------------------Split Clients and Group-----------------
Declare @Client varchar(max),@ClientType varchar(20),@Group varchar(max),@GroupType varchar(10)

Select @ClientType=dbo.fnSplit(@Clientid,'~', 1)
Select @Client=dbo.fnSplit(@Clientid,'~', 2) 

--Select @GroupType=dbo.fnSplit(@GroupId,'~', 1)
Select @GroupType=dbo.fnSplit(@GroupId,'~', 1)
Select @Group=dbo.fnSplit(@GroupId,'~', 2) 

---------------------Split ContractNo-----------------
Declare @CntrNo varchar(max),@CntrNoType varchar(20)

Select @CntrNoType=dbo.fnSplit(@ContractNo,'~', 1)
Select @CntrNo=dbo.fnSplit(@ContractNo,'~', 2) 

----print @GroupType
----print @Group

-----------------------Table and Variable Declearation Begin
Create Table #TbClient(Client varchar(15),ClientName varchar(200),ClientUcc varchar(20),ClientAddress1 varchar(100),ClientAddress2 varchar(100),
ClientAddress3 varchar(100),ClientPhno varchar(100),ClientEmail varchar(100),ClientMob varchar(100),ClientCity varchar(50),ClientPinCode varchar(30),ClientPan varchar(30),
ClientState varchar(50),ClientCountry varchar(50),
BranchId varchar(20),BranchName varchar(150),BranchCode varchar(30),GrpId varchar(20),GrpName varchar(150),GrpCode varchar(30),
ClientBranchAdd1 varchar(100),ClientBranchAdd2 varchar(100),ClientBranchAdd3 varchar(100),ClientBranchPin varchar(30),ClientBranchPhone varchar(100),
ClientBranchCity varchar(100),ClientBranchCpPhone varchar(100))


-----------------------Table and Variable Declearation End

------------------------Client Selection
IF(@GrpType<>'BRANCH')
Begin
Select @SqlSelect='
Select Clientid,ClientName,Ucc,BranchId,BranchName,BranchCode,ClientBranchAdd1,ClientBranchAdd2,ClientBranchAdd3,ClientBranchPin,ClientBranchPhone,
ClientBranchCity,ClientBranchCpPhone,GroupId,GrpName,GrpCode,ClientPanCard,ClientEmail,ClientMob,
(Select top 1 (isnull(rtrim(ltrim(add_address1)),''''))) as ClientAdd1,
(Select top 1 (isnull(rtrim(ltrim(add_address2)),''''))) as ClientAdd2,
(Select top 1 (isnull(rtrim(ltrim(add_address3)),''''))) as ClientAdd3,
(Select top 1 (isnull(rtrim(ltrim(add_pin)),''''))) as ClientPin,
(Select top 1 isnull(city_name,'''') From tbl_master_city where city_id=add_city) AS ClientCity,
(Select top 1 isnull(state,'''') From tbl_master_state where id=add_state) AS ClientSate,
(Select top 1 isnull(cou_country,'''') From tbl_master_country where cou_id=add_country) AS ClientCountry,
 ClientPh
From
(
			Select Distinct cnt_internalid as Clientid,(isnull(rtrim(cnt_firstName),'+char(39)+''+char(39)+') +'
			+char(39)+' '+char(39)+ '+isnull(rtrim(cnt_middleName),'+char(39)+''+char(39)+')+'
			+char(39)+' '+char(39)+ '+isnull(rtrim(cnt_lastName),'+char(39)+''+char(39)+')) as ClientName,
			rtrim(crg_tcode) as Ucc ,
			branch_id as BranchId,isnull(rtrim(branch_description),'+char(39)+''+char(39)+') as BranchName,isnull(rtrim(branch_code),'+char(39)+''+char(39)+')  as BranchCode,
			rtrim(branch_address1) as ClientBranchAdd1,rtrim(branch_address2) as ClientBranchAdd2,rtrim(branch_address3) as ClientBranchAdd3,
			rtrim(branch_Pin) as ClientBranchPin,rtrim(branch_Phone) as ClientBranchPhone,
			(Select top 1 isnull(city_name,'''') From tbl_master_city where city_id=branch_city) AS ClientBranchCity,rtrim(branch_cpPhone) as ClientBranchCpPhone
			,gpm_id as GroupId,isnull(rtrim(GPM_DESCRIPTION),'+char(39)+''+char(39)+') as GrpName,isnull(rtrim(GPM_CODE),'+char(39)+''+char(39)+')  as GrpCode
			,(Select Top 1 rtrim(crg_number) from tbl_master_contactregistration where crg_cntID=cnt_internalid AND crg_Type=''PanCard'' and crg_exchange='''+@SegmentName+''') as ClientPanCard
			,(select Top 1(eml_email) from tbl_master_email where eml_cntid=cnt_internalid and eml_type=''Official'' and eml_entity=''Customer/Client'' and isnull(eml_status,''Y'')=''Y'' )as ClientEmail 
			,(Select top 1 (phf_phoneNumber) from tbl_master_phonefax where  PHF_TYPE=''Mobile'' and phf_entity=''Customer/Client'' AND phf_cntId=cnt_internalid and isnull(Phf_status,''Y'')=''Y'') as ClientMob
			,(Select top 1 isnull(phf_countryCode +''-'','''')+isnull(phf_areaCode+''-'','''')+isnull(phf_phoneNumber,'''') from tbl_master_phonefax where  PHF_TYPE=''Office'' and phf_entity=''Customer/Client'' AND phf_cntId=cnt_internalid and isnull(Phf_status,''Y'')=''Y'') as ClientPh
			From tbl_master_contact,tbl_master_contactexchange,tbl_master_branch,tbl_master_groupmaster,tbl_trans_group 
			Where cnt_internalid like ''CL%'' and cnt_branchid in ('+@BranchHierchy+') 
			and crg_cntid=cnt_internalid and crg_exchange='''+@SegmentName+'''
			and crg_Company = '''+@Company+'''
			and cnt_branchid=branch_id and cnt_internalid=grp_contactid and grp_groupmaster=gpm_id 
			and grp_grouptype in (select top 1 grp_grouptype from tbl_trans_group where grp_contactid=cnt_internalid) '
			
				if (@dosmode='B')
				Begin
					Select @SqlSelect=@SqlSelect+' and isnull(cnt_ContractDeliveryMode,''B'') in (''B'',''P'')'
				End
				if (@dosmode='E')
				Begin
					Select @SqlSelect=@SqlSelect+' and isnull(cnt_ContractDeliveryMode,''B'')=''E'''
				End
				if (@dosmode='P')
				Begin
					Select @SqlSelect=@SqlSelect+' and isnull(cnt_ContractDeliveryMode,''B'')=''P'''
				End
		IF(@GrpType='BRANCH')
			Begin
				
				If (@GroupType='ALL' or @GroupType='Selected') 
				Begin
					If (@Group<>'ALL')
					Begin
						Select @SqlSelect=@SqlSelect+' and cnt_branchid in ('+@Group+')'
					End
				End
				If @GroupType='AllButSelected'
				Begin
					If (@Group<>'ALL')
					Begin
						Select @SqlSelect=@SqlSelect+' and cnt_branchid not in ('+@Group+')'
					End
				End
			End
		ELSE
			Begin
				Select @SqlSelect=@SqlSelect+' 
				and gpm_type='''+@GrpType+''' AND GRP_GROUPTYPE='''+@GrpType+''''
				If (@GroupType<>'AllButSelected') 
				Begin
					If (@Group<>'ALL~ALL')
					Begin
						Select @SqlSelect=@SqlSelect+' and gpm_id in ('+@Group+')'
					End
				End
				If @GroupType='AllButSelected'
				Begin
					If (@Group<>'ALL')
					Begin
						Select @SqlSelect=@SqlSelect+' and gpm_id not in ('+@Group+')'
					End
				End
			End
		If (@ClientType='ALL' or @ClientType='Selected') 
		Begin
			If (@Client<>'ALL')
			Begin
				Select @SqlSelect=@SqlSelect+' and cnt_internalid in ('+@Client+')'
			End
		End
		If @ClientType='AllButSelected'
		Begin
			If (@Client<>'ALL')
			Begin
				Select @SqlSelect=@SqlSelect+' and cnt_internalid not in ('+@Client+')'
			End
		End
		Select @SqlSelect=@SqlSelect+' 
) as Tb

Left Outer Join
  tbl_master_address
	On(add_cntID=Clientid and add_entity=''Customer/Client'' and isnull(add_status,''Y'')=''Y''
		and	add_addressType=(Select top 1 add_addressType From 
								( Select add_addressType,
									case when rtrim(ltrim(add_addressType))=''Correspondence'' then 1
										 when rtrim(ltrim(add_addressType))=''Registered'' then 2
										 when rtrim(ltrim(add_addressType))=''Residence'' then 3
										 else 4 end as addreorder
									From tbl_master_address Where 
									add_cntID=Clientid  and add_entity=''Customer/Client'' and isnull(add_status,''Y'')=''Y''
								) Tb
							 Order By addreorder
							)
	)'

Insert Into #TbClient(Client,ClientName,ClientUcc,BranchId,BranchName,BranchCode,ClientBranchAdd1,ClientBranchAdd2,ClientBranchAdd3,ClientBranchPin,ClientBranchPhone,
					  ClientBranchCity,ClientBranchCpPhone,GrpId,GrpName,GrpCode,ClientPan,ClientEmail,ClientMob,
					  ClientAddress1,ClientAddress2,ClientAddress3,ClientPinCode,ClientCity,ClientState,ClientCountry,ClientPhno)
EXEC(@SqlSelect)
--print @SqlSelect
End
Else
Begin
Select @SqlSelect='
Select Clientid,ClientName,Ucc,BranchId,BranchName,BranchCode,ClientBranchAdd1,ClientBranchAdd2,ClientBranchAdd3,ClientBranchPin,ClientBranchPhone,
ClientBranchCity,ClientBranchCpPhone,GroupId,GrpName,GrpCode,ClientPanCard,ClientEmail,ClientMob,
(Select top 1 (isnull(rtrim(ltrim(add_address1)),''''))) as ClientAdd1,
(Select top 1 (isnull(rtrim(ltrim(add_address2)),''''))) as ClientAdd2,
(Select top 1 (isnull(rtrim(ltrim(add_address3)),''''))) as ClientAdd3,
(Select top 1 (isnull(rtrim(ltrim(add_pin)),''''))) as ClientPin,
(Select top 1 isnull(city_name,'''') From tbl_master_city where city_id=add_city) AS ClientCity,
(Select top 1 isnull(state,'''') From tbl_master_state where id=add_state) AS ClientSate,
(Select top 1 isnull(cou_country,'''') From tbl_master_country where cou_id=add_country) AS ClientCountry,
 ClientPh
From
(
			Select Distinct cnt_internalid as Clientid,(isnull(rtrim(cnt_firstName),'+char(39)+''+char(39)+') +'
			+char(39)+' '+char(39)+ '+isnull(rtrim(cnt_middleName),'+char(39)+''+char(39)+')+'
			+char(39)+' '+char(39)+ '+isnull(rtrim(cnt_lastName),'+char(39)+''+char(39)+')) as ClientName,
			rtrim(crg_tcode) as Ucc ,
			branch_id as BranchId,isnull(rtrim(branch_description),'+char(39)+''+char(39)+') as BranchName,isnull(rtrim(branch_code),'+char(39)+''+char(39)+')  as BranchCode,
			rtrim(branch_address1) as ClientBranchAdd1,rtrim(branch_address2) as ClientBranchAdd2,rtrim(branch_address3) as ClientBranchAdd3,
			rtrim(branch_Pin) as ClientBranchPin,rtrim(branch_Phone) as ClientBranchPhone,
			(Select top 1 isnull(city_name,'''') From tbl_master_city where city_id=branch_city) AS ClientBranchCity,rtrim(branch_cpPhone) as ClientBranchCpPhone
			--,gpm_id as GroupId,isnull(rtrim(GPM_DESCRIPTION),'+char(39)+''+char(39)+') as GrpName,isnull(rtrim(GPM_CODE),'+char(39)+''+char(39)+')  as GrpCode
			,''0'' as GroupId,''0'' as GrpName,''0'' as GrpCode
			,(Select Top 1 rtrim(crg_number) from tbl_master_contactregistration where crg_cntID=cnt_internalid AND crg_Type=''PanCard'' and crg_exchange='''+@SegmentName+''') as ClientPanCard
			,(select Top 1(eml_email) from tbl_master_email where eml_cntid=cnt_internalid and eml_type=''Official'' and eml_entity=''Customer/Client'' and isnull(eml_status,''Y'')=''Y'' )as ClientEmail
			,(Select top 1 (phf_phoneNumber) from tbl_master_phonefax where  PHF_TYPE=''Mobile'' and phf_entity=''Customer/Client'' AND phf_cntId=cnt_internalid and isnull(Phf_status,''Y'')=''Y'') as ClientMob 
			,(Select top 1 isnull(phf_countryCode +''-'','''')+isnull(phf_areaCode+''-'','''')+isnull(phf_phoneNumber,'''') from tbl_master_phonefax where  PHF_TYPE=''Office'' and phf_entity=''Customer/Client'' AND phf_cntId=cnt_internalid and isnull(Phf_status,''Y'')=''Y'') as ClientPh
			From tbl_master_contact,tbl_master_contactexchange,tbl_master_branch--,tbl_master_groupmaster,tbl_trans_group 
			Where cnt_internalid like ''CL%'' and cnt_branchid in ('+@BranchHierchy+') 
			and crg_cntid=cnt_internalid and crg_exchange='''+@SegmentName+'''
			and crg_Company = '''+@Company+'''
			
			and cnt_branchid=branch_id '
			if (@dosmode='B')
				Begin
					Select @SqlSelect=@SqlSelect+' and isnull(cnt_ContractDeliveryMode,''B'') in (''B'',''P'')'
				End
				if (@dosmode='E')
				Begin
					Select @SqlSelect=@SqlSelect+' and isnull(cnt_ContractDeliveryMode,''B'')=''E'''
				End
				if (@dosmode='P')
				Begin
					Select @SqlSelect=@SqlSelect+' and isnull(cnt_ContractDeliveryMode,''B'')=''P'''
				End
			--and cnt_internalid=grp_contactid 
			--and grp_groupmaster=gpm_id and grp_grouptype in (select top 1 grp_grouptype from tbl_trans_group where grp_contactid=cnt_internalid) '
		IF(@GrpType='BRANCH')
			Begin
				
				If (@GroupType='ALL' or @GroupType='Selected') 
				Begin
					If (@Group<>'ALL')
					Begin
						Select @SqlSelect=@SqlSelect+' and cnt_branchid in ('+@Group+')'
					End
				End
				If @GroupType='AllButSelected'
				Begin
					If (@Group<>'ALL')
					Begin
						Select @SqlSelect=@SqlSelect+' and cnt_branchid not in ('+@Group+')'
					End
				End
			End
		ELSE
			Begin
				Select @SqlSelect=@SqlSelect+'gpm_id as GroupId,isnull(rtrim(GPM_DESCRIPTION),'+char(39)+''+char(39)+') as GrpName,isnull(rtrim(GPM_CODE),'+char(39)+''+char(39)+')  as GrpCode 
				and gpm_type='''+@GrpType+''' AND GRP_GROUPTYPE='''+@GrpType+''''
				If (@GroupType='ALL' or @GroupType='Selected') 
				Begin
					If (@Group<>'ALL')
					Begin
						Select @SqlSelect=@SqlSelect+' and gpm_id in ('+@Group+') and grp_groupmaster=gpm_id and grp_grouptype in (select top 1 grp_grouptype from tbl_trans_group where grp_contactid=cnt_internalid) '
					End
				End
				If @GroupType='AllButSelected'
				Begin
					If (@Group<>'ALL')
					Begin
						Select @SqlSelect=@SqlSelect+' and gpm_id not in ('+@Group+')'
					End
				End
			End
		If (@ClientType='ALL' or @ClientType='Selected') 
		Begin
			If (@Client<>'ALL')
			Begin
				Select @SqlSelect=@SqlSelect+' and cnt_internalid in ('+@Client+')'
			End
		End
		If @ClientType='AllButSelected'
		Begin
			If (@Client<>'ALL')
			Begin
				Select @SqlSelect=@SqlSelect+' and cnt_internalid not in ('+@Client+')'
			End
		End
		Select @SqlSelect=@SqlSelect+' 
) as Tb

Left Outer Join
  tbl_master_address
	On(add_cntID=Clientid and add_entity=''Customer/Client'' and isnull(add_status,''Y'')=''Y''
		and	add_addressType=(Select top 1 add_addressType From 
								( Select add_addressType,
									case when rtrim(ltrim(add_addressType))=''Correspondence'' then 1
										 when rtrim(ltrim(add_addressType))=''Registered'' then 2
										 when rtrim(ltrim(add_addressType))=''Residence'' then 3
										 else 4 end as addreorder
									From tbl_master_address Where 
									add_cntID=Clientid  and add_entity=''Customer/Client'' and isnull(add_status,''Y'')=''Y''
								) Tb
							 Order By addreorder
							)
	)'

Insert Into #TbClient(Client,ClientName,ClientUcc,BranchId,BranchName,BranchCode,ClientBranchAdd1,ClientBranchAdd2,ClientBranchAdd3,ClientBranchPin,ClientBranchPhone,
					  ClientBranchCity,ClientBranchCpPhone,GrpId,GrpName,GrpCode,ClientPan,ClientEmail,ClientMob,
					  ClientAddress1,ClientAddress2,ClientAddress3,ClientPinCode,ClientCity,ClientState,ClientCountry,ClientPhno)
EXEC(@SqlSelect)
End



---------------------------------------------Select Data For ContractNotes
Create Table #TbContractNote(ContractNotes_ID varchar(30),ContractNotes_TradeDate Datetime
,ContractNotes_SettlementNumber varchar(30),ContractNotes_SettlementType varchar(5),ContractNotes_Number int
,ContractNotes_CustomerID varchar(15),ContractNotes_DelFutTO numeric(28,2),ContractNotes_SqrOptPrmTO numeric(28,2)
,ContractNotes_FutFinalSettlementTO numeric(28,2),ContractNotes_TotalTO numeric(28,2),ContractNotes_DelFutBrokerage numeric(28,4)
,ContractNotes_SqrOptBrokerage numeric(28,4),ContractNotes_FutFinalSettlementBrokerage numeric(28,4),ContractNotes_TotalBrokerage numeric(28,2)
,ContractNotes_ServiceTaxOnBrkg numeric(28,4),ContractNotes_EduCessOnBrkg numeric(28,4),ContractNotes_HgrEduCessOnBrkg numeric(28,4)
,ContractNotes_ServiceTaxMode varchar(5),ContractNotes_StampDuty numeric(28,2),[ContractNotes_StampDutyMode] varchar(5)
,[ContractNotes_STTAmount] numeric(28,2),[ContractNotes_STTMode] varchar(5)
,[ContractNotes_TransactionCharges] numeric(28,2),[ContractNotes_TranChargeMode] varchar(5),[ContractNotes_ServiceTaxOnTranCharge] numeric(28,2)
,[ContractNotes_EduCessOnTranCharge] numeric(28,2),[ContractNotes_HgrEduCessOnTranCharge] numeric(28,2)
,[ContractNotes_SEBIFee] numeric(28,2),[ContractNotes_SEBIFeeMode] varchar(5)
,[ContractNotes_DeliveryCharges] numeric(28,2),[ContractNotes_ServiceTaxOnDeliveryCharges] numeric(28,2)
,[ContractNotes_EduCessOnDeliveryCharges] numeric(28,2),[ContractNotes_HgrEduCessOnDeliveryCharges] numeric(28,2)
,[ContractNotes_OtherCharges] numeric(28,2),[ContractNotes_ServiceTaxOnOtherCharges] numeric(28,2)
,[ContractNotes_EduCessOnOtherCharges] numeric(28,2),[ContractNotes_HgrEduCessOnOtherCharges] numeric(28,2)
,[ContractNotes_TotalServiceTax] numeric(28,2),[ContractNotes_TotalEduCess] numeric(28,2),[ContractNotes_TotalHgrEduCess] numeric(28,2)
,[ContractNotes_GrossAmount] numeric(28,2),[ContractNotes_RoundAmount] numeric(28,2),[ContractNotes_NetAmount] numeric(28,2)
,[ContractNotes_NetNDAmount] numeric(28,2),[ContractNotes_ExcAsnTO] numeric(28,2),[ContractNotes_ExcAsnBrkg] numeric(28,4)
,[CustomerTrades_ID] varchar(30),CustomerTrades_OriginalTransactionID varchar(30),[CustomerTrades_FinYear] varchar(20)
,[CustomerTrades_TradeCategory] varchar(15),[CustomerTrades_TransactionType] varchar(15)
,[CustomerTrades_ProductSeriesID] varchar(15),[CustomerTrades_QuantityLots] numeric(28,0),[CustomerTrades_UnitPrice] numeric(28,4)
,[CustomerTrades_UnitPriceQuantity] numeric(28,0),[CustomerTrades_MarketValue] numeric(28,2)
,[CustomerTrades_BrokerageType] varchar(5),[CustomerTrades_UnitBrokerage]  numeric(28,4)
,[CustomerTrades_BrokerageRate]  numeric(28,4),[CustomerTrades_NetRatePerUnit]  numeric(28,4),[CustomerTrades_NetValue]  numeric(28,4)
,[CustomerTrades_TotalBrokerage] numeric(28,4),[CustomerTrades_ServiceTaxOnBrkg] numeric(28,4),[CustomerTrades_EduCessOnBrkg] numeric(28,4)
,[CustomerTrades_HgrEduCessOnBrkg] numeric(28,4)
,ClientName varchar(200),ClientUcc varchar(20),BranchId varchar(20),BranchName varchar(150),BranchCode varchar(30)
,GrpId varchar(20),GrpName varchar(150),GrpCode varchar(30),ClientPan varchar(30),ClientEmail varchar(100),ClientMob varchar(100)
,ClientAddress1 varchar(100),ClientAddress2 varchar(100),ClientAddress3 varchar(100),ClientPinCode varchar(30),ClientCity varchar(50)
,ClientState varchar(50),ClientCountry varchar(50),ClientPhno varchar(100)
,FundsPayout varchar(40),FundsPayin varchar(40)
,ScripName varchar(150),OrderNumber varchar(20),OrderEntryTime Datetime,TradeNumber varchar(20),TradeEntryTime Datetime,BuySaleFlag varchar(5)
,ExchCustomerUcc varchar(15),Terminalid varchar(20),
ClientBranchAdd1 varchar(100),ClientBranchAdd2 varchar(100),ClientBranchAdd3 varchar(100),ClientBranchPin varchar(30),ClientBranchPhone varchar(100),
ClientBranchCity varchar(100),ClientBranchCpPhone varchar(100),TotalSellNetValue numeric(28,2), TotalBuyNetValue numeric(28,2),
BuyUnitPriceQuantity varchar(100),SellUnitPriceQuantity varchar(100),DeliverybuyValue numeric(28,2),DeliverysellValue numeric(28,2),
sttax_deliverybuystt numeric(28,2), sttax_DeliverySaleStt numeric(28,2),Sttax_DifferenceStt numeric(28,2),
BuyNetValue numeric(28,2), SellNetValue numeric(28,2),customernetvaluebuy numeric(28,4),customernetvaluesell numeric (28,4),
exchangetrades_productseriesid varchar(50),
TotalSttPerProduct numeric(28,2),totalvalue numeric(28,2),totalmarketvalue numeric(28,2),netcalculation numeric(28,2),
marketvaluebuy numeric(28,4),marketvaluesell numeric(28,4),BuyNetValuefordelivery numeric(28,2),
 SellNetValuefordelivery numeric(28,2),sumalltaxbuy numeric(28,4),sumalltaxsell numeric(28,4),
 Averagetype char,customermarketvaluebuy numeric(28,4),customermarketvaluesell numeric(28,4),
 customerbuyunitpriceqnty numeric(28,0),customersellunitpriceqnty numeric(28,0),
Securitysymbol varchar(250),Securityidentifier varchar(20),SecuritySeries varchar(50),
StrikePrice numeric(18,4),SecurityExpiry datetime,deliverystt numeric (18,2),netroundofstt numeric(18,2)
 )

Create Table #Grp_TbContractNote(CN_ID varchar(30),CN_TradeDate Datetime
,CN_SettlementNumber varchar(30),CN_SettlementType varchar(5),CN_Number int
,CN_CustomerID varchar(15),CN_DelFutTO numeric(28,2),CN_SqrOptPrmTO numeric(28,2)
,CN_FutFinalSettlementTO numeric(28,2),CN_TotalTO numeric(28,2),CN_DelFutBrokerage numeric(28,4)
,CN_SqrOptBrokerage numeric(28,4),CN_FutFinalSettlementBrokerage numeric(28,4),CN_TotalBrokerage numeric(28,2)
,CN_ServiceTaxOnBrkg numeric(28,4),CN_EduCessOnBrkg numeric(28,4),CN_HgrEduCessOnBrkg numeric(28,4)
,CN_ServiceTaxMode varchar(5),CN_StampDuty numeric(28,2),[CN_StampDutyMode] varchar(5)
,[CN_STTAmount] numeric(28,2),[CN_STTMode] varchar(5)
,[CN_TransactionCharges] numeric(28,2),[CN_TranChargeMode] varchar(5),[CN_ServiceTaxOnTranCharge] numeric(28,2)
,[CN_EduCessOnTranCharge] numeric(28,2),[CN_HgrEduCessOnTranCharge] numeric(28,2)
,[CN_SEBIFee] numeric(28,2),[CN_SEBIFeeMode] varchar(5)
,[CN_DeliveryCharges] numeric(28,2),[CN_ServiceTaxOnDeliveryCharges] numeric(28,2)
,[CN_EduCessOnDeliveryCharges] numeric(28,2),[CN_HgrEduCessOnDeliveryCharges] numeric(28,2)
,[CN_OtherCharges] numeric(28,2),[CN_ServiceTaxOnOtherCharges] numeric(28,2)
,[CN_EduCessOnOtherCharges] numeric(28,2),[CN_HgrEduCessOnOtherCharges] numeric(28,2)
,[CN_TotalServiceTax] numeric(28,2),[CN_TotalEduCess] numeric(28,2),[CN_TotalHgrEduCess] numeric(28,2)
,[CN_GrossAmount] numeric(28,2),[CN_RoundAmount] numeric(28,2),[CN_NetAmount] numeric(28,2)
,[CN_NetNDAmount] numeric(28,2),[CN_ExcAsnTO] numeric(28,2),[CN_ExcAsnBrkg] numeric(28,4)
,[CT_ID] varchar(30),CT_OriginalTransactionID varchar(30),[CT_FinYear] varchar(20)
,[CT_TradeCategory] varchar(15),[CT_TransactionType] varchar(15)
,[CT_ProductSeriesID] varchar(15),[CT_QuantityLots] numeric(28,0),[CT_UnitPrice] numeric(28,4)
,[CT_UnitPriceQuantity] numeric(28,0),[CT_MarketValue] numeric(28,2)
,[CT_BrokerageType] varchar(5),[CT_UnitBrokerage]  numeric(28,4)
,[CT_BrokerageRate]  numeric(28,4),[CT_NetRatePerUnit]  numeric(28,4),[CT_NetValue]  numeric(28,4)
,[CT_TotalBrokerage] numeric(28,4),[CT_ServiceTaxOnBrkg] numeric(28,4),[CT_EduCessOnBrkg] numeric(28,4)
,[CT_HgrEduCessOnBrkg] numeric(28,4)
,ClientName varchar(200),ClientUcc varchar(20),BranchId varchar(20),BranchName varchar(150),BranchCode varchar(30)
,GrpId varchar(20),GrpName varchar(150),GrpCode varchar(30),ClientPan varchar(30),ClientEmail varchar(100),ClientMob varchar(100)
,ClientAddress1 varchar(100),ClientAddress2 varchar(100),ClientAddress3 varchar(100),ClientPinCode varchar(30),ClientCity varchar(50)
,ClientState varchar(50),ClientCountry varchar(50),ClientPhno varchar(100)
,FundsPayout varchar(40),FundsPayin varchar(40)
,ScripName varchar(150),OrderNumber varchar(20),OrderEntryTime Datetime,TradeNumber varchar(20),TradeEntryTime Datetime,BuySaleFlag varchar(5)
,ExchCustomerUcc varchar(15),Terminalid varchar(20),
ClientBranchAdd1 varchar(100),ClientBranchAdd2 varchar(100),ClientBranchAdd3 varchar(100),ClientBranchPin varchar(30),ClientBranchPhone varchar(100),
ClientBranchCity varchar(100),ClientBranchCpPhone varchar(100),TotalSellNetValue numeric(28,2), TotalBuyNetValue numeric(28,2),
BuyUnitPriceQuantity varchar(100),SellUnitPriceQuantity varchar(100),DeliverybuyValue numeric(28,2),DeliverysellValue numeric(28,2),
sttax_deliverybuystt numeric(28,2), sttax_DeliverySaleStt numeric(28,2),Sttax_DifferenceStt numeric(28,2),
BuyNetValue numeric(28,2), SellNetValue numeric(28,2),BuyCalculatedNetValue numeric(28,2),SellCalculatedNetValue numeric(28,2),
exchangetrades_productseriesid varchar(50),BuyNetValuefordelivery numeric(28,2), SellNetValuefordelivery numeric(28,2),
TotalSttPerProduct numeric(28,2),BuyCalculatedNetValuefordelivery numeric(28,2),
SellCalculatedNetValuefordelivery numeric(28,2),sumtaxbuy numeric(28,4),sumtaxsell numeric(28,4),
Averagetype char,customermarketvaluebuy numeric(28,4),customermarketvaluesell numeric(28,4),
Securitysymbol varchar(250),Securityidentifier varchar(20),SecuritySeries varchar(50),
StrikePrice numeric(18,4),SecurityExpiry datetime)

Select @SqlSelect='Select Distinct ContractNotes_ID,ContractNotes_TradeDate,ContractNotes_SettlementNumber,ContractNotes_SettlementType,ContractNotes_Number
,ContractNotes_CustomerID,ContractNotes_DelFutTO,ContractNotes_SqrOptPrmTO,ContractNotes_FutFinalSettlementTO,ContractNotes_TotalTO,ContractNotes_DelFutBrokerage
,ContractNotes_SqrOptBrokerage,ContractNotes_FutFinalSettlementBrokerage,ContractNotes_TotalBrokerage,ContractNotes_ServiceTaxOnBrkg,ContractNotes_EduCessOnBrkg
,ContractNotes_HgrEduCessOnBrkg,ContractNotes_ServiceTaxMode,ContractNotes_StampDuty,[ContractNotes_StampDutyMode]
,[ContractNotes_STTAmount],[ContractNotes_STTMode],[ContractNotes_TransactionCharges],[ContractNotes_TranChargeMode],[ContractNotes_ServiceTaxOnTranCharge]
,[ContractNotes_EduCessOnTranCharge],[ContractNotes_HgrEduCessOnTranCharge],[ContractNotes_SEBIFee],[ContractNotes_SEBIFeeMode]
,[ContractNotes_DeliveryCharges],[ContractNotes_ServiceTaxOnDeliveryCharges],[ContractNotes_EduCessOnDeliveryCharges],[ContractNotes_HgrEduCessOnDeliveryCharges]
,[ContractNotes_OtherCharges],[ContractNotes_ServiceTaxOnOtherCharges],[ContractNotes_EduCessOnOtherCharges],[ContractNotes_HgrEduCessOnOtherCharges]
,[ContractNotes_TotalServiceTax],[ContractNotes_TotalEduCess],[ContractNotes_TotalHgrEduCess],[ContractNotes_GrossAmount]
,[ContractNotes_RoundAmount],[ContractNotes_NetAmount],[ContractNotes_NetNDAmount],[ContractNotes_ExcAsnTO],[ContractNotes_ExcAsnBrkg]
,[CustomerTrades_ID],CustomerTrades_OriginalTransactionID,[CustomerTrades_FinYear],[CustomerTrades_TradeCategory],[CustomerTrades_TransactionType]
,[CustomerTrades_ProductSeriesID],[CustomerTrades_QuantityLots],[CustomerTrades_UnitPrice],[CustomerTrades_UnitPriceQuantity],[CustomerTrades_MarketValue]
,[CustomerTrades_BrokerageType],[CustomerTrades_UnitBrokerage],[CustomerTrades_BrokerageRate],[CustomerTrades_NetRatePerUnit],[CustomerTrades_NetValue]
,[CustomerTrades_TotalBrokerage],[CustomerTrades_ServiceTaxOnBrkg],[CustomerTrades_EduCessOnBrkg],[CustomerTrades_HgrEduCessOnBrkg]
,ClientName,ClientUcc,BranchId,BranchName,BranchCode,GrpId,GrpName,GrpCode,ClientPan,ClientEmail,ClientMob
,ClientAddress1,ClientAddress2,ClientAddress3,ClientPinCode,ClientCity,ClientState,ClientCountry,ClientPhno
,Convert(varchar(11),Settlements_FundsPayout,106) as FundsPayout,Convert(varchar(11),Settlements_FundsPayin,106) as FundsPayin
,ClientBranchAdd1,ClientBranchAdd2,ClientBranchAdd3,ClientBranchPin,ClientBranchPhone,ClientBranchCity,ClientBranchCpPhone,
isnull(CustomerTrades_AverageType,''1'') as average
 '

Select @SqlWhere=' From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID='''+@Company+''' and CustomerTrades_CompanyID='''+@Company+'''
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID='''+@Segment+''' and CustomerTrades_ExchangeSegment='''+@Segment+'''
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid='''+@ExSegmentId+'''
AND ContractNotes_Status Is Null '
If @SelectionType='1'-------Current Settelment No
Begin
	Select @SqlWhere=@SqlWhere+' AND ContractNotes_SettlementNumber='''+@SettNo+'''   AND ContractNotes_SettlementType='''+@SettType+''' 
								 AND CustomerTrades_SettlementNumber='''+@SettNo+'''  AND CustomerTrades_SettlementType='''+@SettType+'''
								 AND Settlements_Number='''+@SettNo+'''				  AND Settlements_TypeSuffix='''+@SettType+'''
					 '
End
If @SelectionType='2'-------Date Range
Begin
	Select @SqlWhere=@SqlWhere+' AND ContractNotes_TradeDate Between '''+@FromDate+''' and '''+@ToDate+'''
								 AND CustomerTrades_TradeDate Between '''+@FromDate+''' and '''+@ToDate+'''
								 AND ContractNotes_Finyear = '''+@FinYear+'''
								 AND CustomerTrades_Finyear = '''+@FinYear+'''
					 '
End
If @SelectionType='3'-------Contract No Wise
Begin
	If @CntrNoType='Select'
	Begin
		Select @SqlWhere=@SqlWhere+' AND ContractNotes_Number in ('+@CntrNo+')
									 AND CustomerTrades_ContractNoteNumber in ('+@CntrNo+')
									 AND ContractNotes_Finyear = '''+@FinYear+'''
								     AND CustomerTrades_Finyear = '''+@FinYear+'''
					 '
	End
	If @CntrNoType='Range'
	Begin
		Select @SqlWhere=@SqlWhere+' AND ContractNotes_Number Between  '+@CntrNo+'
								     AND CustomerTrades_ContractNoteNumber Between  '+@CntrNo+'
									AND ContractNotes_Finyear = '''+@FinYear+'''
								   AND CustomerTrades_Finyear = '''+@FinYear+'''
					 '
	End
	
End


Insert Into #TbContractNote(ContractNotes_ID,ContractNotes_TradeDate,ContractNotes_SettlementNumber,ContractNotes_SettlementType,ContractNotes_Number
,ContractNotes_CustomerID,ContractNotes_DelFutTO,ContractNotes_SqrOptPrmTO,ContractNotes_FutFinalSettlementTO,ContractNotes_TotalTO,ContractNotes_DelFutBrokerage
,ContractNotes_SqrOptBrokerage,ContractNotes_FutFinalSettlementBrokerage,ContractNotes_TotalBrokerage,ContractNotes_ServiceTaxOnBrkg,ContractNotes_EduCessOnBrkg
,ContractNotes_HgrEduCessOnBrkg,ContractNotes_ServiceTaxMode,ContractNotes_StampDuty,[ContractNotes_StampDutyMode]
,[ContractNotes_STTAmount],[ContractNotes_STTMode],[ContractNotes_TransactionCharges],[ContractNotes_TranChargeMode],[ContractNotes_ServiceTaxOnTranCharge]
,[ContractNotes_EduCessOnTranCharge],[ContractNotes_HgrEduCessOnTranCharge],[ContractNotes_SEBIFee],[ContractNotes_SEBIFeeMode]
,[ContractNotes_DeliveryCharges],[ContractNotes_ServiceTaxOnDeliveryCharges],[ContractNotes_EduCessOnDeliveryCharges],[ContractNotes_HgrEduCessOnDeliveryCharges]
,[ContractNotes_OtherCharges],[ContractNotes_ServiceTaxOnOtherCharges],[ContractNotes_EduCessOnOtherCharges],[ContractNotes_HgrEduCessOnOtherCharges]
,[ContractNotes_TotalServiceTax],[ContractNotes_TotalEduCess],[ContractNotes_TotalHgrEduCess],[ContractNotes_GrossAmount]
,[ContractNotes_RoundAmount],[ContractNotes_NetAmount],[ContractNotes_NetNDAmount],[ContractNotes_ExcAsnTO],[ContractNotes_ExcAsnBrkg]
,[CustomerTrades_ID],CustomerTrades_OriginalTransactionID,[CustomerTrades_FinYear],[CustomerTrades_TradeCategory],[CustomerTrades_TransactionType]
,[CustomerTrades_ProductSeriesID],[CustomerTrades_QuantityLots],[CustomerTrades_UnitPrice],[CustomerTrades_UnitPriceQuantity],[CustomerTrades_MarketValue]
,[CustomerTrades_BrokerageType],[CustomerTrades_UnitBrokerage],[CustomerTrades_BrokerageRate],[CustomerTrades_NetRatePerUnit],[CustomerTrades_NetValue]
,[CustomerTrades_TotalBrokerage],[CustomerTrades_ServiceTaxOnBrkg],[CustomerTrades_EduCessOnBrkg],[CustomerTrades_HgrEduCessOnBrkg]
,ClientName,ClientUcc,BranchId,BranchName,BranchCode,GrpId,GrpName,GrpCode,ClientPan,ClientEmail,ClientMob
,ClientAddress1,ClientAddress2,ClientAddress3,ClientPinCode,ClientCity,ClientState,ClientCountry,ClientPhno,FundsPayout,FundsPayin
,ClientBranchAdd1,ClientBranchAdd2,ClientBranchAdd3,ClientBranchPin,ClientBranchPhone,ClientBranchCity,ClientBranchCpPhone,
Averagetype)
 Exec(@SqlSelect+@SqlWhere)
 
 --select distinct ContractNotes_CustomerID,ContractNotes_Number from #TbContractNote
 
--print (@SqlSelect+@SqlWhere)
--select * from #TbContractNote
-------------Excxhange Trades [Original Transactionid is Null]
UPDATE #TbContractNote SET      ExchCustomerUcc=EXCHANGETRADES_CUSTOMERUCC
							   ,OrderNumber=ExchangeTrades_OrderNumber,OrderEntryTime=ExchangeTrades_OrderEntryTime
							   ,TradeNumber=ExchangeTrades_TradeNumber,TradeEntryTime=ExchangeTrades_TradeEntryTime
							   ,ScripName=CASE  WHEN isnull( ExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ExchangeTrades_SecurityExpiry IS NULL
												THEN isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))
												WHEN isnull(ExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ExchangeTrades_SecurityExpiry IS NOT NULL
												THEN isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))
												ELSE isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))+
													 ' '+cast(cast(round(ExchangeTrades_SecurityStrikePrice,2) as numeric(28,2)) as varchar) 
												End 
							  ,Terminalid=EXCHANGETRADES_Terminalid,BuySaleFlag=ExchangeTrades_BuySellFlag,
							  Securitysymbol=ExchangeTrades_SecuritySymbol,
							  Securityidentifier=ExchangeTrades_SecurityType,SecuritySeries=ExchangeTrades_SecuritySeries,
							  StrikePrice=ExchangeTrades_StrikePrice,SecurityExpiry=ExchangeTrades_SecurityExpiry
								--exchangetrades_productseriesid = exchangetrades_productseriesid
From Trans_ExchangeTrades Where 
ExchangeTrades_CUSTTRANSACTIONID=[CustomerTrades_ID] and CustomerTrades_OriginalTransactionID is null
and ExchangeTrades_COMPANYID=@Company and ExchangeTrades_Segment=@Segment
and ExchangeTrades_SettlementNumber=ContractNotes_SettlementNumber and ExchangeTrades_SettlementType=ContractNotes_SettlementType
and ExchangeTrades_TradeDate=ContractNotes_TradeDate


-------------Excxhange Trades [Original Transactionid is Not Null]
UPDATE #TbContractNote SET      ExchCustomerUcc=EXCHANGETRADES_CUSTOMERUCC
							   ,OrderNumber=ExchangeTrades_OrderNumber,OrderEntryTime=ExchangeTrades_OrderEntryTime
							   ,TradeNumber=ExchangeTrades_TradeNumber,TradeEntryTime=ExchangeTrades_TradeEntryTime
							   ,ScripName=CASE  WHEN isnull( ExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ExchangeTrades_SecurityExpiry IS NULL
												THEN isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))
												WHEN isnull(ExchangeTrades_SecurityStrikePrice,0.0)=0.0 AND ExchangeTrades_SecurityExpiry IS NOT NULL
												THEN isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))
												ELSE isnull(rtrim(ExchangeTrades_SecuritySymbol),'')+' '+convert(varchar(9),ExchangeTrades_SecurityExpiry,6)+' '+ISNULL(cast(ExchangeTrades_SecuritySeries as varchar(10)),ISNULL(ExchangeTrades_SECURITYCode,''))+
													 ' '+cast(cast(round(ExchangeTrades_SecurityStrikePrice,2) as numeric(28,2)) as varchar) 
												End 
							  ,Terminalid=EXCHANGETRADES_Terminalid,BuySaleFlag=ExchangeTrades_BuySellFlag,
							  Securitysymbol=ExchangeTrades_SecuritySymbol,
							  Securityidentifier=ExchangeTrades_SecurityType,SecuritySeries=ExchangeTrades_SecuritySeries,
							  StrikePrice=ExchangeTrades_StrikePrice,SecurityExpiry=ExchangeTrades_SecurityExpiry
From Trans_ExchangeTrades Where 
ExchangeTrades_CUSTTRANSACTIONID=CustomerTrades_OriginalTransactionID and CustomerTrades_OriginalTransactionID is not null
and ExchangeTrades_COMPANYID=@Company and ExchangeTrades_Segment=@Segment and ScripName is null
and ExchangeTrades_SettlementNumber=ContractNotes_SettlementNumber and ExchangeTrades_SettlementType=ContractNotes_SettlementType
and ExchangeTrades_TradeDate=ContractNotes_TradeDate


--------------Stt Fecth
Update #TbContractNote Set TotalSttPerProduct=sttax_totalstt,
							sttax_deliverybuystt=isnull(trans_sttax.Sttax_DeliveryBuyStt,0.00),
							Sttax_DeliverySaleStt=isnull(trans_sttax.Sttax_DeliverySaleStt,0.00),
							Sttax_DifferenceStt=isnull(trans_sttax.Sttax_DifferenceStt,0.00),
							deliverystt=isnull(trans_sttax.Sttax_DeliverySaleStt,0.00)+isnull(trans_sttax.Sttax_DeliveryBuyStt,0.00)

From trans_sttax Where sttax_type='Prov' and sttax_customerid=ContractNotes_CustomerID
and sttax_companyid=@Company and sttax_segmentid=@Segment and sttax_Productseriesid=CustomerTrades_ProductSeriesID
and sttax_settlementnumber=ContractNotes_SettlementNumber and sttax_settlementtype=ContractNotes_SettlementType 
and sttax_sttdate=ContractNotes_TradeDate

Update #TbContractNote Set netroundofstt=abs(isnull(SttaxSummary_RoundOffAmount,0.00))

From Trans_SttaxSummary Where SttaxSummary_type='Prov' and SttaxSummary_customerid=ContractNotes_CustomerID
and SttaxSummary_companyid=@Company and SttaxSummary_segmentid=@Segment --and SttaxSummary_Productseriesid=CustomerTrades_ProductSeriesID
and SttaxSummary_settlementnumber=ContractNotes_SettlementNumber and SttaxSummary_settlementtype=ContractNotes_SettlementType 
and SttaxSummary_sttdate=ContractNotes_TradeDate

Update #TbContractNote set TotalSellNetValue = (select ABS(SUM(isnull(cast(trans_customertrades.CustomerTrades_NetValue as numeric (28,4)),0.00))) 
from trans_customertrades where 
trans_customertrades.CustomerTrades_UnitPriceQuantity>0
and contractnotes_customerid=customertrades_customerid
and customertrades_companyid=@Company and customertrades_exchangesegment=@Segment --and sttax_Productseriesid=CustomerTrades_ProductSeriesID
and customertrades_settlementnumber=ContractNotes_SettlementNumber and customertrades_settlementtype=ContractNotes_SettlementType and customertrades_tradedate=ContractNotes_TradeDate
group by CustomerTrades_CustomerID)

Update #TbContractNote set TotalBuyNetValue = (select ABS(SUM(isnull(cast(trans_customertrades.CustomerTrades_NetValue as numeric (28,4)),0.00))) 
from trans_customertrades where 
trans_customertrades.CustomerTrades_UnitPriceQuantity<0
and contractnotes_customerid=customertrades_customerid
and customertrades_companyid=@Company and customertrades_exchangesegment=@Segment --and sttax_Productseriesid=CustomerTrades_ProductSeriesID
and customertrades_settlementnumber=ContractNotes_SettlementNumber and customertrades_settlementtype=ContractNotes_SettlementType and customertrades_tradedate=ContractNotes_TradeDate
group by CustomerTrades_CustomerID)

Update #TbContractNote set totalvalue = (select ABS(SUM(isnull(cast(trans_customertrades.CustomerTrades_NetValue as numeric (28,4)),0.00))) 
from trans_customertrades where 
--trans_customertrades.CustomerTrades_UnitPriceQuantity<0
--and 
contractnotes_customerid=customertrades_customerid
and customertrades_companyid=@Company and customertrades_exchangesegment=@Segment --and sttax_Productseriesid=CustomerTrades_ProductSeriesID
and customertrades_settlementnumber=ContractNotes_SettlementNumber and customertrades_settlementtype=ContractNotes_SettlementType and customertrades_tradedate=ContractNotes_TradeDate
group by CustomerTrades_CustomerID)

Update #TbContractNote set totalmarketvalue = (select ABS(SUM(isnull(cast(trans_customertrades.CustomerTrades_MarketValue as numeric (28,4)),0.00))) 
from trans_customertrades where 
--trans_customertrades.CustomerTrades_UnitPriceQuantity<0
--and 
contractnotes_customerid=customertrades_customerid
and customertrades_companyid=@Company and customertrades_exchangesegment=@Segment --and sttax_Productseriesid=CustomerTrades_ProductSeriesID
and customertrades_settlementnumber=ContractNotes_SettlementNumber and customertrades_settlementtype=ContractNotes_SettlementType and customertrades_tradedate=ContractNotes_TradeDate
group by CustomerTrades_CustomerID)

Update #TbContractNote set BuyUnitPriceQuantity = (select ABS(SUM(isnull(cast(trans_customertrades.CustomerTrades_UnitPriceQuantity as numeric (28,4)),0.00))) 
from trans_customertrades where 
trans_customertrades.CustomerTrades_UnitPriceQuantity<0
and contractnotes_customerid=customertrades_customerid
and customertrades_companyid=@Company and customertrades_exchangesegment=@Segment --and sttax_Productseriesid=CustomerTrades_ProductSeriesID
and customertrades_settlementnumber=ContractNotes_SettlementNumber and customertrades_settlementtype=ContractNotes_SettlementType and customertrades_tradedate=ContractNotes_TradeDate
group by CustomerTrades_CustomerID)

Update #TbContractNote set SellUnitPriceQuantity = (select ABS(SUM(isnull(cast(trans_customertrades.CustomerTrades_UnitPriceQuantity as numeric (28,4)),0.00))) 
from trans_customertrades where 
trans_customertrades.CustomerTrades_UnitPriceQuantity>0
and contractnotes_customerid=customertrades_customerid
and customertrades_companyid=@Company and customertrades_exchangesegment=@Segment --and sttax_Productseriesid=CustomerTrades_ProductSeriesID
and customertrades_settlementnumber=ContractNotes_SettlementNumber and customertrades_settlementtype=ContractNotes_SettlementType and customertrades_tradedate=ContractNotes_TradeDate
group by CustomerTrades_CustomerID)



Update #TbContractNote set marketvaluebuy = (select ABS(SUM(isnull(cast(trans_customertrades.CustomerTrades_MarketValue as numeric (28,4)),0.00))) 
from trans_customertrades where 
trans_customertrades.CustomerTrades_UnitPriceQuantity<0
and 
contractnotes_customerid=customertrades_customerid
and customertrades_companyid=@Company and customertrades_exchangesegment=@Segment --and sttax_Productseriesid=CustomerTrades_ProductSeriesID
and customertrades_settlementnumber=ContractNotes_SettlementNumber and customertrades_settlementtype=ContractNotes_SettlementType and customertrades_tradedate=ContractNotes_TradeDate
group by CustomerTrades_CustomerID)

Update #TbContractNote set marketvaluesell = (select ABS(SUM(isnull(cast(trans_customertrades.CustomerTrades_MarketValue as numeric (28,4)),0.00))) 
from trans_customertrades where 
trans_customertrades.CustomerTrades_UnitPriceQuantity>0
and 
contractnotes_customerid=customertrades_customerid
and customertrades_companyid=@Company and customertrades_exchangesegment=@Segment --and sttax_Productseriesid=CustomerTrades_ProductSeriesID
and customertrades_settlementnumber=ContractNotes_SettlementNumber and customertrades_settlementtype=ContractNotes_SettlementType and customertrades_tradedate=ContractNotes_TradeDate
group by CustomerTrades_CustomerID)



--------------------------------------------------------------

If @SelectionType='1'-------Current Settelment No
Begin
update #TbContractNote set  SellNetValue = Grp_SellNetValue From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,
ABS(SUM(isnull(cast(CustomerTrades_NetValue as numeric (28,4)),0.00))) Grp_SellNetValue
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
and ltrim(rtrim(CustomerTrades_BrokerageType))='S'  
and ltrim(rtrim(CustomerTrades_BrokerageType))!='D'
and CustomerTrades_UnitPriceQuantity>0
--AND ContractNotes_TradeDate Between @FromDate and @ToDate
--AND CustomerTrades_TradeDate Between @FromDate and @ToDate
AND ContractNotes_SettlementNumber=@SettNo   AND ContractNotes_SettlementType=@SettType 
AND CustomerTrades_SettlementNumber=@SettNo 
AND CustomerTrades_SettlementType=@SettType
AND Settlements_Number=@SettNo			  
AND Settlements_TypeSuffix=@SettType
--AND ContractNotes_Number in (@CntrNo)
--AND CustomerTrades_ContractNoteNumber in (@CntrNo)
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))='S'
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!='D'

update #TbContractNote set  BuyNetValue = Grp_BuyNetValue From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,
ABS(SUM(isnull(cast(CustomerTrades_NetValue as numeric (28,4)),0.00))) Grp_BuyNetValue
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
and CustomerTrades_UnitPriceQuantity<0 and ltrim(rtrim(CustomerTrades_BrokerageType))='S'
and ltrim(rtrim(CustomerTrades_BrokerageType))!='D'
--AND ContractNotes_TradeDate Between @FromDate and @ToDate
--AND CustomerTrades_TradeDate Between @FromDate and @ToDate
AND ContractNotes_SettlementNumber=@SettNo   AND ContractNotes_SettlementType=@SettType 
AND CustomerTrades_SettlementNumber=@SettNo 
AND CustomerTrades_SettlementType=@SettType
AND Settlements_Number=@SettNo			  
AND Settlements_TypeSuffix=@SettType
--AND ContractNotes_Number in (@CntrNo)
--AND CustomerTrades_ContractNoteNumber in (@CntrNo)
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID) as T2
Where  #TbContractNote.CustomerTrades_productseriesid=T2.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T2.CustomerTrades_CustomerID
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))='S'
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!='D'
print 2
 end

If @SelectionType='1'-------Current Settelment No
Begin
update #TbContractNote set  SellNetValuefordelivery = Grp_SellNetValue From
(Select  CustomerTrades_productseriesid,CustomerTrades_CustomerID,
ABS(SUM(isnull(cast(CustomerTrades_NetValue as numeric (28,4)),0.00))) Grp_SellNetValue
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
and ltrim(rtrim(CustomerTrades_BrokerageType))!='S'  
and ltrim(rtrim(CustomerTrades_BrokerageType))='D'
and CustomerTrades_UnitPriceQuantity>0
--AND ContractNotes_TradeDate Between @FromDate and @ToDate
--AND CustomerTrades_TradeDate Between @FromDate and @ToDate
AND ContractNotes_SettlementNumber=@SettNo   AND ContractNotes_SettlementType=@SettType 
AND CustomerTrades_SettlementNumber=@SettNo 
AND CustomerTrades_SettlementType=@SettType
AND Settlements_Number=@SettNo			  
AND Settlements_TypeSuffix=@SettType
--AND ContractNotes_Number in (@CntrNo)
--AND CustomerTrades_ContractNoteNumber in (@CntrNo)
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!='S'
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))='D'

update #TbContractNote set  BuyNetValuefordelivery = Grp_BuyNetValue From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,
ABS(SUM(isnull(cast(CustomerTrades_NetValue as numeric (28,4)),0.00))) Grp_BuyNetValue
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
and CustomerTrades_UnitPriceQuantity<0 and ltrim(rtrim(CustomerTrades_BrokerageType))!='S'
and ltrim(rtrim(CustomerTrades_BrokerageType))='D'
--AND ContractNotes_TradeDate Between @FromDate and @ToDate
--AND CustomerTrades_TradeDate Between @FromDate and @ToDate
AND ContractNotes_SettlementNumber=@SettNo   AND ContractNotes_SettlementType=@SettType 
AND CustomerTrades_SettlementNumber=@SettNo 
AND CustomerTrades_SettlementType=@SettType
AND Settlements_Number=@SettNo			  
AND Settlements_TypeSuffix=@SettType
--AND ContractNotes_Number in (@CntrNo)
--AND CustomerTrades_ContractNoteNumber in (@CntrNo)
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID) as T2
Where  #TbContractNote.CustomerTrades_productseriesid=T2.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T2.CustomerTrades_CustomerID
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!='S'
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))='D'
print 2
 end

If @SelectionType='1'-------Current Settelment No
Begin
update #TbContractNote set  sumalltaxbuy = sumtaxbuy From
(Select  CustomerTrades_productseriesid,CustomerTrades_CustomerID,
ABS(SUM(isnull(CustomerTrades_ServiceTaxOnBrkg+CustomerTrades_EduCessOnBrkg+CustomerTrades_HgrEduCessOnBrkg,0.00))) sumtaxbuy
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
and ltrim(rtrim(CustomerTrades_BrokerageType))!='S'  
and ltrim(rtrim(CustomerTrades_BrokerageType))='D'
and CustomerTrades_UnitPriceQuantity>0
--AND ContractNotes_TradeDate Between @FromDate and @ToDate
--AND CustomerTrades_TradeDate Between @FromDate and @ToDate
AND ContractNotes_SettlementNumber=@SettNo   AND ContractNotes_SettlementType=@SettType 
AND CustomerTrades_SettlementNumber=@SettNo 
AND CustomerTrades_SettlementType=@SettType
AND Settlements_Number=@SettNo			  
AND Settlements_TypeSuffix=@SettType
--AND ContractNotes_Number in (@CntrNo)
--AND CustomerTrades_ContractNoteNumber in (@CntrNo)
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!='S'
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))='D'

update #TbContractNote set  sumalltaxsell = sumtaxsell From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,
ABS(SUM(isnull(CustomerTrades_ServiceTaxOnBrkg+CustomerTrades_EduCessOnBrkg+CustomerTrades_HgrEduCessOnBrkg,0.00))) sumtaxsell

From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
and CustomerTrades_UnitPriceQuantity<0 and ltrim(rtrim(CustomerTrades_BrokerageType))!='S'
and ltrim(rtrim(CustomerTrades_BrokerageType))='D'
--AND ContractNotes_TradeDate Between @FromDate and @ToDate
--AND CustomerTrades_TradeDate Between @FromDate and @ToDate
AND ContractNotes_SettlementNumber=@SettNo   AND ContractNotes_SettlementType=@SettType 
AND CustomerTrades_SettlementNumber=@SettNo 
AND CustomerTrades_SettlementType=@SettType
AND Settlements_Number=@SettNo			  
AND Settlements_TypeSuffix=@SettType
--AND ContractNotes_Number in (@CntrNo)
--AND CustomerTrades_ContractNoteNumber in (@CntrNo)
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID) as T2
Where  #TbContractNote.CustomerTrades_productseriesid=T2.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T2.CustomerTrades_CustomerID
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!='S'
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))='D'
print 2
 end

If @SelectionType='1'-------Current Settelment No
Begin
update #TbContractNote set  SellNetValue = Grp_SellNetValue From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,
ABS(SUM(isnull(cast(CustomerTrades_NetValue as numeric (28,4)),0.00))) Grp_SellNetValue
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
and ltrim(rtrim(CustomerTrades_BrokerageType))='S'  
and ltrim(rtrim(CustomerTrades_BrokerageType))!='D'
and CustomerTrades_UnitPriceQuantity>0
--AND ContractNotes_TradeDate Between @FromDate and @ToDate
--AND CustomerTrades_TradeDate Between @FromDate and @ToDate
AND ContractNotes_SettlementNumber=@SettNo   AND ContractNotes_SettlementType=@SettType 
AND CustomerTrades_SettlementNumber=@SettNo 
AND CustomerTrades_SettlementType=@SettType
AND Settlements_Number=@SettNo			  
AND Settlements_TypeSuffix=@SettType
--AND ContractNotes_Number in (@CntrNo)
--AND CustomerTrades_ContractNoteNumber in (@CntrNo)
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))='S'
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!='D'

update #TbContractNote set  BuyNetValue = Grp_BuyNetValue From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,
ABS(SUM(isnull(cast(CustomerTrades_NetValue as numeric (28,4)),0.00))) Grp_BuyNetValue
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
and CustomerTrades_UnitPriceQuantity<0 and ltrim(rtrim(CustomerTrades_BrokerageType))='S'
and ltrim(rtrim(CustomerTrades_BrokerageType))!='D'
--AND ContractNotes_TradeDate Between @FromDate and @ToDate
--AND CustomerTrades_TradeDate Between @FromDate and @ToDate
AND ContractNotes_SettlementNumber=@SettNo   AND ContractNotes_SettlementType=@SettType 
AND CustomerTrades_SettlementNumber=@SettNo 
AND CustomerTrades_SettlementType=@SettType
AND Settlements_Number=@SettNo			  
AND Settlements_TypeSuffix=@SettType
--AND ContractNotes_Number in (@CntrNo)
--AND CustomerTrades_ContractNoteNumber in (@CntrNo)
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID) as T2
Where  #TbContractNote.CustomerTrades_productseriesid=T2.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T2.CustomerTrades_CustomerID
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))='S'
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!='D'
print 2
 end
 If @SelectionType='1'-------Current Settelment No
Begin
 update #TbContractNote set  customernetvaluebuy = Grp_SellNetValue From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,
SUM(isnull(cast(CustomerTrades_NetValue as numeric (28,4)),0.00)) Grp_SellNetValue
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
--and ltrim(rtrim(CustomerTrades_BrokerageType))='S'  
--and ltrim(rtrim(CustomerTrades_BrokerageType))!='D'
--and CustomerTrades_UnitPriceQuantity>0
--AND ContractNotes_TradeDate Between @FromDate and @ToDate
--AND CustomerTrades_TradeDate Between @FromDate and @ToDate
AND ContractNotes_SettlementNumber=@SettNo   AND ContractNotes_SettlementType=@SettType 
AND CustomerTrades_SettlementNumber=@SettNo 
AND CustomerTrades_SettlementType=@SettType
AND Settlements_Number=@SettNo			  
AND Settlements_TypeSuffix=@SettType
--AND ContractNotes_Number in (@CntrNo)
--AND CustomerTrades_ContractNoteNumber in (@CntrNo)
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
--and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))='S'
--and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!='D'
 
 End

If @SelectionType='1'-------Current Settelment No
Begin
 update #TbContractNote set  customermarketvaluebuy = customermarketvaluebuy1 From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,
SUM(isnull(cast(CustomerTrades_MarketValue as numeric (28,4)),0.00)) customermarketvaluebuy1
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and CustomerTrades_UnitPriceQuantity<0
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
AND ContractNotes_SettlementNumber=@SettNo   AND ContractNotes_SettlementType=@SettType 
AND CustomerTrades_SettlementNumber=@SettNo 
AND CustomerTrades_SettlementType=@SettType
AND Settlements_Number=@SettNo			  
AND Settlements_TypeSuffix=@SettType
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 


update #TbContractNote set  customermarketvaluesell = customermarketvaluesell1 From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,
SUM(isnull(cast(CustomerTrades_MarketValue as numeric (28,4)),0.00)) customermarketvaluesell1
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and CustomerTrades_UnitPriceQuantity>0
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
AND ContractNotes_SettlementNumber=@SettNo   AND ContractNotes_SettlementType=@SettType 
AND CustomerTrades_SettlementNumber=@SettNo 
AND CustomerTrades_SettlementType=@SettType
AND Settlements_Number=@SettNo			  
AND Settlements_TypeSuffix=@SettType
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 


 update #TbContractNote set  customerbuyunitpriceqnty = customerbuyunitpriceqnty1 From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,
SUM(isnull(cast(CustomerTrades_UnitPriceQuantity as numeric (28,4)),0.00)) customerbuyunitpriceqnty1
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and CustomerTrades_UnitPriceQuantity<0
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
AND ContractNotes_SettlementNumber=@SettNo   AND ContractNotes_SettlementType=@SettType 
AND CustomerTrades_SettlementNumber=@SettNo 
AND CustomerTrades_SettlementType=@SettType
AND Settlements_Number=@SettNo			  
AND Settlements_TypeSuffix=@SettType
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID

update #TbContractNote set  customersellunitpriceqnty = customersellunitpriceqnty1 From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,
SUM(isnull(cast(CustomerTrades_UnitPriceQuantity as numeric (28,4)),0.00)) customersellunitpriceqnty1
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and CustomerTrades_UnitPriceQuantity>0
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
AND ContractNotes_SettlementNumber=@SettNo   AND ContractNotes_SettlementType=@SettType 
AND CustomerTrades_SettlementNumber=@SettNo 
AND CustomerTrades_SettlementType=@SettType
AND Settlements_Number=@SettNo			  
AND Settlements_TypeSuffix=@SettType
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID
 
 End
 
 
 If @SelectionType='2'-------Date Range
Begin
update #TbContractNote set  SellNetValuefordelivery = Grp_SellNetValue From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
ABS(SUM(isnull(cast(CustomerTrades_NetValue as numeric (28,4)),0.00))) Grp_SellNetValue
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
and ltrim(rtrim(CustomerTrades_BrokerageType))!='S'  
and ltrim(rtrim(CustomerTrades_BrokerageType))='D'
and CustomerTrades_UnitPriceQuantity>0
AND ContractNotes_TradeDate Between @FromDate and @ToDate
AND CustomerTrades_TradeDate Between @FromDate and @ToDate 

AND ContractNotes_FinYear = @FinYear
AND CustomerTrades_FinYear = @FinYear 
--AND ContractNotes_Number in (@CntrNo)
--AND CustomerTrades_ContractNoteNumber in (@CntrNo)
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
and  #TbContractNote.ContractNotes_TradeDate=T1.CustomerTrades_TradeDate

and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!='S'
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))='D'

update #TbContractNote set  BuyNetValuefordelivery = Grp_BuyNetValue From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
ABS(SUM(isnull(cast(CustomerTrades_NetValue as numeric (28,4)),0.00))) Grp_BuyNetValue
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
and CustomerTrades_UnitPriceQuantity<0 and ltrim(rtrim(CustomerTrades_BrokerageType))!='S'
and ltrim(rtrim(CustomerTrades_BrokerageType))='D'
AND ContractNotes_TradeDate Between @FromDate and @ToDate
AND CustomerTrades_TradeDate Between @FromDate and @ToDate

AND ContractNotes_FinYear = @FinYear
AND CustomerTrades_FinYear = @FinYear
--AND ContractNotes_Number in (@CntrNo)
--AND CustomerTrades_ContractNoteNumber in (@CntrNo)
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T2
Where  #TbContractNote.CustomerTrades_productseriesid=T2.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T2.CustomerTrades_CustomerID
and  #TbContractNote.ContractNotes_TradeDate=T2.CustomerTrades_TradeDate
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!='S'
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))='D'

 end

If @SelectionType='2'-------Date Range
Begin
update #TbContractNote set  SellNetValue = Grp_SellNetValue From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
ABS(SUM(isnull(cast(CustomerTrades_NetValue as numeric (28,4)),0.00))) Grp_SellNetValue
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
and ltrim(rtrim(CustomerTrades_BrokerageType))='S'  
and ltrim(rtrim(CustomerTrades_BrokerageType))!='D'
and CustomerTrades_UnitPriceQuantity>0
AND ContractNotes_TradeDate Between @FromDate and @ToDate
AND CustomerTrades_TradeDate Between @FromDate and @ToDate 

AND ContractNotes_FinYear = @FinYear
AND CustomerTrades_FinYear = @FinYear 
--AND ContractNotes_Number in (@CntrNo)
--AND CustomerTrades_ContractNoteNumber in (@CntrNo)
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
and  #TbContractNote.ContractNotes_TradeDate=T1.CustomerTrades_TradeDate

and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))='S'
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!='D'

update #TbContractNote set  BuyNetValue = Grp_BuyNetValue From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
ABS(SUM(isnull(cast(CustomerTrades_NetValue as numeric (28,4)),0.00))) Grp_BuyNetValue
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
and CustomerTrades_UnitPriceQuantity<0 and ltrim(rtrim(CustomerTrades_BrokerageType))='S'
and ltrim(rtrim(CustomerTrades_BrokerageType))!='D'
AND ContractNotes_TradeDate Between @FromDate and @ToDate
AND CustomerTrades_TradeDate Between @FromDate and @ToDate

AND ContractNotes_FinYear = @FinYear
AND CustomerTrades_FinYear = @FinYear
--AND ContractNotes_Number in (@CntrNo)
--AND CustomerTrades_ContractNoteNumber in (@CntrNo)
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T2
Where  #TbContractNote.CustomerTrades_productseriesid=T2.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T2.CustomerTrades_CustomerID
and  #TbContractNote.ContractNotes_TradeDate=T2.CustomerTrades_TradeDate
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))='S'
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!='D'
print 1
 end


If @SelectionType='2'-------Date Range
Begin
update #TbContractNote set   sumalltaxbuy = sumtaxbuy From
(Select  CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
ABS(SUM(isnull(CustomerTrades_ServiceTaxOnBrkg+CustomerTrades_EduCessOnBrkg+CustomerTrades_HgrEduCessOnBrkg,0.00))) sumtaxbuy
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
and ltrim(rtrim(CustomerTrades_BrokerageType))!='S'  
and ltrim(rtrim(CustomerTrades_BrokerageType))='D'
and CustomerTrades_UnitPriceQuantity>0
AND ContractNotes_TradeDate Between @FromDate and @ToDate
AND CustomerTrades_TradeDate Between @FromDate and @ToDate 

AND ContractNotes_FinYear = @FinYear
AND CustomerTrades_FinYear = @FinYear 
--AND ContractNotes_Number in (@CntrNo)
--AND CustomerTrades_ContractNoteNumber in (@CntrNo)
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
and  #TbContractNote.ContractNotes_TradeDate=T1.CustomerTrades_TradeDate

and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!='S'
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))='D'

update #TbContractNote   set  sumalltaxsell = sumtaxsell From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
ABS(SUM(isnull(CustomerTrades_ServiceTaxOnBrkg+CustomerTrades_EduCessOnBrkg+CustomerTrades_HgrEduCessOnBrkg,0.00))) sumtaxsell
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
and CustomerTrades_UnitPriceQuantity<0 and ltrim(rtrim(CustomerTrades_BrokerageType))!='S'
and ltrim(rtrim(CustomerTrades_BrokerageType))='D'
AND ContractNotes_TradeDate Between @FromDate and @ToDate
AND CustomerTrades_TradeDate Between @FromDate and @ToDate

AND ContractNotes_FinYear = @FinYear
AND CustomerTrades_FinYear = @FinYear
--AND ContractNotes_Number in (@CntrNo)
--AND CustomerTrades_ContractNoteNumber in (@CntrNo)
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T2
Where  #TbContractNote.CustomerTrades_productseriesid=T2.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T2.CustomerTrades_CustomerID
and  #TbContractNote.ContractNotes_TradeDate=T2.CustomerTrades_TradeDate
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!='S'
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))='D'
print 1
 end
 
  If @SelectionType='2'------Date Range
 Begin
 update #TbContractNote set  customernetvaluebuy = Grp_SellNetValue From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
SUM(isnull(cast(CustomerTrades_NetValue as numeric (28,4)),0.00)) Grp_SellNetValue
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
--and ltrim(rtrim(CustomerTrades_BrokerageType))='S'  
--and ltrim(rtrim(CustomerTrades_BrokerageType))!='D'
--and CustomerTrades_UnitPriceQuantity>0
AND ContractNotes_TradeDate Between @FromDate and @ToDate
AND CustomerTrades_TradeDate Between @FromDate and @ToDate 

AND ContractNotes_FinYear = @FinYear
AND CustomerTrades_FinYear = @FinYear 
--AND ContractNotes_Number in (@CntrNo)
--AND CustomerTrades_ContractNoteNumber in (@CntrNo)
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
and  #TbContractNote.ContractNotes_TradeDate=T1.CustomerTrades_TradeDate

--and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))='S'
--and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!='D'
 End
 
  If @SelectionType='2'-------Date Range
 Begin
 update #TbContractNote set  customermarketvaluebuy = customermarketvaluebuy1 From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
SUM(isnull(cast(CustomerTrades_MarketValue as numeric (28,4)),0.00)) customermarketvaluebuy1
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and CustomerTrades_UnitPriceQuantity<0
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
AND ContractNotes_TradeDate Between @FromDate and @ToDate
AND CustomerTrades_TradeDate Between @FromDate and @ToDate 
AND ContractNotes_FinYear = @FinYear
AND CustomerTrades_FinYear = @FinYear 
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
and  #TbContractNote.ContractNotes_TradeDate=T1.CustomerTrades_TradeDate

update #TbContractNote set  customermarketvaluesell = customermarketvaluesell1 From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
SUM(isnull(cast(CustomerTrades_MarketValue as numeric (28,4)),0.00)) customermarketvaluesell1
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and CustomerTrades_UnitPriceQuantity>0
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
AND ContractNotes_TradeDate Between @FromDate and @ToDate
AND CustomerTrades_TradeDate Between @FromDate and @ToDate 
AND ContractNotes_FinYear = @FinYear
AND CustomerTrades_FinYear = @FinYear 
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
and  #TbContractNote.ContractNotes_TradeDate=T1.CustomerTrades_TradeDate

update #TbContractNote set  customerbuyunitpriceqnty = customerbuyunitpriceqnty1 From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
SUM(isnull(cast(CustomerTrades_UnitPriceQuantity as numeric (28,4)),0.00)) customerbuyunitpriceqnty1
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and CustomerTrades_UnitPriceQuantity<0
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
AND ContractNotes_TradeDate Between @FromDate and @ToDate
AND CustomerTrades_TradeDate Between @FromDate and @ToDate 
AND ContractNotes_FinYear = @FinYear
AND CustomerTrades_FinYear = @FinYear 
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
and  #TbContractNote.ContractNotes_TradeDate=T1.CustomerTrades_TradeDate


update #TbContractNote set  customersellunitpriceqnty = customersellunitpriceqnty1 From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
SUM(isnull(cast(CustomerTrades_UnitPriceQuantity as numeric (28,4)),0.00)) customersellunitpriceqnty1
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID=@Company and CustomerTrades_CompanyID=@Company
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID=@Segment and CustomerTrades_ExchangeSegment=@Segment
and ContractNotes_FinYear=CustomerTrades_FinYear
and CustomerTrades_UnitPriceQuantity>0
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid=@ExSegmentId
AND ContractNotes_Status Is Null
AND ContractNotes_TradeDate Between @FromDate and @ToDate
AND CustomerTrades_TradeDate Between @FromDate and @ToDate 
AND ContractNotes_FinYear = @FinYear
AND CustomerTrades_FinYear = @FinYear 
Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
and  #TbContractNote.ContractNotes_TradeDate=T1.CustomerTrades_TradeDate


 End
 
If @SelectionType='3'------Contract no wise
Begin
Select @Dsqlupdate=' update #TbContractNote set  sumalltaxbuy = sumtaxbuy From
(Select  CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
ABS(SUM(isnull(CustomerTrades_ServiceTaxOnBrkg+CustomerTrades_EduCessOnBrkg+CustomerTrades_HgrEduCessOnBrkg,0.00))) sumtaxbuy
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID='''+@Company+''' 
and CustomerTrades_CompanyID='''+@Company+'''
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID='''+@Segment+''' 
and CustomerTrades_ExchangeSegment='''+@Segment+'''
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid='''+@ExSegmentId+'''
AND ContractNotes_Status Is Null
and ltrim(rtrim(CustomerTrades_BrokerageType))!=''S''  
and ltrim(rtrim(CustomerTrades_BrokerageType))=''D''
and CustomerTrades_UnitPriceQuantity>0
AND ContractNotes_FinYear = '''+@FinYear+'''
AND CustomerTrades_FinYear = '''+@FinYear+''''
If @CntrNoType='Select'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number in ('+@CntrNo+')
									 AND CustomerTrades_ContractNoteNumber in ('+@CntrNo+')
									 
					 '
	End
	If @CntrNoType='Range'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number Between  '+@CntrNo+'
								     AND CustomerTrades_ContractNoteNumber Between  '+@CntrNo+'
									
					 '
	End

Select @Dsqlupdate=@Dsqlupdate+' Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
and  #TbContractNote.ContractNotes_TradeDate=T1.CustomerTrades_TradeDate

and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!=''S''
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))=''D'''
exec (@Dsqlupdate)
select @Dsqlupdate=''
Select @Dsqlupdate='update #TbContractNote set   sumalltaxsell = sumtaxsell From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
ABS(SUM(isnull(CustomerTrades_ServiceTaxOnBrkg+CustomerTrades_EduCessOnBrkg+CustomerTrades_HgrEduCessOnBrkg,0.00))) sumtaxsell
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID='''+@Company+''' 
and CustomerTrades_CompanyID='''+@Company+'''
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID='''+@Segment+'''
 and CustomerTrades_ExchangeSegment='''+@Segment+'''
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid='''+@ExSegmentId+'''
AND ContractNotes_Status Is Null
and CustomerTrades_UnitPriceQuantity<0 and ltrim(rtrim(CustomerTrades_BrokerageType))!=''S''
and ltrim(rtrim(CustomerTrades_BrokerageType))=''D''
AND ContractNotes_FinYear = '''+@FinYear+'''
AND CustomerTrades_FinYear = '''+@FinYear+''''
If @CntrNoType='Select'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number in ('+@CntrNo+')
									 AND CustomerTrades_ContractNoteNumber in ('+@CntrNo+')
									 
					 '
	End
	If @CntrNoType='Range'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number Between  '+@CntrNo+'
								     AND CustomerTrades_ContractNoteNumber Between  '+@CntrNo+'
									
					 '
	End

Select @Dsqlupdate=@Dsqlupdate+' Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T2
Where  #TbContractNote.CustomerTrades_productseriesid=T2.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T2.CustomerTrades_CustomerID
and  #TbContractNote.ContractNotes_TradeDate=T2.CustomerTrades_TradeDate
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!=''S''
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))=''D'' '
exec (@Dsqlupdate)
select @Dsqlupdate=''

select @Dsqlupdate='update #TbContractNote set  SellNetValuefordelivery = Grp_SellNetValue From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
ABS(SUM(isnull(cast(CustomerTrades_NetValue as numeric (28,4)),0.00))) Grp_SellNetValue
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID='''+@Company+'''
 and CustomerTrades_CompanyID='''+@Company+'''
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID='''+@Segment+''' 
and CustomerTrades_ExchangeSegment='''+@Segment+'''
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid='''+@ExSegmentId+'''
AND ContractNotes_Status Is Null
and ltrim(rtrim(CustomerTrades_BrokerageType))!=''S''  
and ltrim(rtrim(CustomerTrades_BrokerageType))=''D''
and CustomerTrades_UnitPriceQuantity>0
AND ContractNotes_FinYear = '''+@FinYear+'''
AND CustomerTrades_FinYear = '''+@FinYear+''''
If @CntrNoType='Select'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number in ('+@CntrNo+')
									 AND CustomerTrades_ContractNoteNumber in ('+@CntrNo+')
									 
					 '
	End
	If @CntrNoType='Range'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number Between  '+@CntrNo+'
								     AND CustomerTrades_ContractNoteNumber Between  '+@CntrNo+'
									
					 '
	End
Select @Dsqlupdate=@Dsqlupdate+' Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
and  #TbContractNote.ContractNotes_TradeDate=T1.CustomerTrades_TradeDate

and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!=''S''
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))=''D'''
exec (@Dsqlupdate)
select @Dsqlupdate=''
select @Dsqlupdate='update #TbContractNote set  BuyNetValuefordelivery = Grp_BuyNetValue From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
ABS(SUM(isnull(cast(CustomerTrades_NetValue as numeric (28,4)),0.00))) Grp_BuyNetValue
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID='''+@Company+'''
 and CustomerTrades_CompanyID='''+@Company+'''
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID='''+@Segment+''' 
and CustomerTrades_ExchangeSegment='''+@Segment+'''
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid='''+@ExSegmentId+'''
AND ContractNotes_Status Is Null
and CustomerTrades_UnitPriceQuantity<0 and ltrim(rtrim(CustomerTrades_BrokerageType))!=''S''
and ltrim(rtrim(CustomerTrades_BrokerageType))=''D''
AND ContractNotes_FinYear = '''+@FinYear+'''
AND CustomerTrades_FinYear = '''+@FinYear+''''
If @CntrNoType='Select'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number in ('+@CntrNo+')
									 AND CustomerTrades_ContractNoteNumber in ('+@CntrNo+')
									 
					 '
	End
	If @CntrNoType='Range'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number Between  '+@CntrNo+'
								     AND CustomerTrades_ContractNoteNumber Between  '+@CntrNo+'
									
					 '
	End
Select @Dsqlupdate=@Dsqlupdate+' Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T2
Where  #TbContractNote.CustomerTrades_productseriesid=T2.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T2.CustomerTrades_CustomerID
and  #TbContractNote.ContractNotes_TradeDate=T2.CustomerTrades_TradeDate
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!=''S''
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))=''D'''
exec (@Dsqlupdate)
select @Dsqlupdate=''

select @Dsqlupdate='update #TbContractNote set  customernetvaluebuy = Grp_SellNetValue From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
SUM(isnull(cast(CustomerTrades_NetValue as numeric (28,4)),0.00)) Grp_SellNetValue
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID='''+@Company+''' 
and CustomerTrades_CompanyID='''+@Company+'''
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID='''+@Segment+'''
 and CustomerTrades_ExchangeSegment='''+@Segment+'''
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid='''+@ExSegmentId+'''
AND ContractNotes_Status Is Null
AND ContractNotes_FinYear = '''+@FinYear+'''
AND CustomerTrades_FinYear = '''+@FinYear+''''
If @CntrNoType='Select'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number in ('+@CntrNo+')
									 AND CustomerTrades_ContractNoteNumber in ('+@CntrNo+')
									 
					 '
	End
	If @CntrNoType='Range'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number Between  '+@CntrNo+'
								     AND CustomerTrades_ContractNoteNumber Between  '+@CntrNo+'
									
					 '
	End
Select @Dsqlupdate=@Dsqlupdate+' Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
and  #TbContractNote.ContractNotes_TradeDate=T1.CustomerTrades_TradeDate'
exec (@Dsqlupdate)
select @Dsqlupdate=''



select @Dsqlupdate='update #TbContractNote set  SellNetValue = Grp_SellNetValue From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
ABS(SUM(isnull(cast(CustomerTrades_NetValue as numeric (28,4)),0.00))) Grp_SellNetValue
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID='''+@Company+'''
 and CustomerTrades_CompanyID='''+@Company+'''
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment 
and ContractNotes_SegmentID='''+@Segment+''' and CustomerTrades_ExchangeSegment='''+@Segment+'''
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid='''+@ExSegmentId+'''
AND ContractNotes_Status Is Null
and ltrim(rtrim(CustomerTrades_BrokerageType))=''S''  
and ltrim(rtrim(CustomerTrades_BrokerageType))!=''D''
and CustomerTrades_UnitPriceQuantity>0
AND ContractNotes_FinYear = '''+@FinYear+'''
AND CustomerTrades_FinYear = '''+@FinYear+''''
If @CntrNoType='Select'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number in ('+@CntrNo+')
									 AND CustomerTrades_ContractNoteNumber in ('+@CntrNo+')
									 
					 '
	End
	If @CntrNoType='Range'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number Between  '+@CntrNo+'
								     AND CustomerTrades_ContractNoteNumber Between  '+@CntrNo+'
									
					 '
	End
Select @Dsqlupdate=@Dsqlupdate+' Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
and  #TbContractNote.ContractNotes_TradeDate=T1.CustomerTrades_TradeDate

and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))=''S''
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!=''D'''
exec (@Dsqlupdate)
select @Dsqlupdate=''

select @Dsqlupdate='update #TbContractNote set  BuyNetValue = Grp_BuyNetValue From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
ABS(SUM(isnull(cast(CustomerTrades_NetValue as numeric (28,4)),0.00))) Grp_BuyNetValue
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID and ContractNotes_CompanyID='''+@Company+'''
and CustomerTrades_CompanyID='''+@Company+'''
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment and ContractNotes_SegmentID='''+@Segment+''' 
and CustomerTrades_ExchangeSegment='''+@Segment+'''
and ContractNotes_FinYear=CustomerTrades_FinYear
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid='''+@ExSegmentId+'''
AND ContractNotes_Status Is Null
and CustomerTrades_UnitPriceQuantity<0 and ltrim(rtrim(CustomerTrades_BrokerageType))=''S''
and ltrim(rtrim(CustomerTrades_BrokerageType))!=''D''
AND ContractNotes_FinYear = '''+@FinYear+'''
AND CustomerTrades_FinYear = '''+@FinYear+''''
If @CntrNoType='Select'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number in ('+@CntrNo+')
									 AND CustomerTrades_ContractNoteNumber in ('+@CntrNo+')
									 
					 '
	End
	If @CntrNoType='Range'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number Between  '+@CntrNo+'
								     AND CustomerTrades_ContractNoteNumber Between  '+@CntrNo+'
									
					 '
	End
Select @Dsqlupdate=@Dsqlupdate+' Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T2
Where  #TbContractNote.CustomerTrades_productseriesid=T2.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T2.CustomerTrades_CustomerID
and  #TbContractNote.ContractNotes_TradeDate=T2.CustomerTrades_TradeDate
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))=''S''
and ltrim(rtrim(#TbContractNote.CustomerTrades_BrokerageType))!=''D'''
exec (@Dsqlupdate)
select @Dsqlupdate=''

select @Dsqlupdate='update #TbContractNote set  customermarketvaluebuy = customermarketvaluebuy1 From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
SUM(isnull(cast(CustomerTrades_MarketValue as numeric (28,4)),0.00)) customermarketvaluebuy1
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID 
and ContractNotes_CompanyID='''+@Company+''' and CustomerTrades_CompanyID='''+@Company+'''
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment 
and ContractNotes_SegmentID='''+@Segment+''' and CustomerTrades_ExchangeSegment='''+@Segment+'''
and ContractNotes_FinYear=CustomerTrades_FinYear
and CustomerTrades_UnitPriceQuantity<0
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid='''+@ExSegmentId+'''
AND ContractNotes_Status Is Null
AND ContractNotes_FinYear = '''+@FinYear+'''
AND CustomerTrades_FinYear = '''+@FinYear+''''
If @CntrNoType='Select'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number in ('+@CntrNo+')
									 AND CustomerTrades_ContractNoteNumber in ('+@CntrNo+')
									 
					 '
	End
	If @CntrNoType='Range'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number Between  '+@CntrNo+'
								     AND CustomerTrades_ContractNoteNumber Between  '+@CntrNo+'
									
					 '
	End
Select @Dsqlupdate=@Dsqlupdate+' Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
and  #TbContractNote.ContractNotes_TradeDate=T1.CustomerTrades_TradeDate'
exec (@Dsqlupdate)
select @Dsqlupdate=''

select @Dsqlupdate='update #TbContractNote set  customermarketvaluesell = customermarketvaluesell1 From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
SUM(isnull(cast(CustomerTrades_MarketValue as numeric (28,4)),0.00)) customermarketvaluesell1
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID 
and ContractNotes_CompanyID='''+@Company+''' and CustomerTrades_CompanyID='''+@Company+'''
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment 
and ContractNotes_SegmentID='''+@Segment+''' and CustomerTrades_ExchangeSegment='''+@Segment+'''
and ContractNotes_FinYear=CustomerTrades_FinYear
and CustomerTrades_UnitPriceQuantity>0
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid='''+@ExSegmentId+'''
AND ContractNotes_Status Is Null
AND ContractNotes_FinYear = '''+@FinYear+'''
AND CustomerTrades_FinYear = '''+@FinYear+''''
If @CntrNoType='Select'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number in ('+@CntrNo+')
									 AND CustomerTrades_ContractNoteNumber in ('+@CntrNo+')
									 
					 '
	End
	If @CntrNoType='Range'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number Between  '+@CntrNo+'
								     AND CustomerTrades_ContractNoteNumber Between  '+@CntrNo+'
									
					 '
	End
Select @Dsqlupdate=@Dsqlupdate+' Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
and  #TbContractNote.ContractNotes_TradeDate=T1.CustomerTrades_TradeDate'
exec (@Dsqlupdate)
select @Dsqlupdate=''

select @Dsqlupdate='update #TbContractNote set  customerbuyunitpriceqnty = customerbuyunitpriceqnty1 From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
SUM(isnull(cast(CustomerTrades_UnitPriceQuantity as numeric (28,4)),0.00)) customerbuyunitpriceqnty1
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID 
and ContractNotes_CompanyID='''+@Company+''' and CustomerTrades_CompanyID='''+@Company+'''
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment 
and ContractNotes_SegmentID='''+@Segment+''' and CustomerTrades_ExchangeSegment='''+@Segment+'''
and ContractNotes_FinYear=CustomerTrades_FinYear
and CustomerTrades_UnitPriceQuantity<0
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid='''+@ExSegmentId+'''
AND ContractNotes_Status Is Null
AND ContractNotes_FinYear = '''+@FinYear+'''
AND CustomerTrades_FinYear = '''+@FinYear+''''
If @CntrNoType='Select'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number in ('+@CntrNo+')
									 AND CustomerTrades_ContractNoteNumber in ('+@CntrNo+')
									 
					 '
	End
	If @CntrNoType='Range'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number Between  '+@CntrNo+'
								     AND CustomerTrades_ContractNoteNumber Between  '+@CntrNo+'
									
					 '
	End
Select @Dsqlupdate=@Dsqlupdate+' Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
and  #TbContractNote.ContractNotes_TradeDate=T1.CustomerTrades_TradeDate'
exec (@Dsqlupdate)
select @Dsqlupdate=''

select @Dsqlupdate='update #TbContractNote set  customersellunitpriceqnty = customersellunitpriceqnty1 From
(Select distinct CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate,
SUM(isnull(cast(CustomerTrades_UnitPriceQuantity as numeric (28,4)),0.00)) customersellunitpriceqnty1
From Trans_ContractNotes,Trans_CustomerTrades,#TbClient,Master_Settlements
Where ContractNotes_CompanyID=CustomerTrades_CompanyID 
and ContractNotes_CompanyID='''+@Company+''' and CustomerTrades_CompanyID='''+@Company+'''
and ContractNotes_SegmentID=CustomerTrades_ExchangeSegment 
and ContractNotes_SegmentID='''+@Segment+''' and CustomerTrades_ExchangeSegment='''+@Segment+'''
and ContractNotes_FinYear=CustomerTrades_FinYear
and CustomerTrades_UnitPriceQuantity>0
and ContractNotes_TradeDate=CustomerTrades_TradeDate
and ContractNotes_SettlementNumber=CustomerTrades_SettlementNumber and Settlements_Number=ContractNotes_SettlementNumber and Settlements_Number=CustomerTrades_SettlementNumber
and ContractNotes_SettlementType=CustomerTrades_SettlementType and Settlements_TypeSuffix=ContractNotes_SettlementType and Settlements_TypeSuffix=CustomerTrades_SettlementType
and ContractNotes_Number=CustomerTrades_ContractNoteNumber
and ContractNotes_CustomerID=CustomerTrades_CustomerID and Client=ContractNotes_CustomerID and Client=CustomerTrades_CustomerID
and Settlements_ExchangeSegmentid='''+@ExSegmentId+'''
AND ContractNotes_Status Is Null
AND ContractNotes_FinYear = '''+@FinYear+'''
AND CustomerTrades_FinYear = '''+@FinYear+''''
If @CntrNoType='Select'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number in ('+@CntrNo+')
									 AND CustomerTrades_ContractNoteNumber in ('+@CntrNo+')
									 
					 '
	End
	If @CntrNoType='Range'
	Begin
		Select @Dsqlupdate=@Dsqlupdate+' AND ContractNotes_Number Between  '+@CntrNo+'
								     AND CustomerTrades_ContractNoteNumber Between  '+@CntrNo+'
									
					 '
	End
	Select @Dsqlupdate=@Dsqlupdate+' Group By CustomerTrades_productseriesid,CustomerTrades_CustomerID,CustomerTrades_TradeDate) as T1
Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
and  #TbContractNote.ContractNotes_TradeDate=T1.CustomerTrades_TradeDate'
exec (@Dsqlupdate)
select @Dsqlupdate=''

End



alter table #TbContractNote add netammount varchar(250)

declare @staticloop bigint,@dynamicloop bigint,@clientid1 varchar(20),@netamountforfo numeric(28,2),
@tradedate datetime,@dateloopstatic bigint,@dateloopdynamic bigint
				Create table #distinctclient1 (incrementid int identity,clientid varchar(20))
				insert into #distinctclient1
				select distinct ContractNotes_CustomerID from #TbContractNote
				create table #distinctdate(autoid int identity,datefield datetime)
				insert into #distinctdate
				select distinct ContractNotes_TradeDate from #TbContractNote
				
				select @staticloop=MAX(incrementid) from #distinctclient1
				select @dynamicloop=1
				while (@dynamicloop<=@staticloop)
					Begin
						
						Select @clientid1=clientid from #distinctclient1 where incrementid=@dynamicloop

						select @dateloopstatic=MAX(autoid) from #distinctdate
						select @dateloopdynamic=1
						while (@dateloopdynamic<=@dateloopstatic)
							Begin
								select @tradedate=datefield from #distinctdate where autoid=@dateloopdynamic
								select @netamountforfo=(select FOPositionSummary_NetBillAmount from Trans_FOPositionSummary
								where FOPositionSummary_SegmentID=@Segment and FOPositionSummary_CustomerExchangeID=@clientid1 
								and FOPositionSummary_Date=@tradedate)
								update #TbContractNote set netammount=case when @netamountforfo>0 then
								 dbo.format_number(cast(isnull(cast(@netamountforfo as numeric(28,2)),0.00) as varchar))+ ' (Payable to You)' when @netamountforfo<0 then
								 dbo.format_number(cast(isnull(cast(abs(@netamountforfo) as numeric(28,2)),0.00) as varchar)) +' (Receivable from You)'
								else cast(@netamountforfo as varchar) end
								where ContractNotes_CustomerID=@clientid1
								and ContractNotes_TradeDate=@tradedate
								select @dateloopdynamic=@dateloopdynamic+1
							End
						--and ComCustomerTrades_CustomerID=@clientid1
						select @dynamicloop=@dynamicloop+1
					End
	Declare @contractnotenumber varchar(10),@productid varchar(20),@contractstt numeric(18,2),@totalproductstt numeric(18,2)
	Alter table #TbContractNote add 
	buyquantityproductwise numeric(18,0),sellquantiyproductwise numeric(18,0),
	buymktvalproductwise numeric(18,2),sellmktvalproductwise numeric(18,2),brokerageproductwise numeric(18,2),
	buynetvalueproductwise numeric(18,2),sellnetvalueproductwise numeric(18,2),servicetaxproductwise numeric(18,2),
	netammountproductwise varchar(500),netsttroundoffclientwise numeric(18,2)
	Create table #distinctcontractnote (autoid int identity,contractnotenumber varchar(10),customerid varchar(10),productseriesid varchar(20))
	insert into #distinctcontractnote
	select distinct ContractNotes_Number,ContractNotes_CustomerID,CustomerTrades_ProductSeriesID from #TbContractNote
		update #TbContractNote set deliverystt=case when ContractNotes_STTMode='I'
		then  null else deliverystt end,
		Sttax_DifferenceStt=case when ContractNotes_STTMode='I' then null else Sttax_DifferenceStt end
	--select * from #distinctcontractnote
	select @staticloop=MAX(autoid) from #distinctcontractnote
				select @dynamicloop=1
				while (@dynamicloop<=@staticloop)
					Begin
						select @contractnotenumber=contractnotenumber from #distinctcontractnote where autoid=@dynamicloop
						select @clientid1=customerid from #distinctcontractnote where autoid=@dynamicloop
						select @productid=productseriesid from #distinctcontractnote where autoid=@dynamicloop
						
						
						update #TbContractNote set  buyquantityproductwise=buyproductwise From
						(Select  CustomerTrades_CustomerID,CustomerTrades_ContractNoteNumber,CustomerTrades_productseriesid,
						SUM(isnull(cast(abs(CustomerTrades_UnitPriceQuantity) as numeric (28,4)),0)) buyproductwise
						From Trans_CustomerTrades
						where CustomerTrades_ExchangeSegment=@Segment and CustomerTrades_ContractNoteNumber is not null
						and CustomerTrades_CompanyID=@Company and CustomerTrades_CustomerID=@clientid1
						and CustomerTrades_ProductSeriesID=@productid
						and CustomerTrades_UnitPriceQuantity<0
						and CustomerTrades_ContractNoteNumber=@contractnotenumber
						group by CustomerTrades_CustomerID,CustomerTrades_ContractNoteNumber,
						CustomerTrades_ProductSeriesID) as T1
						Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
						and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
						and  #TbContractNote.ContractNotes_Number=T1.CustomerTrades_ContractNoteNumber
						
						update #TbContractNote set  sellquantiyproductwise=tmpsellquantiyproductwise From
						(Select  CustomerTrades_CustomerID,CustomerTrades_ContractNoteNumber,CustomerTrades_productseriesid,
						SUM(isnull(cast(CustomerTrades_UnitPriceQuantity as numeric (28,4)),0)) tmpsellquantiyproductwise
						From Trans_CustomerTrades
						where CustomerTrades_ExchangeSegment=@Segment and CustomerTrades_ContractNoteNumber is not null
						and CustomerTrades_CompanyID=@Company and CustomerTrades_CustomerID=@clientid1
						and CustomerTrades_ProductSeriesID=@productid
						and CustomerTrades_UnitPriceQuantity>0
						and CustomerTrades_ContractNoteNumber=@contractnotenumber
						group by CustomerTrades_CustomerID,CustomerTrades_ContractNoteNumber,
						CustomerTrades_ProductSeriesID) as T1
						Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
						and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
						and  #TbContractNote.ContractNotes_Number=T1.CustomerTrades_ContractNoteNumber
						--and  #TbContractNote.CustomerTrades_UnitPriceQuantity>0
						--and  T1.tmpsellquantiyproductwise>0
						
						update #TbContractNote set  buymktvalproductwise=tmpbuymktvalproductwise From
						(Select  CustomerTrades_CustomerID,CustomerTrades_ContractNoteNumber,CustomerTrades_productseriesid,
						SUM(isnull(cast(CustomerTrades_MarketValue as numeric (28,4)),0)) tmpbuymktvalproductwise
						From Trans_CustomerTrades
						where CustomerTrades_ExchangeSegment=@Segment and CustomerTrades_ContractNoteNumber is not null
						and CustomerTrades_CompanyID=@Company and CustomerTrades_CustomerID=@clientid1
						and CustomerTrades_ProductSeriesID=@productid
						and CustomerTrades_UnitPriceQuantity<0
						and CustomerTrades_ContractNoteNumber=@contractnotenumber
						group by CustomerTrades_CustomerID,CustomerTrades_ContractNoteNumber,
						CustomerTrades_ProductSeriesID) as T1
						Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
						and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
						and  #TbContractNote.ContractNotes_Number=T1.CustomerTrades_ContractNoteNumber
						
						update #TbContractNote set  sellmktvalproductwise=tmpsellmktvalproductwise From
						(Select  CustomerTrades_CustomerID,CustomerTrades_ContractNoteNumber,CustomerTrades_productseriesid,
						SUM(isnull(cast(CustomerTrades_MarketValue as numeric (28,4)),0)) tmpsellmktvalproductwise
						From Trans_CustomerTrades
						where CustomerTrades_ExchangeSegment=@Segment and CustomerTrades_ContractNoteNumber is not null
						and CustomerTrades_CompanyID=@Company and CustomerTrades_CustomerID=@clientid1
						and CustomerTrades_ProductSeriesID=@productid
						and CustomerTrades_UnitPriceQuantity>0
						and CustomerTrades_ContractNoteNumber=@contractnotenumber
						group by CustomerTrades_CustomerID,CustomerTrades_ContractNoteNumber,
						CustomerTrades_ProductSeriesID) as T1
						Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
						and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
						and  #TbContractNote.ContractNotes_Number=T1.CustomerTrades_ContractNoteNumber
						--and  #TbContractNote.CustomerTrades_UnitPriceQuantity>0
						--and  T1.tmpsellmktvalproductwise>0
						
						update #TbContractNote set  servicetaxproductwise=
						Case When ContractNotes_ServiceTaxMode='I' Then Null Else tmpservicetaxproductwise End From
						(Select  CustomerTrades_CustomerID,CustomerTrades_ContractNoteNumber,CustomerTrades_productseriesid,
						SUM(isnull(cast(isnull(CustomerTrades_ServiceTaxOnBrkg,0)+isnull(CustomerTrades_EduCessOnBrkg,0)+isnull(CustomerTrades_HgrEduCessOnBrkg,0) as numeric (28,4)),0)) tmpservicetaxproductwise
						From Trans_CustomerTrades
						where CustomerTrades_ExchangeSegment=@Segment and CustomerTrades_ContractNoteNumber is not null
						and CustomerTrades_CompanyID=@Company and CustomerTrades_CustomerID=@clientid1
						and CustomerTrades_ProductSeriesID=@productid
						and CustomerTrades_ContractNoteNumber=@contractnotenumber
						group by CustomerTrades_CustomerID,CustomerTrades_ContractNoteNumber,
						CustomerTrades_ProductSeriesID) as T1
						Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
						and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
						and  #TbContractNote.ContractNotes_Number=T1.CustomerTrades_ContractNoteNumber
						
						update #TbContractNote set  brokerageproductwise=tmpbrokerageproductwise From
						(Select  CustomerTrades_CustomerID,CustomerTrades_ContractNoteNumber,CustomerTrades_productseriesid,
						SUM(isnull(cast(CustomerTrades_TotalBrokerage as numeric (28,4)),0)) tmpbrokerageproductwise
						From Trans_CustomerTrades
						where CustomerTrades_ExchangeSegment=@Segment and CustomerTrades_ContractNoteNumber is not null
						and CustomerTrades_CompanyID=@Company and CustomerTrades_CustomerID=@clientid1
						and CustomerTrades_ProductSeriesID=@productid
						and CustomerTrades_ContractNoteNumber=@contractnotenumber
						group by CustomerTrades_CustomerID,CustomerTrades_ContractNoteNumber,
						CustomerTrades_ProductSeriesID) as T1
						Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
						and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
						and  #TbContractNote.ContractNotes_Number=T1.CustomerTrades_ContractNoteNumber
						
						update #TbContractNote set  buynetvalueproductwise=tmpbuynetvalueproductwise From
						(Select  CustomerTrades_CustomerID,CustomerTrades_ContractNoteNumber,CustomerTrades_productseriesid,
						SUM(isnull(cast(abs(CustomerTrades_NetValue) as numeric (28,4)),0)) tmpbuynetvalueproductwise
						From Trans_CustomerTrades
						where CustomerTrades_ExchangeSegment=@Segment and CustomerTrades_ContractNoteNumber is not null
						and CustomerTrades_CompanyID=@Company and CustomerTrades_CustomerID=@clientid1
						and CustomerTrades_ProductSeriesID=@productid
						and CustomerTrades_UnitPriceQuantity<0
						and CustomerTrades_ContractNoteNumber=@contractnotenumber
						group by CustomerTrades_CustomerID,CustomerTrades_ContractNoteNumber,
						CustomerTrades_ProductSeriesID) as T1
						Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
						and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
						and  #TbContractNote.ContractNotes_Number=T1.CustomerTrades_ContractNoteNumber
						--and  #TbContractNote.CustomerTrades_UnitPriceQuantity<0
						--and  T1.tmpbuynetvalueproductwise<0  netsttroundoffclientwise
						
						update #TbContractNote set  sellnetvalueproductwise=tmpsellnetvalueproductwise From
						(Select  CustomerTrades_CustomerID,CustomerTrades_ContractNoteNumber,CustomerTrades_productseriesid,
						SUM(isnull(cast(CustomerTrades_NetValue as numeric (28,4)),0)) tmpsellnetvalueproductwise
						From Trans_CustomerTrades
						where CustomerTrades_ExchangeSegment=@Segment and CustomerTrades_ContractNoteNumber is not null
						and CustomerTrades_CompanyID=@Company and CustomerTrades_CustomerID=@clientid1
						and CustomerTrades_ProductSeriesID=@productid
						and CustomerTrades_UnitPriceQuantity>0
						and CustomerTrades_ContractNoteNumber=@contractnotenumber
						group by CustomerTrades_CustomerID,CustomerTrades_ContractNoteNumber,
						CustomerTrades_ProductSeriesID) as T1
						Where  #TbContractNote.CustomerTrades_productseriesid=T1.customertrades_productseriesid
						and  #TbContractNote.ContractNotes_CustomerID=T1.CustomerTrades_CustomerID 
						and  #TbContractNote.ContractNotes_Number=T1.CustomerTrades_ContractNoteNumber
						
						--select @contractstt=(select top 1 isnull(ContractNotes_STTAmount,0) from #TbContractNote 
						--where  ContractNotes_Number is not null
						-- and ContractNotes_CustomerID=@clientid1
						--and ContractNotes_Number=@contractnotenumber)
						
						--select @totalproductstt=(select sum(isnull(TotalSttPerProduct,0)) from #TbContractNote 
						--where  ContractNotes_Number is not null
						-- and ContractNotes_CustomerID=@clientid1
						--and ContractNotes_Number=@contractnotenumber
						----and CustomerTrades_ProductSeriesID=@productid
						--group by ContractNotes_CustomerID,ContractNotes_Number,
						--CustomerTrades_ProductSeriesID
						--)
						 
						update #TbContractNote set  netsttroundoffclientwise=@contractstt-@totalproductstt
						where  ContractNotes_Number is not null
						 and ContractNotes_CustomerID=@clientid1						
						and ContractNotes_Number=@contractnotenumber
						
						update #TbContractNote set  netammountproductwise=
						case when (isnull(sellnetvalueproductwise,0)-isnull(buynetvalueproductwise,0))<0
						then 
						(case when isnull(sellnetvalueproductwise,0)=0
						then
						dbo.format_number(cast(isnull(cast((isnull(sellnetvalueproductwise,0)+abs(isnull(buynetvalueproductwise,0)))+ISNULL(deliverystt,0)+ISNULL(Sttax_DifferenceStt,0)+ISNULL(servicetaxproductwise,0) as numeric(28,2)),0.00) as varchar))+ ' Dr'
						else 
						dbo.format_number(cast(isnull(cast(abs((isnull(sellnetvalueproductwise,0)-abs(isnull(buynetvalueproductwise,0))))+ISNULL(deliverystt,0)+ISNULL(Sttax_DifferenceStt,0)+ISNULL(servicetaxproductwise,0) as numeric(28,2)),0.00) as varchar))+ ' Dr'
						end)
						else
						dbo.format_number(cast(isnull(cast((isnull(sellnetvalueproductwise,0)-isnull(buynetvalueproductwise,0))-(ISNULL(deliverystt,0)+ISNULL(Sttax_DifferenceStt,0)+ISNULL(servicetaxproductwise,0)) as numeric(28,2)),0.00) as varchar))+ ' Cr'
						end
						where 
						ContractNotes_CustomerID=@clientid1
						and CustomerTrades_ProductSeriesID=@productid
						and ContractNotes_Number=@contractnotenumber
						
						
						--update #TbContractNote set  netammountproductwise=
						--case when (isnull(sellnetvalueproductwise,0)-isnull(buynetvalueproductwise,0))<0
						--then 
						--(case when isnull(sellnetvalueproductwise,0)=0
						--then
						--dbo.format_number(cast(isnull(cast((isnull(sellnetvalueproductwise,0)+abs(isnull(buynetvalueproductwise,0)))+ISNULL(servicetaxproductwise,0) as numeric(28,2)),0.00) as varchar))+ ' Dr'
						--else 
						--dbo.format_number(cast(isnull(cast(abs((isnull(sellnetvalueproductwise,0)-abs(isnull(buynetvalueproductwise,0))))+ISNULL(servicetaxproductwise,0) as numeric(28,2)),0.00) as varchar))+ ' Dr'
						--end)
						--else
						--dbo.format_number(cast(isnull(cast((isnull(sellnetvalueproductwise,0)-isnull(buynetvalueproductwise,0))-(ISNULL(servicetaxproductwise,0)) as numeric(28,2)),0.00) as varchar))+ ' Cr'
						--end
						--where 
						--ContractNotes_CustomerID=@clientid1
						--and CustomerTrades_ProductSeriesID=@productid
						--and ContractNotes_Number=@contractnotenumber
						
						

						select @dynamicloop=@dynamicloop+1
						
					End
					
					update #TbContractNote set deliverystt=case when deliverystt=0 then null else deliverystt end,
		Sttax_DifferenceStt=case when Sttax_DifferenceStt=0.0000 then null else Sttax_DifferenceStt end
		
	
		
		--select ContractNotes_STTMode,* from #TbContractNote
						--update #TbContractNote set  netsttroundoffclientwise=(SELECT SUM(ContractNotes_STTAmount-TotalSttPerProduct)
						--FROM #TbContractNote group by ContractNotes_CustomerID,ContractNotes_Number,
						--CustomerTrades_ProductSeriesID)
--select customermarketvaluesell,customermarketvaluebuy from #TbContractNote
---------------------end---------------------------------------
---------------------------------------------------------------
----------Select List
if @ClientType<>'Selected'
Begin
	Select ContractNotes_STTAmount,TotalSttPerProduct,
	case when right(cast(CustomerTrades_NetRatePerUnit as varchar(100)),2)='00'
		then SUBSTRING(cast(CustomerTrades_NetRatePerUnit as varchar(100)),1,LEN(cast(CustomerTrades_NetRatePerUnit as varchar(100)))-2) 
		else cast(CustomerTrades_NetRatePerUnit as varchar(100)) end as CustomerTrades_NetRatePerUnitwithdecimal,
		case when right(cast(CustomerTrades_UnitPrice as varchar(100)),2)='00'
		then SUBSTRING(cast(CustomerTrades_UnitPrice as varchar(100)),1,LEN(cast(CustomerTrades_UnitPrice as varchar(100)))-2) 
		else cast(CustomerTrades_UnitPrice as varchar(100)) end as CustomerTrades_UnitPricewithdecimal,
		case when right(cast(CustomerTrades_UNitBrokerage as varchar(100)),2)='00'
		then SUBSTRING(cast(CustomerTrades_UNitBrokerage as varchar(100)),1,LEN(cast(CustomerTrades_UNitBrokerage as varchar(100)))-2) 
		else cast(CustomerTrades_UNitBrokerage as varchar(100)) end as CustomerTrades_UNitBrokeragewithdecimal,
		case when CustomerTrades_NetValue<0 then dbo.format_number(CAST(abs(CustomerTrades_NetValue)+isnull(CustomerTrades_ServiceTaxOnBrkg,0)+isnull(CustomerTrades_EduCessOnBrkg,0)+isnull(CustomerTrades_HgrEduCessOnBrkg,0) as varchar))+ ' Dr' 
		else dbo.format_number(CAST(CustomerTrades_NetValue-(isnull(CustomerTrades_ServiceTaxOnBrkg,0)+isnull(CustomerTrades_EduCessOnBrkg,0)+isnull(CustomerTrades_HgrEduCessOnBrkg,0)) as varchar))+ ' Cr'  end as netvaluewithdebitcredit,
		
		*,Convert(varchar(11),ContractNotes_TradeDate,106) as TradeDate,ISNULL(customersellunitpriceqnty,0) as customersellunitpriceqnty1,
	ISNULL(customerbuyunitpriceqnty,0) as customerbuyunitpriceqnty1,
	abs(isnull(CustomerTrades_NetValue,0.00))+(abs(isnull(CustomerTrades_ServiceTaxOnBrkg,0.00))+abs(isnull(CustomerTrades_EduCessOnBrkg,0.00))+abs(isnull(CustomerTrades_HgrEduCessOnBrkg,0.00))) as a1
	,substring(OrderNumber,9,len(OrderNumber)) as OrderNumberWithOutFirstEight
	,ClientName +' ['+ClientUcc+']' as ClientNameUcc,
	REPLACE(ScripName,' ','') as concatScripName,
	case when (isnull(SellNetValue,0.00)-isnull(BuyNetValue,0.00))<0 then  (isnull(SellNetValue,0.00)-isnull(BuyNetValue,0.00)) else 0.00 end as BuyCalculatedNetValue,
case when (isnull(SellNetValue,0.00)-isnull(BuyNetValue,0.00))>0 then  (isnull(SellNetValue,0.00)-isnull(BuyNetValue,0.00)) else 0.00 end as SellCalculatedNetValue,



Case when Averagetype=1 then OrderNumber else '++++' end as avgordernumber,
--Case when Averagetype=1 then OrderEntryTime else '****' end as avgordertime,
Case when Averagetype=1 then TradeNumber else '++++' end as avgtradenumber,
--Case when Averagetype=1 then TradeEntryTime else '****' end as avgtradetime,
Case when Averagetype=1 then substring(OrderNumber,9,len(OrderNumber)) else '****' end as avgordernumberwithoutfirsteight,
--case when (isnull(SellNetValuefordelivery,0.00)-isnull(BuyNetValuefordelivery,0.00))<0 THEN abs(isnull(CustomerTrades_NetValue,0.00))+(abs(isnull(CustomerTrades_ServiceTaxOnBrkg,0.00))+abs(isnull(CustomerTrades_EduCessOnBrkg,0.00))+abs(isnull(CustomerTrades_HgrEduCessOnBrkg,0.00))) else 0.00 end as BuyCalculatedNetValueford,
--case when (isnull(SellNetValuefordelivery,0.00)-isnull(BuyNetValuefordelivery,0.00))>0 THEN abs(isnull(CustomerTrades_NetValue,0.00))+(abs(isnull(CustomerTrades_ServiceTaxOnBrkg,0.00))+abs(isnull(CustomerTrades_EduCessOnBrkg,0.00))+abs(isnull(CustomerTrades_HgrEduCessOnBrkg,0.00))) else 0.00 end as SellCalculatedNetValueford,
case when BuySaleFlag='1' THEN abs(isnull(BuyNetValuefordelivery,0.00))+(abs(isnull(sumalltaxsell,0.00))) else 0.00 end as BuyCalculatedNetValueford,
case when BuySaleFlag='2' THEN abs(isnull(SellNetValuefordelivery,0.00))+(abs(isnull(sumalltaxbuy,0.00))) else 0.00 end as SellCalculatedNetValueford,

(select top 1 isnull(Cnt_FirstName,'')+' '+isnull(Cnt_MiddleName,'')+' '+isnull(Cnt_LastName,'')from tbl_master_Contact where cnt_internalid=(select exch_ComplianceOfficer from tbl_Master_CompanyeXchange where exch_internalID=@Segment))As CompilanceofficerName,
(select top 1 isnull(phf_countrycode,'')+' '+isnull(phf_areacode,'')+' '+isnull(phf_phonenumber,'') from tbl_master_PhoneFax where phf_type = 'Mobile' and Phf_cntid=(select exch_ComplianceOfficer from tbl_Master_CompanyeXchange where exch_internalID=@Segment))As CompilanceofficerPhone,
(select top 1 isnull(eml_email,'') from tbl_master_Email where eml_cntid=(select exch_ComplianceOfficer from tbl_Master_CompanyeXchange where exch_internalID=@Segment))As CompilanceofficerEmail,
(CASE WHEN BuySaleFlag=1 THEN abs(isnull(CustomerTrades_NetValue,0.00))+(abs(isnull(CustomerTrades_ServiceTaxOnBrkg,0.00))+abs(isnull(CustomerTrades_EduCessOnBrkg,0.00))+abs(isnull(CustomerTrades_HgrEduCessOnBrkg,0.00)))
		 WHEN BuySaleFlag=2 THEN abs(isnull(CustomerTrades_NetValue,0.00))-(abs(isnull(CustomerTrades_ServiceTaxOnBrkg,0.00))+abs(isnull(CustomerTrades_EduCessOnBrkg,0.00))+abs(isnull(CustomerTrades_HgrEduCessOnBrkg,0.00)))
		 ELSE '0.00' END) as CalculatedTotal,
ROW_NUMBER()  OVER (Partition By contractnotes_customerid Order by ContractNotes_Number,ScripName,TradeEntryTime) RowID,
(CASE WHEN  BuySaleFlag=1 THEN 'BUY' WHEN BuySaleFlag=2 THEN 'SALE' ELSE '' END) as FLAG,
(Case when customernetvaluebuy >0 then 'yes' else 'NO' end) as dueto,
(case when #TbContractNote.ContractNotes_ServiceTaxMode='E' then 'Exclusive of Brokerage' else 'Inclusive Of Brokerage' end) as Data

	,SellNetValuefordelivery,BuyNetValuefordelivery,sumalltaxbuy,sumalltaxsell,
	case when LEN(ClientName)>30 then '['+ClientUcc+']'+ SUBSTRING(ClientName,1,30) else '['+ClientUcc+'] '+ClientName end as countername,
	case when LEN(ClientAddress1)>30 then ltrim(rtrim(SUBSTRING(ClientAddress1,1,30))) else ltrim(rtrim(ClientAddress1)) end as counterclientaddress1,
	case when LEN(ClientAddress2+ClientAddress3)>25 then ltrim(rtrim(SUBSTRING(ltrim(rtrim(ClientAddress2))+ltrim(rtrim(ClientAddress3)),1,25))) else ltrim(rtrim(ltrim(rtrim(ClientAddress2))+ltrim(rtrim(ClientAddress3)))) end as counterclientaddress23 ,
	case when LEN(ClientBranchAdd1+ClientBranchAdd2+ClientBranchAdd3)>30 then ltrim(rtrim(SUBSTRING(ltrim(rtrim(ClientBranchAdd1))+ltrim(rtrim(ClientBranchAdd2))+ltrim(rtrim(ClientBranchAdd3)),1,30))) else ltrim(rtrim(ltrim(rtrim(ClientBranchAdd1))+ltrim(rtrim(ClientBranchAdd2))+ltrim(rtrim(ClientBranchAdd3)))) end as counterclientbranchaddress ,ltrim(rtrim(ClientPan)) as ClientPan,
	(select dbo.fNumToWords(abs(ContractNotes_NetAmount))) as word,
	Case When ContractNotes_ServiceTaxMode='I' Then Null Else ContractNotes_TotalServiceTax End TotalServiceTax,
   Case When ContractNotes_ServiceTaxMode='I' Then Null Else ContractNotes_TotalEduCess End TotalEduCess,
   Case When ContractNotes_ServiceTaxMode='I' Then Null Else ContractNotes_TotalHgrEduCess End TotalHgrEduCess,
  Case When ContractNotes_ServiceTaxMode='I' then 'Inclusive' else '' end as sevtaxinclusive,
   Case When ContractNotes_STTMode='I' then 'Inclusive' else '' end as sttclusive
 
	 From #TbContractNote
	--Order By ContractNotes_Number,ScripName,CustomerTrades_BrokerageType,TradeEntryTime
	Order By ContractNotes_Number,Securitysymbol,isnull(Securityidentifier,'futcur'),isnull(SecuritySeries,'FF'),
	StrikePrice,SecurityExpiry--,ScripName
	,CustomerTrades_BrokerageType,TradeEntryTime
End
if @ClientType='Selected'
Begin
	Select case when right(cast(CustomerTrades_NetRatePerUnit as varchar(100)),2)='00'
		then SUBSTRING(cast(CustomerTrades_NetRatePerUnit as varchar(100)),1,LEN(cast(CustomerTrades_NetRatePerUnit as varchar(100)))-2) 
		else cast(CustomerTrades_NetRatePerUnit as varchar(100)) end as CustomerTrades_NetRatePerUnitwithdecimal,
		case when right(cast(CustomerTrades_UnitPrice as varchar(100)),2)='00'
		then SUBSTRING(cast(CustomerTrades_UnitPrice as varchar(100)),1,LEN(cast(CustomerTrades_UnitPrice as varchar(100)))-2) 
		else cast(CustomerTrades_UnitPrice as varchar(100)) end as CustomerTrades_UnitPricewithdecimal,
		case when right(cast(CustomerTrades_UNitBrokerage as varchar(100)),2)='00'
		then SUBSTRING(cast(CustomerTrades_UNitBrokerage as varchar(100)),1,LEN(cast(CustomerTrades_UNitBrokerage as varchar(100)))-2) 
		else cast(CustomerTrades_UNitBrokerage as varchar(100)) end as CustomerTrades_UNitBrokeragewithdecimal,
		case when CustomerTrades_NetValue<0 then dbo.format_number(CAST(abs(CustomerTrades_NetValue)+isnull(CustomerTrades_ServiceTaxOnBrkg,0)+isnull(CustomerTrades_EduCessOnBrkg,0)+isnull(CustomerTrades_HgrEduCessOnBrkg,0) as varchar))+ ' Dr' 
		else dbo.format_number(CAST(CustomerTrades_NetValue-(isnull(CustomerTrades_ServiceTaxOnBrkg,0)+isnull(CustomerTrades_EduCessOnBrkg,0)+isnull(CustomerTrades_HgrEduCessOnBrkg,0)) as varchar))+ ' Cr'  end as netvaluewithdebitcredit,
		
		*,Convert(varchar(11),ContractNotes_TradeDate,106) as TradeDate,ISNULL(customersellunitpriceqnty,0) as customersellunitpriceqnty1,
	ISNULL(customerbuyunitpriceqnty,0) as customerbuyunitpriceqnty1
	,substring(OrderNumber,9,len(OrderNumber)) as OrderNumberWithOutFirstEight
	,ClientName +' ['+ClientUcc+']' as ClientNameUcc,
	REPLACE(ScripName,' ','') as concatScripName,
	Case when Averagetype=1 then OrderNumber else '++++' end as avgordernumber,
--Case when Averagetype=1 then OrderEntryTime else '****' end as avgordertime,
Case when Averagetype=1 then TradeNumber else '++++' end as avgtradenumber,
Case when Averagetype=1 then substring(OrderNumber,9,len(OrderNumber)) else '****' end as avgordernumberwithoutfirsteight,

	
	case when (isnull(SellNetValue,0.00)-isnull(BuyNetValue,0.00))<0 then  (isnull(SellNetValue,0.00)-isnull(BuyNetValue,0.00)) else 0.00 end as BuyCalculatedNetValue,
case when (isnull(SellNetValue,0.00)-isnull(BuyNetValue,0.00))>0 then  (isnull(SellNetValue,0.00)-isnull(BuyNetValue,0.00)) else 0.00 end as SellCalculatedNetValue,
case when BuySaleFlag='1' THEN abs(isnull(BuyNetValuefordelivery,0.00))+(abs(isnull(sumalltaxsell,0.00))) else 0.00 end as BuyCalculatedNetValueford,
case when BuySaleFlag='2' THEN abs(isnull(SellNetValuefordelivery,0.00))+(abs(isnull(sumalltaxbuy,0.00))) else 0.00 end as SellCalculatedNetValueford,

--case when (isnull(SellNetValuefordelivery,0.00)-isnull(BuyNetValuefordelivery,0.00))<0 THEN abs(isnull(CustomerTrades_NetValue,0.00))+(abs(isnull(CustomerTrades_ServiceTaxOnBrkg,0.00))+abs(isnull(CustomerTrades_EduCessOnBrkg,0.00))+abs(isnull(CustomerTrades_HgrEduCessOnBrkg,0.00))) else 0.00 end as BuyCalculatedNetValueford,
--case when (isnull(SellNetValuefordelivery,0.00)-isnull(BuyNetValuefordelivery,0.00))>0 THEN abs(isnull(CustomerTrades_NetValue,0.00))+(abs(isnull(CustomerTrades_ServiceTaxOnBrkg,0.00))+abs(isnull(CustomerTrades_EduCessOnBrkg,0.00))+abs(isnull(CustomerTrades_HgrEduCessOnBrkg,0.00))) else 0.00 end as SellCalculatedNetValueford,


(select top 1 isnull(Cnt_FirstName,'')+' '+isnull(Cnt_MiddleName,'')+' '+isnull(Cnt_LastName,'')from tbl_master_Contact where cnt_internalid=(select exch_ComplianceOfficer from tbl_Master_CompanyeXchange where exch_internalID=@Segment))As CompilanceofficerName,
(select top 1 isnull(phf_countrycode,'')+' '+isnull(phf_areacode,'')+' '+isnull(phf_phonenumber,'') from tbl_master_PhoneFax where phf_type = 'Mobile' and Phf_cntid=(select exch_ComplianceOfficer from tbl_Master_CompanyeXchange where exch_internalID=@Segment))As CompilanceofficerPhone,
(select top 1 isnull(eml_email,'') from tbl_master_Email where eml_cntid=(select exch_ComplianceOfficer from tbl_Master_CompanyeXchange where exch_internalID=@Segment))As CompilanceofficerEmail,
(CASE WHEN BuySaleFlag=1 THEN abs(isnull(CustomerTrades_NetValue,0.00))+(abs(isnull(CustomerTrades_ServiceTaxOnBrkg,0.00))+abs(isnull(CustomerTrades_EduCessOnBrkg,0.00))+abs(isnull(CustomerTrades_HgrEduCessOnBrkg,0.00)))
		 WHEN BuySaleFlag=2 THEN abs(isnull(CustomerTrades_NetValue,0.00))-(abs(isnull(CustomerTrades_ServiceTaxOnBrkg,0.00))+abs(isnull(CustomerTrades_EduCessOnBrkg,0.00))+abs(isnull(CustomerTrades_HgrEduCessOnBrkg,0.00)))
		 ELSE '0.00' END) as CalculatedTotal,
ROW_NUMBER()  OVER (Partition By contractnotes_customerid Order by GrpName,ClientName,ContractNotes_Number,ScripName,TradeEntryTime) RowID,
(CASE WHEN  BuySaleFlag=1 THEN 'BUY' WHEN BuySaleFlag=2 THEN 'SALE' ELSE '' END) as FLAG,
(Case when customernetvaluebuy >0 then 'yes' else 'NO' end) as dueto,
(case when #TbContractNote.ContractNotes_ServiceTaxMode='E' then 'Exclusive of Brokerage' else 'Inclusive Of Brokerage' end) as Data,
SellNetValuefordelivery,BuyNetValuefordelivery,sumalltaxbuy,sumalltaxsell,
	--case when LEN(ClientName)>'45' then '['+ClientUcc+']'+ SUBSTRING(ClientName,1,45) else '['+ClientUcc+'] '+ClientName end as countername,
	--case when LEN(ClientAddress1)>'55' then SUBSTRING(ClientAddress1,1,55) else ClientAddress1 end as counterclientaddress1,
	--case when LEN(ClientAddress2+ClientAddress3)>'55' then SUBSTRING(ClientAddress2+ClientAddress3,1,55) else ClientAddress2+ClientAddress3 end as counterclientaddress23 ,
	--case when LEN(ClientBranchAdd1+ClientBranchAdd2+ClientBranchAdd3)>'55' then SUBSTRING(ClientBranchAdd1+ClientBranchAdd2+ClientBranchAdd3,1,55) else ClientBranchAdd1+ClientBranchAdd2+ClientBranchAdd3 end as counterclientbranchaddress
	case when LEN(ClientName)>30 then '['+ClientUcc+']'+ SUBSTRING(ClientName,1,30) else '['+ClientUcc+'] '+ClientName end as countername,
	case when LEN(ClientAddress1)>30 then ltrim(rtrim(SUBSTRING(ClientAddress1,1,30))) else ltrim(rtrim(ClientAddress1)) end as counterclientaddress1,
	case when LEN(ClientAddress2+ClientAddress3)>25 then ltrim(rtrim(SUBSTRING(ltrim(rtrim(ClientAddress2))+ltrim(rtrim(ClientAddress3)),1,25))) else ltrim(rtrim(ltrim(rtrim(ClientAddress2))+ltrim(rtrim(ClientAddress3)))) end as counterclientaddress23 ,
	case when LEN(ClientBranchAdd1+ClientBranchAdd2+ClientBranchAdd3)>30 then ltrim(rtrim(SUBSTRING(ltrim(rtrim(ClientBranchAdd1))+ltrim(rtrim(ClientBranchAdd2))+ltrim(rtrim(ClientBranchAdd3)),1,30))) else ltrim(rtrim(ltrim(rtrim(ClientBranchAdd1))+ltrim(rtrim(ClientBranchAdd2))+ltrim(rtrim(ClientBranchAdd3)))) end as counterclientbranchaddress 
	,(select dbo.fNumToWords (abs(ContractNotes_NetAmount))) as word,
	Case When ContractNotes_ServiceTaxMode='I' Then Null Else ContractNotes_TotalServiceTax End TotalServiceTax,
   Case When ContractNotes_ServiceTaxMode='I' Then Null Else ContractNotes_TotalEduCess End TotalEduCess,
   Case When ContractNotes_ServiceTaxMode='I' Then Null Else ContractNotes_TotalHgrEduCess End TotalHgrEduCess,
   Case When ContractNotes_ServiceTaxMode='I' then 'Inclusive' else '' end as sevtaxinclusive,
   Case When ContractNotes_STTMode='I' then 'Inclusive' else '' end as sttclusive
 




	 
	From #TbContractNote
	
	
	--Order By GrpName,ClientName,ContractNotes_Number,ScripName,CustomerTrades_BrokerageType,TradeEntryTime
	Order By GrpName,ClientName,ContractNotes_Number,
	ltrim(rtrim(Securitysymbol)),ltrim(rtrim(isnull(Securityidentifier,'futcur'))),
	ltrim(rtrim(isnull(SecuritySeries,'FF'))),
	StrikePrice,SecurityExpiry--,ScripName
	,CustomerTrades_BrokerageType,TradeEntryTime
End
End----------------------------Sp End

















