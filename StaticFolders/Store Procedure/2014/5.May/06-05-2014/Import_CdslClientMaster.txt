
ALTER Procedure [dbo].[Import_CdslClientMaster]
@FileXML nvarchar(max),
@UserID int
As
Begin
	Declare @DSql nVarchar(Max)
	Declare @ReadFrom as int
	DECLARE @XMLDoc int
	Declare @SpStartDateTime DateTime
	
	----Variable For Find Out Multiple Record Like POA,Nominee etc
	Declare @RowCounter int,@IDs int
	
	Set @SpStartDateTime=GETDATE()
	-----All PurposeCode Table Creation
	
	Create Table #Header
	(RecordIdentifier Char,DPID BigInt,TypeofDownload Char,BusinessDate_HistoryFromDate DateTime,
	SequenceNumber Char(3),SystemDateAndTime_HistoryTo DateTime,RowRef Varchar(10))

	Create Table #PurposeCode_0
	(PurposeCode int,BOId Char(16),BusinessDateOfTheTransaction DateTime,SourceDP int,OperatorId Char(6),
	SourceOfTheTransaction int,TransactionSystemDate DateTime,RowRef Varchar(10))

	Create Table #PurposeCode_1
	(PurposeCode int,TypeOfTransaction int,Title Char(10),Name Char(100),MiddleName Char(20),Last_SearchName Char(20),
	Suffix Char(10),Father_HusbandName Char(50),AddressLine1 Char(30),AddressLine2 Char(30),AddressLine3 Char(30),
	City Char(25),State Char(25),Country Char(25),PinCode Char(10),PrimePhoneIndicator Char(1),PrimePhoneNumber Char(17),
	AlternatePhoneIndicator Char(1),AlternatePhoneNumber Char(17),AdditionalPhones Char(100),Fax Char(17),PANExemptionCode Char(1),
	PAN_GIR Char(25),PANVerificationCode Char(1),ITCircle_Ward_District Char(15),EMailId Char(50),UserText1 Char(50),
	UserText2 Char(50),UserField3 int,BOAccountStatus int,FreezeSuspensionFlag int,BOCategory int,BOCustomerType int,
	BOSubStatus int,ProductCode int,ClearingCorporationId int,ClearingMemberId Char(8),StockExchange int,TradingId Char(8),
	BOStatementCycleCode Char(2),AccountCreationDate DateTime,DPInternalReferenceNumber Char(10),ConfirmationWaived Char(1),
	DateOfBirthOrigin DateTime,BOActivationDate DateTime,ElectronicConfirmation Char(1),ECSMandate Char(1),
	DividendBankAccountNo Char(20),DividendBankCode Char(12),DividendIFSCode Char(11),DividendBankCurrency int,
	DividendAccountType int,AnnualIncomeCode int,BeneficiaryTaxDeductionStatus int,BOSettlementPlanningFlag Char(1),
	EducationDegree Char(4),GeographicalCode Char(4),GroupCode Char(8),LanguageCode int,NationalityCode Char(3),
	Occupation Char(4),SecurityAccessCode int,SexCode Char(1),StaffRelative Char(1),StaffCode Char(10),
	RBIReferenceNumber Char(30),RBIApprovalDate DateTime,SEBIRegistrationNumber Char(24),ClosureApprovedDate DateTime, 
	ClosureDate DateTime,TransferBOId Char(16),BalanceTransfer Char(1),ClosureReasonCode int,ClosureInitiatedBy Char(1),
	ClosureRemark Char(100),UniqueIdentificationNumber Char(15),Filler Char(25),Filler1 Char(25),Filler2 Char(25),
	Filler3 Char(25),Filler4 Char(25),AnnualReport Char(1),Filler5 Char(1),Filler6 Char(1),Filler7 Char(1),Filler8 Char(1),RowRef Varchar(10))

	Create Table #PurposeCode_2
	(
	PurposeCode int,TypeOfTransaction int,Title Char(10),Name Char(100),MiddleName Char(20),LastSearchName Char(20),
	Suffix Char(10),FatherHusbandName Char(50),PANExemptionCode Char(1),PANGIR Char(25),PANVerificationCode Char(1),
	ITCircleWardDistrict Char(15),AddressLine1 Char(30),AddressLine2 Char(30),AddressLine3 Char(30),City Char(25),
	State Char(25),Country Char(25),PinCode Char(10),DateofSetup DateTime,DateofBirthSecondHolder DateTime,Email Char(50),
	UniqueIdentificationNumber Char(15),Filler Char(25),Filler1 Char(25),Filler2 Char(25),Filler3 Char(25),
	Filler4 Char(25),Filler5 Char(1),Filler6 Char(1),Filler7 Char(1),Filler8 Char(1),Filler9 Char(1),RowRef Varchar(10))

	Create Table #PurposeCode_3
	(
	PurposeCode int,TypeofTransaction int,Title Char(10),Name Char(100),MiddleName Char(20),LastSearchName Char(20),
	Suffix Char(10),FatherHusbandName Char(50),PANExemptionCode Char(1),PANGIR Char(25),PANVerificationCode Char(1),
	ITCircleWardDistWardDistrict Char(15),AddressLine1 Char(30),AddressLine2 Char(30),AddressLine3 Char(30),
	City Char(25),State Char(25),Country Char(25),PinCode Char(10),DateofSetup DateTime,DateofBirthThirdHolder DateTime,
	Email Char(50),UniqueIdentificationNumber Char(15),Filler Char(25),Filler2 Char(25),Filler3 Char(25),Filler4 Char(25),
	Filler5 Char(25),Filler6 Char(1),Filler7 Char(1),Filler8 Char(1),Filler9 Char(1),Filler10 Char(1),RowRef Varchar(10))

	Create Table #PurposeCode_4
	(
	PurposeCode int,TypeOfTransaction int,FreezeId int,FreezeInitiationDateTime DateTime,FreezeActivationDateTime DateTime,
	FreezeExpiryDateTime DateTime,FreezeInitiatedBy int,FrozenFor int,FreezeReasonCode int,FreezeStatus Char(1),
	FreezeActivationType int,FreezeSubOption int,FreezeRemarks Char(100),RowRef Varchar(10))

	Create Table #PurposeCode_5
	(
	PurposeCode int,TypeOfTransaction int,MasterPOAId Char(16),POARegistrarNumber Char(16),SetupDate DateTime,
	GPABPAFlag Char(1),EffectiveFormDate DateTime,EffectiveToDate DateTime,Remarks Char(50),HolderNumber int,
	POAStatus Char(1),RowRef Varchar(10))

	Create Table #PurposeCode_6
	(
	PurposeCode int,TypeOfTransaction int,Title Char(10),Name Char(100),MiddleName Char(20),LastSearchName Char(20),
	Suffix Char(10),FatherHusbandName Char(50),AddressLine1 Char(30),AddressLine2 Char(30),AddressLine3 Char(30),
	City Char(25),State Char(25),Country Char(25),PinCode Char(10),PrimePhoneIndicator Char(1),PrimePhoneNumber Char(17),
	AlternatePhoneIndicator Char(1),AlternatePhoneNumber Char(17),AdditionalPhones Char(100),Fax Char(17),
	PANGIR Char(25),ItCircleWardDistrict Char(15),EMailId Char(50),DateTimeOfSetup DateTime,DateTimeOfBirth DateTime,
	UserText1 Char(50),UserText2 Char(50),UserField3 int,Email Char(50),UniqueIdentificationNumber Char(15),
	Filler Char(25),Filler1 Char(25),Filler2 Char(25),Filler3 Char(25),Filler4 Char(25),Filler5 Char(1),
	Filler6 Char(1),Filler7 Char(1),Filler8 Char(1),Filler9 Char(1),RowRef Varchar(10))

	Create Table #PurposeCode_7
	( PurposeCode int,TypeOfTransaction int,Title Char(10),Name Char(100),MiddleName Char(20),LastSearchName Char(20),
	Suffix Char(10),FatherHusbandName Char(50),AddressLine1 Char(30),AddressLine2 Char(30),AddressLine3 Char(30),City Char(25),
	State Char(25),Country Char(25),PinCode Char(10),PrimePhoneIndicator Char(1),PrimePhoneNumber Char(17),AlternatePhoneIndicator Char(1),
	AlternatePhoneNumber Char(17),AdditionalPhones Char(100),Fax Char(17),PANGIR Char(25),ITCircleWardDistrict Char(15),
	EMailId Char(50),DateTimeOfSetup DateTime,DateTimeOfBirth DateTime,UserText1 Char(50),UserText2 Char(50),UserField3 int,
	Email Char(50),UniqueIdentificationNumber Char(15),Filler Char(25),Filler1 Char(25),Filler2 Char(25),Filler3 Char(25),Filler4 Char(25),
	Filler5 Char(1),Filler6 Char(1),Filler7 Char(1),Filler8 Char(1),Filler9 Char(1),RowRef Varchar(10))

	Create Table #PurposeCode_8
	(
	PurposeCode int, TypeOfTransaction int,Title Char(10),Name Char(100),MiddleName Char(20),
	LastSearchName Char(20),Suffix Char(10),FatherHusbandName Char(50),AddressLine1 Char(30),
	AddressLine2 Char(30),AddressLine3 Char(30),City Char(25),State Char(25),Country Char(25),PinCode Char(10),PrimePhoneIndicator Char(1),PrimePhoneNumber Char(17),AlternatePhoneIndicator Char(1),
	AlternatePhoneNumber Char(17),AdditionalPhones Char(100),Fax Char(17),PANGIR Char(25),ITCircleWardDistrict Char(15),EMailId Char(50),
	DateOfSetup DateTime,DateOfBirth DateTime,UserText1 Char(50),UserText2 Char(50),UserField3 int,Email Char(50),
	UniqueIdentificationNumber Char(15),Filler1 Char(25),Filler2 Char(25),Filler3 Char(25),Filler4 Char(25),
	Filler5 Char(25),Filler6 Char(1),Filler7 Char(1),Filler8 Char(1),Filler9 Char(1),Filler10 Char(1),RowRef Varchar(10))

	Create Table #PurposeCode_12(
	PurposeCode int,TypeOfTransaction int,AddressLine1 Char(30),AddressLine2 Char(30),AddressLine3 Char(30),
	City Char(25),State Char(25),Country Char(25),PinCode Char(10),PrimePhoneNumber Char(17),Fax Char(17),
	EMailId Char(50),RowRef Varchar(10))

	Create Table #PurposeCode_16(
	PurposeCode int,TypeOfTransaction int,MobileNumber Char(11),SetUpDate DateTime,EmailId Char(100),
	Remarks Char(100),PushPullFlag Char(1),RowRef Varchar(10))

	Create Table #PurposeCode_17(
	PurposeCode int,TypeOfTransaction int,CMId Char(8),ClientCode Char(12),
	RegistrationRemarks Char(100),RegistrationStatus Char(1),RegistrationApproveDateTimeByCm DateTime,
	RegistrationDeregistrationDateTime DateTime,RowRef Varchar(10))

	Create Table #PurposeCode_18(
	PurposeCode int,TypeOfTransaction int,NaSequenceNumber int,
	BOName Char(100),Remarks Char(50),RowRef Varchar(10))

	Create Table #PurposeCode_19(
	PurposeCode int,TypeOfTransaction int,ImageFileName Varchar(20),SignatureSetupDate DateTime,RowRef Varchar(10))

	Create Table #Tailer(
	RecordIdentifier Char(1),TotalNumberOfRecords int,BusinessDate DateTime,SystemDateAndTime Char(14),RowRef Varchar(10))

------------------------------------------------------------------
	
	
	EXEC SP_XML_PREPAREDOCUMENT @XMLDoc OUTPUT,@FileXML
	Select * into #BulkTable
	from OPENXML (@XMLDoc,'/NewDataSet/Import_DPB9',2)
	With (Col1 Varchar(500),Col2 Varchar(500),Col3 Varchar(500),Col4 Varchar(500),Col5 Varchar(500),
	Col6 Varchar(500),Col7 Varchar(500),Col8 Varchar(500),Col9 Varchar(500),Col10 Varchar(500),Col11 Varchar(500),
	Col12 Varchar(500),Col13 Varchar(500),Col14 Varchar(500),Col15 Varchar(500),Col16 Varchar(500),Col17 Varchar(500),
	Col18 Varchar(500),Col19 Varchar(500),Col20 Varchar(500),Col21 Varchar(500),Col22 Varchar(500),Col23 Varchar(500),
	Col24 Varchar(500),Col25 Varchar(500),Col26 Varchar(500),Col27 Varchar(500),Col28 Varchar(500),Col29 Varchar(500),
	Col30 Varchar(500),Col31 Varchar(500),Col32 Varchar(500),Col33 Varchar(500),Col34 Varchar(500),Col35 Varchar(500),
	Col36 Varchar(500),Col37 Varchar(500),Col38 Varchar(500),Col39 Varchar(500),Col40 Varchar(500),Col41 Varchar(500),Col42 Varchar(500),
	Col43 Varchar(500),Col44 Varchar(500),Col45 Varchar(500),Col46 Varchar(500),Col47 Varchar(500),Col48 Varchar(500),Col49 Varchar(500),
	Col50 Varchar(500),Col51 Varchar(500),Col52 Varchar(500),Col53 Varchar(500),Col54 Varchar(500),Col55 Varchar(500),Col56 Varchar(500),
	Col57 Varchar(500),Col58 Varchar(500),Col59 Varchar(500),Col60 Varchar(500),Col61 Varchar(500),Col62 Varchar(500),Col63 Varchar(500),
	Col64 Varchar(500),Col65 Varchar(500),Col66 Varchar(500),Col67 Varchar(500),Col68 Varchar(500),Col69 Varchar(500),
	Col70 Varchar(500),Col71 Varchar(500),Col72 Varchar(500),Col73 Varchar(500),Col74 Varchar(500),Col75 Varchar(500),
	Col76 Varchar(500),Col77 Varchar(500),Col78 Varchar(500),Col79 Varchar(500),Col80 Varchar(500),
	Col81 Varchar(500),Col82 Varchar(500),Col83 Varchar(500),Col84 Varchar(500),Col85 Varchar(500),
	Col86 Varchar(500),RowRef Varchar(500))

--Select * from #BulkTable
	
	----------------------------------------------Preparing Temp Table From Flat File----------------------------------------------
	----Header Record Insertion
	Insert into #Header
	Select Col1,Col2,Col3,
	--Date Making Accordingly
	Cast(SubString(Col4,5,4)+SubString(Col4,3,2)+SubString(Col4,1,2) as DateTime),
	Col5,
	--Date Time Making Accordingly
	Cast(SubString(Col6,5,4)+'-'+SubString(Col6,3,2)+'-'+SubString(Col6,1,2)+' '+
	SubString(Col6,9,2)+':'+SubString(Col6,11,2)+':'+SubString(Col6,13,2) as DateTime),
	RowRef
	from #BulkTable Where Col1='H'
	
	--Check Is File Is Importable
	Declare @TOD Varchar(10),@SqNo Varchar(10)
	Select @TOD=TypeOfDownload,@SqNo=SequenceNumber from #Header
	
	If(Ltrim(Rtrim(@TOD))='' And Ltrim(Rtrim(@SqNo))='')
	Begin
		-----******************************************************************************
	--	(PurposeCode int,BOId Char(16),BusinessDateOfTheTransaction DateTime,SourceDP int,OperatorId Char(6),
	--SourceOfTheTransaction int,TransactionSystemDate DateTime,RowRef Varchar(10))
		----PurPoseCode='00'
		Insert into #PurposeCode_0
		Select Col1,Col2,
		--Date Making Accordingly
		Case 
			When Ltrim(Rtrim(Col3))<>'' 
			Then
				Cast(SubString(Col3,5,4)+SubString(Col3,3,2)+SubString(Col3,1,2) as DateTime)
			Else ''
		End,
		Col4,Col5,Col6,
		--Date Time Making Accordingly
		Case 
			When Ltrim(Rtrim(Col7))<>'' 
			Then
				Cast(SubString(Col7,5,4)+'-'+SubString(Col7,3,2)+'-'+SubString(Col7,1,2)+' '+
				SubString(Col7,9,2)+':'+SubString(Col7,11,2)+':'+SubString(Col7,13,2) as DateTime)
			Else ''
		End,
		RowRef
		from #BulkTable Where Col1='00'
		
		--Select * from #PurposeCode_0
		-----******************************************************************************
		
		----PurPoseCode='01'
		--Dates Column 41,44,45,67,69,70
		
		Insert into #PurposeCode_1
		Select Col1,Col2,Col3,Col4,Col5,Col6,Col7,Col8,Col9,Col10,Col11,Col12,Col13,Col14,Col15,Col16,Col17,
			Col18,Col19,Col20,Col21,Col22,Col23,Col24,Col25,Col26,Col27,Col28,Col29,Col30,Col31,Col32,Col33,Col34,Col35,
			Col36,Col37,Col38,Col39,Col40,
			--Date Making Accordingly
			Case 
				When Ltrim(Rtrim(Col41))<>'' 
				Then
					Cast(SubString(Col41,5,4)+SubString(Col41,3,2)+SubString(Col41,1,2) as DateTime)
				Else ''
			End,
			Col42,Col43,
			--Date Making Accordingly
			Case 
				When Ltrim(Rtrim(Col44))<>'' 
				Then
					Cast(SubString(Col44,5,4)+SubString(Col44,3,2)+SubString(Col44,1,2) as DateTime)
				Else ''
			End,
			--Date Making Accordingly
			Case 
				When Ltrim(Rtrim(Col45))<>'' 
				Then
					Cast(SubString(Col45,5,4)+SubString(Col45,3,2)+SubString(Col45,1,2) as DateTime)
				Else ''
			End
			,Col46,Col47,Col48,Col49,Col50,Col51,Col52,Col53,Col54,Col55,Col56,
			Col57,Col58,Col59,Col60,Col61,Col62,Col63,Col64,Col65,Col66,
			--Date Making Accordingly
			Case 
				When Ltrim(Rtrim(Col67))<>'' 
				Then
					Cast(SubString(Col67,5,4)+SubString(Col67,3,2)+SubString(Col67,1,2) as DateTime)
				Else ''
			End,
			Col68,
			--Date Making Accordingly
			Case 
				When Ltrim(Rtrim(Col69))<>'' 
				Then
					Cast(SubString(Col69,5,4)+SubString(Col69,3,2)+SubString(Col69,1,2) as DateTime)
				Else ''
			End,
			--Date Making Accordingly
			Case 
				When Ltrim(Rtrim(Col70))<>'' 
				Then
					Cast(SubString(Col70,5,4)+SubString(Col70,3,2)+SubString(Col70,1,2) as DateTime)
				Else ''
			End,
			Col71,Col72,Col73,Col74,Col75,
			Col76,Col77,Col78,Col79,Col80,Col81,Col82,Col83,Col84,Col85,Col86,RowRef  
		from #BulkTable Where Col1='01'
		
		--Select * from #PurposeCode_1
		-----******************************************************************************
		
		
		----PurPoseCode='02'
		--Dates Column 20,21
		Insert into #PurposeCode_2
		Select Col1,Col2,Col3,Col4,Col5,Col6,Col7,Col8,Col9,Col10,Col11,Col12,Col13,Col14,Col15,Col16,Col17,
		Col18,Col19,
		--Date Making Accordingly
		Case 
			When Ltrim(Rtrim(Col20))<>'' 
			Then
				Cast(SubString(Col20,5,4)+SubString(Col20,3,2)+SubString(Col20,1,2) as DateTime)
			Else ''
		End,
		--Date Making Accordingly
		Case 
			When Ltrim(Rtrim(Col21))<>'' 
			Then
				Cast(SubString(Col21,5,4)+SubString(Col21,3,2)+SubString(Col21,1,2) as DateTime)
			Else ''
		End,
		Col22,Col23,Col24,Col25,Col26,Col27,Col28,Col29,Col30,Col31,Col32,Col33,RowRef
		From #BulkTable Where Col1='02'
			
		--Select * from #PurposeCode_2
		-----******************************************************************************
		
		----PurPoseCode='03'
		--Dates Column 20,21
		Insert into #PurposeCode_3
		Select Col1,Col2,Col3,Col4,Col5,Col6,Col7,Col8,Col9,Col10,Col11,Col12,Col13,Col14,Col15,Col16,Col17,
		Col18,Col19,
		--Date Making Accordingly
		Case 
			When Ltrim(Rtrim(Col20))<>'' 
			Then
				Cast(SubString(Col20,5,4)+SubString(Col20,3,2)+SubString(Col20,1,2) as DateTime)
			Else ''
		End,
		--Date Making Accordingly
		Case 
			When Ltrim(Rtrim(Col21))<>'' 
			Then
				Cast(SubString(Col21,5,4)+SubString(Col21,3,2)+SubString(Col21,1,2) as DateTime)
			Else ''
		End,
		Col22,Col23,Col24,Col25,Col26,Col27,Col28,Col29,Col30,Col31,Col32,Col33,RowRef
		From #BulkTable Where Col1='03'
			
		--Select * from #PurposeCode_3
		-----******************************************************************************
		
		----PurPoseCode='04'
		--Dates Column 4,5,6
		Insert into #PurposeCode_4
		Select Col1,Col2,Col3,
		--Date Making Accordingly
		Case 
			When Ltrim(Rtrim(Col4))<>'' 
			Then
				Cast(SubString(Col4,5,4)+SubString(Col4,3,2)+SubString(Col4,1,2) as DateTime)
			Else ''
		End,
		--Date Making Accordingly
		Case 
			When Ltrim(Rtrim(Col5))<>'' 
			Then
				Cast(SubString(Col5,5,4)+SubString(Col5,3,2)+SubString(Col5,1,2) as DateTime)
			Else ''
		End,--Date Making Accordingly
		Case 
			When Ltrim(Rtrim(Col6))<>'' 
			Then
				Cast(SubString(Col6,5,4)+SubString(Col6,3,2)+SubString(Col6,1,2) as DateTime)
			Else ''
		End,Col7,Col8,Col9,Col10,Col11,Col12,Col13,RowRef
		From #BulkTable Where Col1='04'
		
		---To find Out One FreezeDetail	From Multiple FreezeDetail
		
		Set @RowCounter=0
		
		Select * into #TempMultipleFreezeDetail From
		(Select  ROW_NUMBER()  OVER (ORDER BY  RowRef) As [Counter],* from #PurposeCode_4 Where RowRef in 
		(Select distinct RowRef From #PurposeCode_4 Group By RowRef Having COUNT(*)>1)) T1
		
		--Delete From #PurposeCode_4 Where RowRef in 
		--(Select distinct RowRef From #PurposeCode_4 Group By RowRef Having COUNT(*)>1)
			
		While(@RowCounter>0)
			Begin
				Select @IDs=RowRef From #TempMultipleFreezeDetail Where [Counter]=@RowCounter
				
				Insert into #PurposeCode_4
				Select Top 1 * from #TempMultipleFreezeDetail Where RowRef=@IDs
				
				Delete From #TempMultipleFreezeDetail Where RowRef=@IDs
				Select @RowCounter=COUNT(*) From #TempMultipleFreezeDetail
			End
		
		--Select  ROW_NUMBER()  OVER (ORDER BY  RowRef) As [Counter],* from #PurposeCode_4 Where #PurposeCode_4.RowRef in 
		--(Select distinct RowRef From #PurposeCode_4 Group By RowRef Having COUNT(*)>1)
		
		Drop Table #TempMultipleFreezeDetail
			
		--Select * from #PurposeCode_4
		-----******************************************************************************
		
		----PurPoseCode='05'
		--Dates Column 5,7,8
		Insert into #PurposeCode_5
		Select Col1,Col2,Col3,Col4,
		--Date Making Accordingly
		Case 
			When Ltrim(Rtrim(Col5))<>'' 
			Then
				Cast(SubString(Col5,5,4)+SubString(Col5,3,2)+SubString(Col5,1,2) as DateTime)
			Else ''
		End,
		Col6,
		--Date Making Accordingly
		Case 
			When Ltrim(Rtrim(Col7))<>'' 
			Then
				Cast(SubString(Col7,5,4)+SubString(Col7,3,2)+SubString(Col7,1,2) as DateTime)
			Else ''
		End,
		--Date Making Accordingly
		Case 
			When Ltrim(Rtrim(Col8))<>'' 
			Then
				Cast(SubString(Col8,5,4)+SubString(Col8,3,2)+SubString(Col8,1,2) as DateTime)
			Else ''
		End,Col9,Col10,Col11,RowRef
		From #BulkTable Where Col1='05'

		---To find Out One POA From Multiple POA
		
		Set @RowCounter=0
		
		Select * into #TempMultiplePOA From
		(Select  ROW_NUMBER()  OVER (ORDER BY  RowRef) As [Counter],* from #PurposeCode_5 Where RowRef in 
		(Select distinct RowRef From #PurposeCode_5 Group By RowRef Having COUNT(*)>1)) T1

	--Select * from #PurposeCode_5
		
		--Delete From #PurposeCode_5 Where RowRef in 
		--(Select distinct RowRef From #PurposeCode_5 Group By RowRef Having COUNT(*)>1)
				
		
		While(@RowCounter>0)
		Begin
			Select @IDs=RowRef From #TempMultiplePOA Where [Counter]=@RowCounter
			
			Insert into #PurposeCode_5
			Select Top 1 * from #TempMultiplePOA Where RowRef=@IDs
			
			Delete From #TempMultiplePOA Where RowRef=@IDs
			Select @RowCounter=COUNT(*) From #TempMultiplePOA
		End
		
		--Select  ROW_NUMBER()  OVER (ORDER BY  RowRef) As [Counter],* from #PurposeCode_5 Where #PurposeCode_5.RowRef in 
		--(Select distinct RowRef From #PurposeCode_5 Group By RowRef Having COUNT(*)>1)
		
		Drop Table #TempMultiplePOA
		
--Select * from #PurposeCode_5
		-----******************************************************************************
		
		----PurPoseCode='06'
		--Dates Column 25,26
		Insert into #PurposeCode_6
		Select Col1,Col2,Col3,Col4,Col5,Col6,Col7,Col8,Col9,Col10,Col11,Col12,Col13,Col14,Col15,Col16,Col17,
		Col18,Col19,Col20,Col21,Col22,Col23,Col24,--Date Making Accordingly
		Case 
			When Ltrim(Rtrim(Col25))<>'' 
			Then
				Cast(SubString(Col25,5,4)+SubString(Col25,3,2)+SubString(Col25,1,2) as DateTime)
			Else ''
		End,--Date Making Accordingly
		Case 
			When Ltrim(Rtrim(Col26))<>'' 
			Then
				Cast(SubString(Col26,5,4)+SubString(Col26,3,2)+SubString(Col26,1,2) as DateTime)
			Else ''
		End,
		Col27,Col28,Col29,Col30,Col31,Col32,Col33,Col34,Col35,
		Col36,Col37,Col38,Col39,Col40,Col41,RowRef
		From #BulkTable Where Col1='06'
	
--Select * From #PurposeCode_6		
		---To find Out One Nominee From Multiple Nominee
		
		Set @RowCounter=0
		
		Select * into #TempMultipleNominee From
		(Select  ROW_NUMBER()  OVER (ORDER BY  RowRef) As [Counter],* from #PurposeCode_6 Where RowRef in 
		(Select distinct RowRef From #PurposeCode_6 Group By RowRef Having COUNT(*)>1)) T1
		
		--Delete From #PurposeCode_6 Where RowRef in 
		--(Select distinct RowRef From #PurposeCode_6 Group By RowRef Having COUNT(*)>1)
			
		While(@RowCounter>0)
		Begin
			Select @IDs=RowRef From #TempMultipleNominee Where [Counter]=@RowCounter
			
			Insert into #PurposeCode_6
			Select Top 1 * from #TempMultipleNominee Where RowRef=@IDs
			
			Delete From #TempMultipleNominee Where RowRef=@IDs
			Select @RowCounter=COUNT(*) From #TempMultipleNominee
		End
		
		--Select  ROW_NUMBER()  OVER (ORDER BY  RowRef) As [Counter],* from #PurposeCode_5 Where #PurposeCode_5.RowRef in 
		--(Select distinct RowRef From #PurposeCode_5 Group By RowRef Having COUNT(*)>1)
		
		Drop Table #TempMultipleNominee	
		
--Select * from #PurposeCode_6

		-----******************************************************************************
		
		----PurPoseCode='07'
		--Dates Column 25,26
		Insert into #PurposeCode_7
		Select Col1,Col2,Col3,Col4,Col5,Col6,Col7,Col8,Col9,Col10,Col11,Col12,Col13,Col14,Col15,Col16,Col17,
		Col18,Col19,Col20,Col21,Col22,Col23,Col24,--Date Making Accordingly
		Case 
			When Ltrim(Rtrim(Col25))<>'' 
			Then
				Cast(SubString(Col25,5,4)+SubString(Col25,3,2)+SubString(Col25,1,2) as DateTime)
			Else ''
		End,--Date Making Accordingly
		Case 
			When Ltrim(Rtrim(Col26))<>'' 
			Then
				Cast(SubString(Col26,5,4)+SubString(Col26,3,2)+SubString(Col26,1,2) as DateTime)
			Else ''
		End,
		Col27,Col28,Col29,Col30,Col31,Col32,Col33,Col34,Col35,
		Col36,Col37,Col38,Col39,Col40,Col41,RowRef
		From #BulkTable Where Col1='07'
			
		--Select * from #PurposeCode_7
		-----******************************************************************************
		
		----PurPoseCode='08'
		--Dates Column 25,26
		Insert into #PurposeCode_8
		Select Col1,Col2,Col3,Col4,Col5,Col6,Col7,Col8,Col9,Col10,Col11,Col12,Col13,Col14,Col15,Col16,Col17,
		Col18,Col19,Col20,Col21,Col22,Col23,Col24,--Date Making Accordingly
		Case 
			When Ltrim(Rtrim(Col25))<>'' 
			Then
				Cast(SubString(Col25,5,4)+SubString(Col25,3,2)+SubString(Col25,1,2) as DateTime)
			Else ''
		End,--Date Making Accordingly
		Case 
			When Ltrim(Rtrim(Col26))<>'' 
			Then
				Cast(SubString(Col26,5,4)+SubString(Col26,3,2)+SubString(Col26,1,2) as DateTime)
			Else ''
		End,
		Col27,Col28,Col29,Col30,Col31,Col32,Col33,Col34,Col35,
		Col36,Col37,Col38,Col39,Col40,Col41,RowRef
		From #BulkTable Where Col1='08'
			
		--Select * from #PurposeCode_8
		-----******************************************************************************
		
		----PurPoseCode='12'
		--No Date Columns
		Insert into #PurposeCode_12
		Select Col1,Col2,Col3,Col4,Col5,Col6,Col7,Col8,Col9,Col10,Col11,Col12,RowRef
		From #BulkTable Where Col1='12'
			
		--Select * from #PurposeCode_12
		-----******************************************************************************

		----PurPoseCode='16'
		-- Date Columns 4
		Insert into #PurposeCode_16
		Select Col1,Col2,Col3,
		Case 
			When Ltrim(Rtrim(Col4))<>'' 
			Then
				Cast(SubString(Col4,5,4)+SubString(Col4,3,2)+SubString(Col4,1,2) as DateTime)
			Else ''
		End,Col5,Col6,Col7,RowRef
		From #BulkTable Where Col1='16'
			
		--Select * from #PurposeCode_16
		-----******************************************************************************
		
		----PurPoseCode='17'
		-- Date Columns 7,8
		Insert into #PurposeCode_17
		Select Col1,Col2,Col3,Col4,Col5,Col6,
		Case 
			When Ltrim(Rtrim(Col7))<>'' 
			Then
				Cast(SubString(Col7,5,4)+SubString(Col7,3,2)+SubString(Col7,1,2) as DateTime)
			Else ''
		End,
		Case 
			When Ltrim(Rtrim(Col8))<>'' 
			Then
				Cast(SubString(Col8,5,4)+SubString(Col8,3,2)+SubString(Col8,1,2) as DateTime)
			Else ''
		End,RowRef
		From #BulkTable Where Col1='17'
			
		--Select * from #PurposeCode_17
		-----******************************************************************************
		
		----PurPoseCode='18'
		-- No Date Columns
		Insert into #PurposeCode_18
		Select Col1,Col2,Col3,Col4,Col5,RowRef
		From #BulkTable Where Col1='18'
		
		---To find Out One AuthorizeSignatory	From Multiple AuthorizeSignatory
		
		Set @RowCounter=0
		
		Select * into #TempMultipleAuthorizeSignatory From
		(Select  ROW_NUMBER()  OVER (ORDER BY  RowRef) As [Counter],* from #PurposeCode_18 Where RowRef in 
		(Select distinct RowRef From #PurposeCode_18 Group By RowRef Having COUNT(*)>1)) T1
		
		--Delete From #PurposeCode_18 Where RowRef in 
		--(Select distinct RowRef From #PurposeCode_18 Group By RowRef Having COUNT(*)>1)
		
		While(@RowCounter>0)
		Begin
			Select @IDs=RowRef From #TempMultipleAuthorizeSignatory Where [Counter]=@RowCounter
			
			Insert into #PurposeCode_18
			Select Top 1 * from #TempMultipleAuthorizeSignatory Where RowRef=@IDs
			
			Delete From #TempMultipleAuthorizeSignatory Where RowRef=@IDs
			Select @RowCounter=COUNT(*) From #TempMultipleAuthorizeSignatory
		End
		
		--Select  ROW_NUMBER()  OVER (ORDER BY  RowRef) As [Counter],* from #PurposeCode_18 Where #PurposeCode_18.RowRef in 
		--(Select distinct RowRef From #PurposeCode_18 Group By RowRef Having COUNT(*)>1)
		
		Drop Table #TempMultipleAuthorizeSignatory
		
		
			
		--Select * from #PurposeCode_18
		-----******************************************************************************
		
		----PurPoseCode='19'
		-- Date Columns 4
		Insert into #PurposeCode_19
		Select Col1,Col2,Col3,
		Case 
			When Ltrim(Rtrim(Col4))<>'' 
			Then
				Cast(SubString(Col4,5,4)+SubString(Col4,3,2)+SubString(Col4,1,2) as DateTime)
			Else ''
		End,RowRef
		From #BulkTable Where Col1='19'
			
		--Select * from #PurposeCode_19
		-----******************************************************************************
		
		----PurPoseCode='T'
		-- Date Columns 3
		Insert into #Tailer
		Select Col1,Col2,
		Case 
			When Ltrim(Rtrim(Col3))<>'' 
			Then
				Cast(SubString(Col3,5,4)+SubString(Col3,3,2)+SubString(Col3,1,2) as DateTime)
			Else ''
		End,Col4,RowRef
		From #BulkTable Where Col1='T'
			
		--Select * from #Tailer
		---******************************************************************************

		--------------------------------------------End Preparing Temp Table From Flat File----------------------------------------------
		----------------------------------------Insertion Work in Physical Tables -----------------------------------------------------
	
		---Delete Already Exists Record To ReInsert it Again
		
			BEGIN TRANSACTION
			
			--Before Deleting Table Store BranchID (To Find Manually Mapped BranchID)
			Create Table #LastBranchIDs
			(BOID char(16),BranchID int)
			
			Insert into #LastBranchIDs
			Select CdslClients_BOID,CdslClients_BranchID from Master_CdslClients
			
			--Drop Table BOIDs
			Delete from Master_CdslClients Where CdslClients_BOID in (Select BOId from #PurposeCode_0)
			Delete from Master_CdslBOSignatory Where CdslBOSignatory_BOID in (Select BOId from #PurposeCode_0)
			Delete from Master_CdslPOAMapping Where CdslPOAMapping_BOID in (Select BOId from #PurposeCode_0)
			Delete from Master_CDSLNomineeRegister Where CDSLNomineeRegister_BenID in (Select SubString(BOId,9,8) from #PurposeCode_0)
			Delete From Master_CDSLBOFreezeDetail Where CDSLBOFreezeDetail_BOID in (Select BOId from #PurposeCode_0)
			
			IF @@ERROR != 0 
			BEGIN
				ROLLBACK TRANSACTION 
				RETURN
			END
			ELSE
			BEGIN----1
		
				------Insert into Master_CdslClients--------------------
				Insert into Master_CdslClients (
				--P0
				CdslClients_BOID,CdslClients_BenAccountNumber,CdslClients_DPID,CdslClients_ContactID,CdslClients_TradingUCC,
				--P1
				CdslClients_Title,CdslClients_FirstHolderName,CdslClients_FirstHolderMiddleName,CdslClients_FirstHolderLastName,
				CdslClients_Suffix,CdslClients_FirstHolderFatherHusbandName,CdslClients_BOAddress1,CdslClients_BOAddress2,
				CdslClients_BOAddress3,CdslClients_BOCity,CdslClients_BOState,CdslClients_BOCountry,CdslClients_BOPinCode,
				CdslClients_BOPhoneIndicator,CdslClients_BOPhone,CdslClients_BOAlternatePhoneIndicator,CdslClients_BOAlternatePhone,
				CdslClients_BOAdditionalPhones,CdslClients_BOFax,CdslClients_BOPANExemptionCode,CdslClients_FirstHolderPAN,
				CdslClients_BOPANVerificationCode,CdslClients_FirstHolderITCircle,CdslClients_EmailID,CDslClients_BOUserRemarks1,
				CDslClients_BOUserRemarks2,CdslClients_BOUserField3,CdslClients_AccountStatus,CdslClients_FreezeSuspensionFlag,
				CdslClients_AccountCategory,CdslClients_BOStatus,CdslClients_CustomerType,CdslClients_BOSubStatus,CdslClients_CustomerProductNo,
				CdslClients_ClearingCorpID,CdslClients_ClearingMemberID,CdslClients_ExchangeID,CdslClients_TradingID,
				CdslClients_BOStmtCycleCode,CdslClients_AccountCreationDate,CdslClients_SetupDate,CdslClients_DPIntRefNo,CdslClients_ConfirmationWaved,
				CdslClients_BODateOfBirth,CdslClients_AccountOpeningDate,CdslClients_ElectronicCofirmation,CdslClients_ElectronicDividend,
				CdslClients_BenBankAccountNo,CdslClients_BankAccountNo,CdslClients_BenBankCode,CdslClients_BankMICR,
				CdslClients_BankName,CdslClients_BankAddress1,CdslClients_DividendIFSCCode,
				CdslClients_DividendAccountCurrency,CdslClients_DividendCurrency,
				CdslClients_DividendBankAccountType,CdslClients_IncomeCode,CdslClients_TaxDeductionStatus,CdslClients_BOSettlementPlan,
				CdslClients_EducationCode,CdslClients_GeoAreaCode,CdslClients_GroupCode,CdslClients_LanguageCode,CdslClients_BONationality,
				CdslClients_ProfessionCode,CdslClients_SecurityAccessCode,CdslClients_BOSex,CdslClients_StaffRelativeOfDp,
				CdslClients_StaffCode,CdslClients_RBINo,CdslClients_RBIApprovalDate,CdslClients_SEBINo,CdslClients_ClosureApprovalDate,
				CdslClients_RequestClosureDate,
				CdslClients_AccountClosSuspDate,CdslClients_TransferBOID,CdslClients_BalanceTransfer,CdslClients_ClosureReasonCode,CdslClients_ClosureInitiatedBy,
				CdslClients_ClosureRemark,CdslClients_UniqueIdentification,CdslClients_AnnualReport,
				--P2
				CdslClients_SecondHolderTitle,CdslClients_SecondHolderName,CdslClients_SecondHolderMiddleName,CdslClients_SecondHolderLastName,
				CdslClients_SecondHolderSuffix,CdslClients_SecondHolderFatherHusbandName,CdslClients_SecondHolderPANExemptionCode,
				CdslClients_SecondHolderPAN,CdslClients_SecondHolderPANVerificationCode,CdslClients_SecondHolderITCircle,
				CdslClients_SecondHolderAddress1,CdslClients_SecondHolderAddress2,CdslClients_SecondHolderAddress3,CdslClients_SecondHolderCity,
				CdslClients_SecondHolderState,CdslClients_SecondHolderCountry,CdslClients_SecondHolderPinCode,CdslClients_SetupDateOfSecondHolder,
				CdslClients_SecondHolderDateOfBirth,CdslClients_SecondHolderEmailID,CdslClients_SecondHolderUniqueIdentification,
				--P3
				CdslClients_ThirdHolderTitle,CdslClients_ThirdHolderName,CdslClients_ThirdHolderMiddleName,CdslClients_ThirdHolderLastName,
				CdslClients_ThirdHolderSuffix,CdslClients_ThirdHolderFatherHusbandName,CdslClients_ThirdHolderPANExemptionCode,
				CdslClients_ThirdHolderPAN,CdslClients_ThirdHolderPANVerificationCode,CdslClients_ThirdHolderITCircle,CdslClients_ThirdHolderAddress1,
				CdslClients_ThirdHolderAddress2,CdslClients_ThirdHolderAddress3,CdslClients_ThirdHolderCity,CdslClients_ThirdHolderState,
				CdslClients_ThirdHolderCountry,CdslClients_ThirdHolderPinCode,CdslClients_SetupDateOfThirdHolder,CdslClients_ThirdHolderDateOfBirth,
				CdslClients_ThirdHolderEmailID,CdslClients_ThirdHolderUniqueIdentification,
				----p5
				--CdslClients_POAID,CdslClients_POAName,CdslClients_POAStartDate,CdslClients_POAEndDate,CdslClients_POAType,
				----P6
				--CdslClients_NomineeTitle,CdslClients_NomineeName,CdslClients_NomineeMiddleName,CdslClients_NomineeLastName,CdslClients_NomineeSuffix,
				--CdslClients_NomineeFatherHusbandName,CdslClients_NomineeAddress,CdslClients_NomineeAddress2,CdslClients_NomineeAddress3,
				--CdslClients_NomineeCity,CdslClients_NomineeState,CdslClients_NomineeCountry,CdslClients_NomineePinCode,CdslClients_NomineePhoneIndicator,
				--CdslClients_NomineePhoneNumber,CdslClients_NomineeAlternatePhoneIndicator,CdslClients_NomineeAlternatePhone,CdslClients_NomineeAdditionalPhone,
				--CdslClients_NomineeFAX,CdslClients_NomineePAN,CdslClients_NomineeITCircle,CdslClients_NomineeEmailID,CdslClients_SetupDateOfNominee,
				--CdslClients_NomineeDateOfBirth,CdslClients_NomineeRemark1,CdslClients_NomineeRemark2,CdslClients_NomineeRemark3,CdslClients_NomineeUniqueIdentification,
				--P7
				CdslClients_GuardianTitle,CdslClients_GuardianName,CdslClients_GuardianMiddleName,CdslClients_GuardianLastName,CdslClients_GuardianSuffix,
				CdslClients_GuardianFatherHusbandName,CdslClients_GuardianAddress1,CdslClients_GuardianAddress2,CdslClients_GuardianAddress3,CdslClients_GuardianCity,
				CdslClients_GuardianState,CdslClients_GuardianCountry,CdslClients_GuardianPinCode,CdslClients_GuardianPhoneIndicator,
				CdslClients_GuardianPhoneNumber,CdslClients_GuardianAlternatePhoneIndicator,CdslClients_GuardianAlternatePhone,CdslClients_GuardianAdditionalPhone,
				CdslClients_GuardianFAX,CdslClients_GuardianPAN,CdslClients_GuardianITCircle,CdslClients_GuardianEmailID,CdslClients_SetupDateOfGuardian,
				CdslClients_GuardianDateOfBirth,CdslClients_GuardianRemark1,CdslClients_GuardianRemark2,CdslClients_GuardianRemark3,
				CdslClients_GuardianUniqueIdentification,
				--P8
				CdslClients_NomGuardianTitle,CdslClients_NomGuardianName,CdslClients_NomGuardianMiddleName,CdslClients_NomGuardianLastName,
				CdslClients_NomGuardianSuffix,CdslClients_NomGuardianFatherHusbandName,CdslClients_NomGuardianAddress1,CdslClients_NomGuardianAddress2,
				CdslClients_NomGuardianAddress3,CdslClients_NomGuardianCity,CdslClients_NomGuardianState,CdslClients_NomGuardianCountry,
				CdslClients_NomGuardianPinCode,CdslClients_NomGuardianPhoneIndicator,CdslClients_NomGuardianPhoneNumber,CdslClients_NomGuardianAlternatePhoneIndicator,
				CdslClients_NomGuardianAlternatePhone,CdslClients_NomGuardianAdditionalPhone,CdslClients_NomGuardianFAX,CdslClients_NomGuardianPAN,
				CdslClients_NomGuardianITCircle,CdslClients_NomGuardianEmailID,CdslClients_SetupDateOfNomGuardian,CdslClients_NomGuardianDateOfBirth,
				CdslClients_NomGuardianRemark1,CdslClients_NomGuardianRemark2,CdslClients_NomGuardianRemark3,
				CdslClients_NomGuardianUniqueIdentification,
				--P12
				CdslClients_BOPermanentAdd1,CdslClients_BOPermanentAdd2,CdslClients_BOPermanentAdd3,CdslClients_BOPermanentCity,CdslClients_BOPermanentState,
				CdslClients_BOPermanentCountry,CdslClients_BOPermanentPinCode,CdslClients_BOPermanentPhone,CdslClients_BOPermamnentFax,
				--P16
				CdslClients_MobileNumber,CdslClients_SMSSetupDate,CdslClients_SMSRemarks,CdslClients_SMSPushPullFlag,
				--P17
				CdslClients_WebeXCMID,CdslClients_WebeXClientCode,CdslClients_WebeXRemarks,
				CdslClients_WebeXRegnStatus,CdslClients_WebeXRegnApprovDate,CdslClients_WebeXRegnDRegnDate,
				
				--Param
				CdslClients_CreateDate,CdslClients_CreateUser,CdslClients_BranchID)

				Select distinct

				--P0--------
				P0.BOId,SubString(P0.BOId,9,8),SubString(P0.BOId,1,8),
				(select Top 1 dpd_cntId from tbl_master_contactDPDetails Where 
							Ltrim(Rtrim(dpd_dpCode))+LTRIM(Rtrim(dpd_clientID))=P0.BOId) ContactID,
							
				(Select Top 1 cnt_UCC from tbl_master_contact Where 
							cnt_internalId in (select dpd_cntId from tbl_master_contactDPDetails Where 
							Ltrim(Rtrim(dpd_dpCode))+LTRIM(Rtrim(dpd_clientID))=P0.BOId)) TradingUCC,
				
				--P1----------
				p1.Title,Ltrim(Rtrim(p1.Name))+' '+Ltrim(Rtrim(p1.MiddleName))+' '+Ltrim(Rtrim(p1.Last_SearchName)),
				p1.MiddleName,p1.Last_SearchName,p1.Suffix,p1.Father_HusbandName,
				Ltrim(Rtrim(p1.AddressLine1)),Ltrim(Rtrim(p1.AddressLine2)),Ltrim(Rtrim(p1.AddressLine3)),
				Ltrim(Rtrim(p1.City)),Ltrim(Rtrim(p1.State)),Ltrim(Rtrim(p1.Country)),Ltrim(Rtrim(p1.PinCode)),
				p1.PrimePhoneIndicator,p1.PrimePhoneNumber,p1.AlternatePhoneIndicator,p1.AlternatePhoneNumber,p1.AdditionalPhones,p1.Fax,p1.PANExemptionCode,
				p1.PAN_GIR,p1.PANVerificationCode,p1.ITCircle_Ward_District,p1.EMailId,p1.UserText1,p1.UserText2,p1.UserField3,
				(Select Ltrim(Rtrim(CdslStaticData_Description)) From Master_CdslStaticDataCode 
				Where CdslStaticData_FieldName='Account Status' and CdslStaticData_TypeCode=p1.BOAccountStatus),
				p1.FreezeSuspensionFlag,
				(Select Ltrim(Rtrim(CdslStaticData_Description)) from Master_CdslStaticDataCode Where CdslStaticData_FieldName='BO Category'
				and CdslStaticData_TypeCode=p1.BOCategory) BOCategory,
				(Select Ltrim(Rtrim(CdslStaticData_Description)) From Master_CdslStaticDataCode Where CdslStaticData_FieldName='BO Status' and CdslStaticData_TypeCode=p1.BOCustomerType),
				p1.BOCustomerType,
				(Select Ltrim(Rtrim(CdslStaticData_Description)) From Master_CdslStaticDataCode Where CdslStaticData_FieldName='BO Status/Sub-Status' and CdslStaticData_TypeCode=p1.BOCustomerType
				and CdslStaticData_SubTypeCode=p1.BOSubStatus),
				p1.ProductCode,p1.ClearingCorporationId,p1.ClearingMemberId,
				Case When Ltrim(Rtrim(Cast(StockExchange as CHAR(2))))='0' Then '' Else  Ltrim(Rtrim(Cast(StockExchange as CHAR(2)))) End,
				p1.TradingId,p1.BOStatementCycleCode,p1.AccountCreationDate,p1.AccountCreationDate,
				p1.DPInternalReferenceNumber,p1.ConfirmationWaived,p1.DateOfBirthOrigin,p1.BOActivationDate,p1.ElectronicConfirmation,p1.ECSMandate,
				p1.DividendBankAccountNo,p1.DividendBankAccountNo,
				p1.DividendBankCode,p1.DividendBankCode,
				(Select Top 1 Left(bnk_bankName,12) from tbl_master_Bank Where bnk_micrno=p1.DividendBankCode),
				(Select Top 1 bnk_branchName from tbl_master_Bank Where bnk_micrno=p1.DividendBankCode),
				p1.DividendIFSCode,p1.DividendBankCurrency,p1.DividendBankCurrency,p1.DividendAccountType,p1.AnnualIncomeCode,
				(Select Top 1 Ltrim(Rtrim(CdslStaticData_Description)) From Master_CdslStaticDataCode Where CdslStaticData_FieldName='Tax Deduction Status' and CdslStaticData_TypeCode=p1.BeneficiaryTaxDeductionStatus),
				p1.BOSettlementPlanningFlag,p1.EducationDegree,p1.GeographicalCode,p1.GroupCode,p1.LanguageCode,p1.NationalityCode,
				p1.Occupation,p1.SecurityAccessCode,p1.SexCode,p1.StaffRelative,p1.StaffCode,p1.RBIReferenceNumber,p1.RBIApprovalDate,
				p1.SEBIRegistrationNumber,p1.ClosureApprovedDate,p1.ClosureApprovedDate,p1.ClosureDate,p1.TransferBOId,p1.BalanceTransfer,p1.ClosureReasonCode,
				p1.ClosureInitiatedBy,p1.ClosureRemark,p1.UniqueIdentificationNumber,p1.AnnualReport,

				--P2--------
				p2.Title,p2.Name,p2.MiddleName,p2.LastSearchName,p2.Suffix,p2.FatherHusbandName,p2.PANExemptionCode,
				p2.PANGIR,p2.PANVerificationCode,p2.ITCircleWardDistrict,
				Ltrim(Rtrim(p2.AddressLine1)),Ltrim(Rtrim(p2.AddressLine2)),Ltrim(Rtrim(p2.AddressLine3)),Ltrim(Rtrim(p2.City)),
				Ltrim(Rtrim(p2.State)),Ltrim(Rtrim(p2.Country)),Ltrim(Rtrim(p2.PinCode)),
				p2.DateofSetup,p2.DateofBirthSecondHolder,p2.Email,p2.UniqueIdentificationNumber,

				--P3---------------
				p3.Title,p3.Name,p3.MiddleName,p3.LastSearchName,p3.Suffix,p3.FatherHusbandName,p3.PANExemptionCode,p3.PANGIR,p3.PANVerificationCode,p3.
				ITCircleWardDistWardDistrict,p3.AddressLine1,p3.AddressLine2,p3.AddressLine3,p3.City,p3.State,p3.Country,p3.PinCode,p3.DateofSetup,p3.
				DateofBirthThirdHolder,p3.Email,p3.UniqueIdentificationNumber,

				----P5--------
				--P5.POARegistrarNumber,P5.MasterPOAId,p5.EffectiveFormDate,p5.EffectiveToDate,p5.GPABPAFlag,
				
				----P6-------
				--p6.Title,p6.Name,p6.MiddleName,p6.LastSearchName,p6.Suffix,p6.FatherHusbandName,
				--Ltrim(Rtrim(p6.AddressLine1)),Ltrim(Rtrim(p6.AddressLine2)),Ltrim(Rtrim(p6.AddressLine3)),
				--Ltrim(Rtrim(p6.City)),Ltrim(Rtrim(p6.State)),Ltrim(Rtrim(p6.Country)),Ltrim(Rtrim(p6.PinCode)),
				--p6.PrimePhoneIndicator,p6.PrimePhoneNumber,p6.AlternatePhoneIndicator,p6.AlternatePhoneNumber,p6.AdditionalPhones,p6.Fax,
				--p6.PANGIR,p6.ItCircleWardDistrict,p6.EMailId,p6.DateTimeOfSetup,p6.DateTimeOfBirth,p6.UserText1,p6.UserText2,p6.UserField3,
				--p6.UniqueIdentificationNumber,

				--P7-----------
				p7.Title,p7.Name,p7.MiddleName,p7.LastSearchName,p7.Suffix,p7.FatherHusbandName,
				Ltrim(Rtrim(p7.AddressLine1)),Ltrim(Rtrim(p7.AddressLine2)),Ltrim(Rtrim(p7.AddressLine3)),Ltrim(Rtrim(p7.City)),
				Ltrim(Rtrim(p7.State)),Ltrim(Rtrim(p7.Country)),Ltrim(Rtrim(p7.PinCode)),p7.PrimePhoneIndicator,p7.PrimePhoneNumber,p7.AlternatePhoneIndicator,p7.AlternatePhoneNumber,p7.
				AdditionalPhones,p7.Fax,p7.PANGIR,p7.ITCircleWardDistrict,p7.EMailId,p7.DateTimeOfSetup,p7.DateTimeOfBirth,p7.UserText1,p7.UserText2,p7.
				UserField3,p7.UniqueIdentificationNumber,

				--P8-----------
				p8.Title,p8.Name,p8.MiddleName,p8.LastSearchName,p8.Suffix,p8.FatherHusbandName,
				Ltrim(Rtrim(p8.AddressLine1)),Ltrim(Rtrim(p8.AddressLine2)),Ltrim(Rtrim(p8.AddressLine3)),Ltrim(Rtrim(p8.City)),
				Ltrim(Rtrim(p8.State)),Ltrim(Rtrim(p8.Country)),Ltrim(Rtrim(p8.PinCode)),p8.PrimePhoneIndicator,p8.PrimePhoneNumber,p8.AlternatePhoneIndicator,p8.AlternatePhoneNumber,p8.
				AdditionalPhones,p8.Fax,p8.PANGIR,p8.ITCircleWardDistrict,p8.EMailId,p8.DateOfSetup,p8.DateOfBirth,p8.UserText1,p8.UserText2,p8.UserField3,
				p8.UniqueIdentificationNumber,

				--P12----------
				Ltrim(Rtrim(p12.AddressLine1)),Ltrim(Rtrim(p12.AddressLine2)),Ltrim(Rtrim(p12.AddressLine3)),Ltrim(Rtrim(p12.City)),
				Ltrim(Rtrim(p12.State)),Ltrim(Rtrim(p12.Country)),Ltrim(Rtrim(p12.PinCode)),p12.PrimePhoneNumber,p12.Fax,

				--P16--------
				p16.MobileNumber,p16.SetUpDate,p16.Remarks,p16.PushPullFlag,

				--p17--------
				p17.CMId,p17.ClientCode,p17.RegistrationRemarks,p17.RegistrationStatus,p17.RegistrationApproveDateTimeByCm,
				p17.RegistrationDeregistrationDateTime,
				
				--Param--------
				GetDate(),@UserID,
				Case
					When (Select isnull((Select cnt_branchid from tbl_master_contact Where 
							cnt_internalId in (select Top 1 dpd_cntId from tbl_master_contactDPDetails Where 
							Ltrim(Rtrim(dpd_dpCode))+LTRIM(Rtrim(dpd_clientID))=P0.BOId)),0))=0
					Then (Select Branch_ID From tbl_master_branch Where branch_parentId=0)
					Else
						(Select cnt_branchid from tbl_master_contact Where 
							cnt_internalId in (select Top 1 dpd_cntId from tbl_master_contactDPDetails Where 
							Ltrim(Rtrim(dpd_dpCode))+LTRIM(Rtrim(dpd_clientID))=P0.BOId))
				End BranchID
				From
				#PurposeCode_0 P0
				Left Outer Join
				#PurposeCode_1 P1
				on P0.RowRef=P1.RowRef
				Left Outer Join 
				#PurposeCode_2 P2
				On P0.RowRef=P2.RowRef
				Left Outer Join 
				#PurposeCode_3 P3
				On P0.RowRef=P3.RowRef
				--Left Outer Join
				--#PurposeCode_5 P5
				--On P0.RowRef=P5.RowRef
				Left Outer Join
				#PurposeCode_6 P6
				On P0.RowRef=P6.RowRef
				Left Outer Join 
				#PurposeCode_7 P7
				on P0.RowRef=P7.RowRef
				Left Outer Join 
				#PurposeCode_8 P8
				On P0.RowRef=P8.RowRef
				Left Outer Join 
				#PurposeCode_12 P12
				on P0.RowRef=P12.RowRef
				Left Outer Join 
				#PurposeCode_16 p16
				On P0.RowRef=p16.RowRef
				Left Outer Join
				#PurposeCode_17 p17
				On P0.RowRef=p17.RowRef
				

				----Insert Data into tbl_master_phonefax----------------				
				insert into tbl_master_phonefax(phf_cntId,phf_entity,phf_phoneNumber,
												phf_faxNumber,CreateDate, CreateUser,phf_type)
				Select CdslClients_BOID,'CDSL Client',CdslClients_BOPhone,CdslClients_BOFax,
					   getdate() CreateDate,@UserID CreateUser,CdslClients_PhoneType
				From (Select p0.BOId CdslClients_BOID,p1.PrimePhoneNumber CdslClients_BOPhone,p1.Fax CdslClients_BOFax,
							 case when p1.PrimePhoneIndicator='M' then 'Mobile' else 'Residence' end as CdslClients_PhoneType				
					  From #PurposeCode_0 p0 Left Outer Join #PurposeCode_1 p1 ON p0.RowRef=p1.RowRef) tbl_p0_p1
				Where not exists(Select phf_cntId From tbl_master_phonefax
								 where tbl_master_phonefax.phf_cntId=tbl_p0_p1.CdslClients_BOID)
								 
								 
				
				----Update POA Detail in CdslClients Table ( Forcely Updating Only Single POA Detail
				-- It Will Randomly Update Any One POA Detail if Multiple POA )
				Update Master_CdslClients
				Set 
					CdslClients_POAID=P5.POARegistrarNumber,
					CdslClients_POAName=P5.MasterPOAId,
					CdslClients_POAStartDate=p5.EffectiveFormDate,
					CdslClients_POAEndDate=p5.EffectiveToDate,
					CdslClients_POAType=p5.GPABPAFlag
				From #PurposeCode_5 p5,#PurposeCode_0 p0
				Where p5.RowRef=p0.RowRef and HolderNumber=1
				and CdslClients_BOID=p0.BOId
				
				----Update Nominees Detail in CdslClients Table ( Forcely Updating Only Single Nominees Detail
				-- It Will Randomly Update Any One Nominees Detail if Multiple Nominees )
				Update Master_CdslClients
				Set
				CdslClients_NomineeTitle=p6.Title,CdslClients_NomineeName=p6.Name,CdslClients_NomineeMiddleName=p6.MiddleName,
				CdslClients_NomineeLastName=p6.LastSearchName,CdslClients_NomineeSuffix=p6.Suffix,
				CdslClients_NomineeFatherHusbandName=p6.FatherHusbandName,CdslClients_NomineeAddress=Ltrim(Rtrim(p6.AddressLine1)),
				CdslClients_NomineeAddress2=Ltrim(Rtrim(p6.AddressLine2)),CdslClients_NomineeAddress3=Ltrim(Rtrim(p6.AddressLine3)),
				CdslClients_NomineeCity=Ltrim(Rtrim(p6.City)),CdslClients_NomineeState=Ltrim(Rtrim(p6.State)),
				CdslClients_NomineeCountry=Ltrim(Rtrim(p6.Country)),CdslClients_NomineePinCode=Ltrim(Rtrim(p6.PinCode)),
				CdslClients_NomineePhoneIndicator=p6.PrimePhoneIndicator,CdslClients_NomineePhoneNumber=p6.PrimePhoneNumber,
				CdslClients_NomineeAlternatePhoneIndicator=p6.AlternatePhoneIndicator,CdslClients_NomineeAlternatePhone=p6.AlternatePhoneNumber,
				CdslClients_NomineeAdditionalPhone=p6.AdditionalPhones,CdslClients_NomineeFAX=p6.Fax,CdslClients_NomineePAN=p6.PANGIR,
				CdslClients_NomineeITCircle=p6.ItCircleWardDistrict,CdslClients_NomineeEmailID=p6.EMailId,
				CdslClients_SetupDateOfNominee=p6.DateTimeOfSetup,CdslClients_NomineeDateOfBirth=p6.DateTimeOfBirth,
				CdslClients_NomineeRemark1=p6.UserText1,CdslClients_NomineeRemark2=p6.UserText2,CdslClients_NomineeRemark3=p6.UserField3,
				CdslClients_NomineeUniqueIdentification=p6.UniqueIdentificationNumber
				From #PurposeCode_6 p6,#PurposeCode_0 p0
				Where p6.RowRef=p0.RowRef
				and CdslClients_BOID=p0.BOId
				
				
				----Insert Data into tbl_master_email----------------				
				insert into tbl_master_email (eml_entity,eml_cntId,eml_email,CreateDate,CreateUser)
				Select 'CDSL Client',CdslClients_BOID,CdslClients_EmailID,
						getdate() CreateDate,@UserID CreateUser
				From (Select p0.BOId CdslClients_BOID,p1.EMailId CdslClients_EmailID				
					  From #PurposeCode_0 p0 Left Outer Join #PurposeCode_1 p1 ON p0.RowRef=p1.RowRef) tbl_p0_p1
				Where not exists(Select eml_cntId From tbl_master_email
								 where tbl_master_email.eml_cntId=tbl_p0_p1.CdslClients_BOID)
				 				
				
				----Update Data into tbl_master_phonefax----------------
				Update tbl_master_phonefax 
				Set phf_phoneNumber=CdslClients_BOPhone,
					phf_faxNumber=CdslClients_BOFax,
					LastModifyDate=getdate(), 
					LastModifyUser=@UserID, 
					phf_type= CdslClients_PhoneType
				From (Select p0.BOId CdslClients_BOID,p1.PrimePhoneNumber CdslClients_BOPhone,p1.Fax CdslClients_BOFax,
							 case when p1.PrimePhoneIndicator='M' then 'Mobile' else 'Residence' end as CdslClients_PhoneType				
					  From #PurposeCode_0 p0 Left Outer Join #PurposeCode_1 p1 ON p0.RowRef=p1.RowRef) tbl_p0_p1
				join tbl_master_phonefax on tbl_p0_p1.CdslClients_BOID=tbl_master_phonefax.phf_cntId


				----Update Data into tbl_master_email----------------
				Update tbl_master_email 
				Set eml_email=CdslClients_EmailID,
					LastModifyDate=getdate(), 
					LastModifyUser=@UserID,
					eml_type='Personal'
				From (Select p0.BOId CdslClients_BOID,p1.EMailId CdslClients_EmailID				
					  From #PurposeCode_0 p0 Left Outer Join #PurposeCode_1 p1 ON p0.RowRef=p1.RowRef) tbl_p0_p1
				join tbl_master_email on tbl_p0_p1.CdslClients_BOID=tbl_master_email.eml_cntId
				

				IF @@ERROR != 0 
				BEGIN
					ROLLBACK TRANSACTION 
					RETURN
				END
				ELSE
				BEGIN-------2	

					--Insert Data For BOAuthorizedSignatory P18 From Signatory					
					Insert into Master_CdslBOSignatory
					(CDSLBOSignatory_BOID,CDSLBOSignatory_SequenceNumber,CDSLBOSignatory_BOName,CDSLBOSignatory_Remarks,CdslBOSignatory_CreateDateTime,
					CdslBOSignatory_CreateUser,cdslBOSignatory_DPID)
					
					Select 
					--P0
					P0.BOId,
					--P18
					P18.NaSequenceNumber,P18.BOName,P18.Remarks,
					--param
					GETDATE(),@UserID,SubString(P0.BOID,1,8)
					From 
					#PurposeCode_0 P0
					Left Outer Join
					#PurposeCode_18 P18
					on P0.RowRef=P18.RowRef
					
					IF @@ERROR != 0 
					BEGIN
						ROLLBACK TRANSACTION 
						RETURN
					END
					ELSE
					BEGIN-------3
			
						--Insert Data For POA P5 From POA
						Insert into Master_CdslPOAMapping
						(CDSLPOAMapping_BOID,CDSLPOAMapping_MasterID,CDSLPOAMapping_RegistrarNumber,CDSLPOAMapping_SetupDate,CDSLPOAMapping_GPABPAFlag,CDSLPOAMapping_FromDate,
						CDSLPOAMapping_ToDate,CDSLPOAMapping_Remarks,CDSLPOAMapping_HolderNumber,CDSLPOAMapping_Status,CdslPOAMapping_CreateDateTime,CdslPOAMapping_CreateUser,
						CDslPOAMapping_DPID)
						Select 
						--P0
						P0.BOId,
						--P5
						MasterPOAId,POARegistrarNumber,SetupDate,GPABPAFlag,EffectiveFormDate,EffectiveToDate,Remarks,HolderNumber,POAStatus,
						--param
						GETDATE(),@UserID,SubString(P0.BOID,1,8)
						From 
						#PurposeCode_0 P0
						Left Outer Join
						#PurposeCode_5 P5
						on P0.RowRef=P5.RowRef
						IF @@ERROR != 0 
						BEGIN
							ROLLBACK TRANSACTION 
							RETURN
						END
						ELSE
						BEGIN-------4
	
							--Insert Data For Nominees And Gaurdians P6 for Nominees and P8 For Gaurdians
						 INSERT INTO Master_CDSLNomineeRegister
						   (CDSLNomineeRegister_DPID,CDSLNomineeRegister_BenID,CDSLNomineeRegister_ResgitrationNumber
						   ,CDSLNomineeRegister_RegistrationDate,CDSLNomineeRegister_Name,CDSLNomineeRegister_Address
						   ,CDSLNomineeRegister_Country,CDSLNomineeRegister_State,CDSLNomineeRegister_City
						   ,CDSLNomineeRegister_PinCode,CDSLNomineeRegister_IsMinor,CDSLNomineeRegister_Fax
						   ,CDSLNomineeRegister_PANGIR,CDSLNomineeRegister_DOBMinor,CDSLNomineeRegister_PhoneResidence
						   ,CDSLNomineeRegister_PhoneMobile,CDSLNomineeRegister_Email,CDSLNomineeRegister_ITCircleWardDistrict
						   ,CDSLNomineeRegister_GuardianName,CDSLNomineeRegister_GuardianAddress,CDSLNomineeRegister_GuardianCountry
						   ,CDSLNomineeRegister_GuardianState,CDSLNomineeRegister_GuardianCity,CDSLNomineeRegister_GuardianPinCode
						   ,CDSLNomineeRegister_GaurdianPhoneResidence,CDSLNomineeRegister_GaurdianPhoneMobile,CDSLNomineeRegister_GuardianFax
						   ,CDSLNomineeRegister_GaurdianPANGIR,CDSLNomineeRegister_GaurdianResgitrationNumber,CDSLNomineeRegister_GaurdainRegistrationDate
						   ,CDSLNomineeRegister_GaurdianEmail,CDSLNomineeRegister_GaurdianITCircleWardDistrict,CDSLNomineeRegister_NoNominationFlag
						   ,CDSLNomineeRegister_Remarks,CDSLNomineeRegister_CreateUser,CDSLNomineeRegister_CreateDate
						   ,CDSLNomineeRegister_ModifyUser,CDSLNomineeRegister_ModifyDate)
							
						Select
							--P0 Field For DPID and BenID--------
							SubString(P0.BOId,1,8) DPID
							,SubString(P0.BOId,9,8) BenID
							--P6 Field For Nominee Detail----------------
							,P6.UniqueIdentificationNumber ResgitrationNumber
							,P6.DateTimeOfSetup RegistrationDate
							,Ltrim(Rtrim(isnull(P6.Title,'')))+' '+Ltrim(Rtrim(isnull(P6.Name,'')))+' '+Ltrim(Rtrim(isnull(P6.MiddleName,'')))+' '+Ltrim(Rtrim(isnull(P6.LastSearchName,''))) Name
							,Ltrim(Rtrim(isnull(P6.AddressLine1,'')))+' '+Ltrim(Rtrim(isnull(P6.AddressLine2,'')))+' '+Ltrim(Rtrim(isnull(P6.AddressLine3,''))) Address
							,(Select cou_id from Tbl_Master_Country Where Ltrim(Rtrim(cou_country))=Ltrim(Rtrim(P6.Country))) NomCountry
							,(Select id from Tbl_Master_State Where Ltrim(Rtrim(State))=Ltrim(Rtrim(P6.State)) and countryId=
							(Select cou_id from Tbl_Master_Country Where Ltrim(Rtrim(cou_country))=Ltrim(Rtrim(P6.Country)))) NomState
							,(Select Top 1 city_id from tbl_Master_City Where Ltrim(Rtrim(city_name))=Ltrim(Rtrim(P6.City)) and
							  state_id=(Select id from Tbl_Master_State Where Ltrim(Rtrim(State))=Ltrim(Rtrim(P6.State)))) NomCity
							,P6.PinCode
							,''IsMinor
							,P6.Fax --Need To Add
							,P6.PANGIR--Need To Add
							,P6.DateTimeOfBirth DOBMinor
							,P6.PrimePhoneNumber PhoneResidence
							,Ltrim(Rtrim(isnull(P6.AlternatePhoneNumber,'')))+','+Ltrim(Rtrim(isnull(P6.AdditionalPhones,''))) PhoneMobile
							,P6.EMailId+','+P6.Email Email
							,P6.ItCircleWardDistrict--Need To Add
							---P8 Field For Gaurdian Detail-------------
							,Ltrim(Rtrim(isnull(P8.Title,'')))+' '+Ltrim(Rtrim(isnull(P8.Name,'')))+' '+Ltrim(Rtrim(isnull(P8.MiddleName,'')))+' '+Ltrim(Rtrim(isnull(P8.LastSearchName,''))) GuardianAddress --Need To Add 
							,Ltrim(Rtrim(isnull(P8.AddressLine1,'')))+' '+Ltrim(Rtrim(isnull(P8.AddressLine2,'')))+' '+Ltrim(Rtrim(isnull(P8.AddressLine3,''))) GuardianAddress
							,(Select cou_id from Tbl_Master_Country Where Ltrim(Rtrim(cou_country))=Ltrim(Rtrim(P8.Country))) GardCountry
							,(Select id from Tbl_Master_State Where Ltrim(Rtrim(State))=Ltrim(Rtrim(P8.State)) and countryId=
							(Select cou_id from Tbl_Master_Country Where Ltrim(Rtrim(cou_country))=Ltrim(Rtrim(P8.Country)))) GardState
							,(Select city_id from tbl_Master_City Where Ltrim(Rtrim(City_Name))=Ltrim(Rtrim(P8.City)) and
							State_ID=(Select id from Tbl_Master_State Where Ltrim(Rtrim(State))=Ltrim(Rtrim(P8.State)))) GardCity
							,P8.PinCode GuardianPinCode
							,P8.PrimePhoneNumber GuardianPhoneResidence
							,Ltrim(Rtrim(isnull(P8.AlternatePhoneNumber,'')))+','+Ltrim(Rtrim(isnull(P8.AdditionalPhones,''))) GuardianPhoneMobile
							,P8.Fax GaurdianFax--Need To Add
							,P8.PANGIR GardianPAN--Need To Add
							,P8.UniqueIdentificationNumber GaurdianResgitrationNumber--Need To Add
							,P8.DateOfSetup GuardianRegistrationDate--Need To Add
							,P8.EMailId+','+P8.Email GaurdianEmail
							,P8.ItCircleWardDistrict GardianITCircleWardDistrict
							,null NoNominationFlag
							,null Remarks
							,@UserID CreateUser
							,GetDate() CreateDate
							,@UserID ModifyUser
							,GetDate() ModifyDate
							From
							#PurposeCode_0 P0
							Left Outer Join
							#PurposeCode_6 P6
							on P0.RowRef=P6.RowRef
							Left Outer Join 
							#PurposeCode_8 P8
							On P0.RowRef=P8.RowRef
							
							IF @@ERROR != 0 
							BEGIN
								ROLLBACK TRANSACTION 
								RETURN
							END
							Else 
							Begin---5
									
								Insert into Master_CdslBoFreezeDetail
								(CDSLBOFreezeDetail_DPID,CDSLBOFreezeDetail_BOID,
								CDSLBOFreezeDetail_FreezeID,CDSLBOFreezeDetail_InitiationDate,
								CDSLBOFreezeDetail_ActivationDate,CDSLBOFreezeDetail_ExpiryDate,CDSLBOFreezeDetail_InitiatedBy,
								CDSLBOFreezeDetail_FrozenFor,CDSLBOFreezeDetail_ReasonCode,CDSLBOFreezeDetail_Status,
								CDSLBOFreezeDetail_ActivationType,CDSLBOFreezeDetail_SubOption,CDSLBOFreezeDetail_Remarks)
								Select
								--P0 Field For DPID and BenID
								SubString(P0.BOId,1,8) DPID,SubString(P0.BOId,9,8) BenID,
								--P4 Field For Freeze Ac Detail 
								P4.FreezeId ,P4.FreezeInitiationDateTime ,P4.FreezeActivationDateTime,P4.FreezeExpiryDateTime ,
								P4.FreezeInitiatedBy ,P4.FrozenFor ,P4.FreezeReasonCode ,P4.FreezeStatus ,P4.FreezeActivationType ,
								P4.FreezeSubOption ,P4.FreezeRemarks 
								From
								#PurposeCode_0 P0
								Left Outer Join
								#PurposeCode_4 P4
								on P0.RowRef=P4.RowRef
								IF @@ERROR != 0 
								BEGIN
									ROLLBACK TRANSACTION 
									RETURN
								END
								Else
								Begin----6
									
									----Delete All ID Those Are in ContactDpDetails
									Delete from #LastBranchIDs
									Where BOID not in 
									(Select BOID From #PurposeCode_0
									Where BOID not in 
									(Select Ltrim(Rtrim(dpd_dpCode))+LTRIM(Rtrim(dpd_ClientID)) 
									from tbl_master_contactDPDetails))
									
									---Update Mapped BranchID
						
									Update Master_CdslClients Set CdslClients_BranchID=#LastBranchIDs.BranchID
									From #LastBranchIDs
									Where CdslClients_BOID=BOID
									
									IF @@ERROR != 0 
									BEGIN
										ROLLBACK TRANSACTION 
										RETURN
									END	
									BEGIN
										COMMIT TRANSACTION --finally, Commit the transaction if Success..
									END
								End---6
							End---5
						End---4
					End---3
				End---2
			End---1
		EXEC SP_XML_REMOVEDOCUMENT @XMLDoc

		--Return BOID For Updating Signature 
		Select distinct BOID from #PurposeCode_0
		
	End
	Else
	Begin
		Select 'File Is Not Importable.Please Choose DPS8 Format File!!!'
	End	
	Drop Table #Tailer
	Drop Table #Header
	Drop Table #PurposeCode_0
	Drop Table #PurposeCode_1
	Drop Table #PurposeCode_12
	Drop Table #PurposeCode_16
	Drop Table #PurposeCode_17
	Drop Table #PurposeCode_18
	Drop Table #PurposeCode_19
	Drop Table #PurposeCode_2
	Drop Table #PurposeCode_3
	Drop Table #PurposeCode_4
	Drop Table #PurposeCode_5
	Drop Table #PurposeCode_6
	Drop Table #PurposeCode_7
	Drop Table #PurposeCode_8


	
End

