

ALTER Procedure [dbo].[Report_AccountConfirmationSummary]
@FromDate varchar(max),
@ToDate varchar(max),
@ClientId varchar(max),
@BranchHierchy varchar(max),
@GrpType varchar(25),
@Grpid varchar(max),
@Segment varchar(50),
@CompanyID varchar(15),
@Finyear varchar(50),
@HeaderId varchar(30),
@FooterId varchar(30),
@Signature image

As
Begin
Set NoCount On
--exec [Report_AccountConfirmationSummary] '2012-04-01','2012-09-20','ALL','191','BRANCH','All','24,25','COR0000002','2012-2013','NA','NA',null
------DECLARE @Hierchy VARCHAR(MAX)
------SELECT @Hierchy='1,129,130,131,133,134,135,137,139,142,143,145,149,150,153,157,161,162,164,166,167,169,170,174,178,180,185,186,188,189,190,191,192,193
------,196,197,198,199,200,204'
------Exec [Report_AccountConfirmationSummary]
------'2011-04-01'---@FromDate varchar(35)
------,'2011-07-28'---@ToDate varchar(max),
------,'All'---@ClientId varchar(max),
------,@Hierchy----@BranchHierchy varchar(max),
------,'Branch'----@GrpType varchar(25),
------,'All'----@Grpid varchar(max), 
------,'All'----@Segment varchar(50),
------,'COR0000002'----@CompanyID varchar(15),
------,'2011-2012'-----@Finyear varchar(50)

--------------------------Variable Declare  For Calculation Begin
DECLARE @sql varchar(max)
Declare @NextFinYear varchar(15)
Declare @NotToSelectClient varchar(max)
Select @NextFinYear=cast(right(@Finyear,4) as varchar)+'-'+cast(right(@Finyear,4)+1 as varchar)

----------MaxTranDate Find
Create Table #TbMaxClient(Client varchar(15))
----For Client Detail
CREATE TABLE #TABCLIENT (CLIENTID1 VARCHAR(15),SegId varchar(30),SegmentName varchar(15),
CLIENTNAME1 VARCHAR(max),GROUPID1 bigint,GRPNAME1 VARCHAR(max))

--------All Transaction Fetch
CREATE table #TbTransaction (CustomerID varchar(15),ProductSeriesID varchar(max),
SegmentID varchar(30),SourceSegmentId varchar(30),Quantity numeric(28,0),
SettlementNumberS varchar(30),SettlementNumberT varchar(30),
OwnAccountS varchar(30),OwnAccountT varchar(30))

--------Transaction Filter
CREATE Table #TbTransactionFilter (CustomerID varchar(15),ProductSeriesID varchar(max),
SegmentID varchar(20),SourceSegmentId varchar(20),Quantity numeric(28,0),
SettlementNumberS varchar(30),SettlementNumberT varchar(30),OwnAccountS varchar(30),OwnAccountT varchar(30)
,AssetId varchar(30),AssetName varchar(max),SegName varchar(30),MainProductSeriesID varchar(max))

------Sebi and Compliance Officer
Create Table #TbSebi(TmCode varchar(30),SebiNo varchar(50),OfficerId varchar(30),OfficerClientid varchar(30),
					 OfficerName varchar(max),OfficerEmilId varchar(200),OfficerPhNo varchar(100),officeradd1 varchar(max),officeradd2 varchar(max),
					 officeradd3 varchar(max),officercity varchar(25),officerpin varchar(15))
------Main Record Insert
Create Table #MainTb(ClientId varchar(250),ProductId varchar(30),EnailId varchar(200),ClientPanCard varchar(30),
					 Description varchar(max),TabVisible varchar(max),StOrder int,
					 Amnt numeric(28,2),Qty numeric(28,0),ClosePrice numeric(28,2),
					 TabVisibleRate varchar(max),TabVal varchar(max),SegmentCombine varchar(max),Clientphone varchar(50))

--------------------------Variable Declare  For Calculation End
	----------AllBut Selected Client 
	print @ClientId
	if(@ClientId not in('ALL','POA'))
	Begin
		if(rtrim(ltrim(substring(@ClientId,0,4)))='''~''')
		Begin
			Select @NotToSelectClient= right(@ClientId,LEN(@ClientId)-3)
		End
	End
	print @NotToSelectClient
	----------MaxDate  Client Fetch
	Select @Sql='
	Select DIstinct AccountsLedger_SubAccountID From trans_accountsledger
	Where accountsledger_mainaccountid=''SYSTM00001'''
	If([dbo].[fn_GetFinYear](cast(@ToDate as datetime))<>@Finyear)
	Begin
			Select @SQL=@SQL+' AND ltrim(rtrim(AccountsLedger_FinYear))
			in ('''+@Finyear+''','''+@NextFinYear+''')'
	End
	Else
	Begin
			Select @SQL=@SQL+' AND ltrim(rtrim(AccountsLedger_FinYear))='''+@Finyear+''''
	End
	If @Segment<>'ALL'
	Begin
		Select @sql=@sql+' and AccountsLedger_ExchangeSegmentID in ('+@Segment+')  '
	End
	If (@ClientId not in('ALL','POA') and @NotToSelectClient is null)
	BEGIN
		Select @sql=@sql+' and AccountsLedger_SubAccountID in ('+@ClientId+')'
	END
	If (@ClientId not in('ALL','POA') and @NotToSelectClient is not null)
	BEGIN
		Select @sql=@sql+' and AccountsLedger_SubAccountID not in ('+@NotToSelectClient+')'
	END
	Select @SQL=@SQL+'
	AND AccountsLedger_TransactionDate Between '''+@FromDate+''' and '''+@ToDate +'''
	AND AccountsLedger_CompanyID='''+@Companyid+''''
    If (@Grpid<>'ALL' and @GrpType ='BRANCH')
    Begin
		Select @SQL=@SQL+' AND AccountsLedger_BranchId ='''+@Grpid+''''
    End
	
	Select @SQL=@SQL+'Union All

	Select Distinct DematTransactions_CustomerID From Trans_DematTransactions
	Where DematTransactions_FinYear='''+@Finyear+''''
	If @Segment<>'ALL'
	Begin
		Select @sql=@sql+' and (DematTransactions_SegmentID in ('+@Segment+') or DematTransactions_SourceSegmentId in ('+@Segment+'))'
	End
	If (@ClientId not in('ALL','POA')and @NotToSelectClient is null)
	BEGIN
		Select @sql=@sql+' and DematTransactions_CustomerID in ('+@ClientId+')'
	END
	If (@ClientId not in('ALL','POA') and @NotToSelectClient is not null)
	BEGIN
		Select @sql=@sql+' and DematTransactions_CustomerID not in ('+@NotToSelectClient+')'
	END
	Select @SQL=@SQL+'
	AND DematTransactions_Date Between '''+@FromDate+''' and '''+@ToDate +'''
	and isnull(DematTransactions_TransferType,''H'')<>''CF''
	AND DematTransactions_CompanyID='''+@Companyid+''''
	If (@Grpid<>'ALL' and @GrpType ='BRANCH')
    Begin
		Select @SQL=@SQL+' and DematTransactions_BranchID=  '''+@Grpid+''''
	End
		
	Insert Into #TbMaxClient(Client)Exec(@Sql)
	--select * from #TbMaxClient
	If (@Grpid<>'ALL' and @GrpType not in('BRANCH','BRANCHGROUP'))
	BEGIN
	Delete from #TbMaxClient where Client not in (Select grp_contactId
	from tbl_master_groupMaster,tbl_trans_group
	Where gpm_id=grp_groupMaster and gpm_id=@Grpid and gpm_Type=@GrpType)
	END
		
	
	If (@ClientId='POA')
	BEGIN
	Delete from #TbMaxClient where Client not in (select CustomerID from 
	(Select NsdlPOAMapping_dpID,NSDLPOAMapping_ClientID from Master_NSDLPOAMapping 
	where NSDLPOAMapping_ActiveInactive='A' ) POA
	inner join
	(select dpd_dpCode,dpd_ClientId,dpd_cntId CustomerID from tbl_master_contactDPDetails 
	where dpd_cntid like 'cl%') DpDetail
	On dpd_dpCode=NSDLPOAMapping_DPID and dpd_ClientId=NSDLPOAMapping_ClientID )
	END


	--------Client Fetch
	----*****Start Modify----
	SELECT @sql='Select cnt_internalid,exch_internalId SegmentId,SegmentName,FullName'
	if(@GrpType IN ('BRANCH','BRANCHGROUP'))
		BEGIN	  
			SELECT @sql=@sql+' ,branch_id,Branch'
		End
	else
		Begin	   
			SELECT @sql=@sql+',gpm_id,''Group : ''+isnull(rtrim(gpm_Description),'''')+''[''+isnull(rtrim(gpm_code),'''')+'']''' 
		End   
	SELECT @sql=@sql+' from 
						(Select * from
						(Select cnt_internalid,crg_exchange, 
						(isnull(rtrim(cnt_firstName),'''') +'' ''+isnull(rtrim(cnt_middleName),'''')
						+'' ''+isnull(rtrim(cnt_lastName),''''))+''[''+rtrim(crg_tcode)+'']'' FullName
						,+''[''+rtrim(crg_tcode)+'']'' TCode, branch_id
						,''Branch : ''+
						isnull(rtrim(branch_description),'''')+''[''+isnull(rtrim(branch_code),'''')+'']'' Branch
						from tbl_master_Contact,tbl_master_contactExchange,tbl_master_branch
						Where crg_cntID=cnt_internalId 
						and cnt_branchid=branch_id 
						and cnt_internalid like ''CL%'' 
						and cnt_internalid in (Select Distinct Client From #TbMaxClient)
						and cnt_branchid in ('+@BranchHierchy+')
						and crg_company='''+@CompanyID+''' 
						) Cnt_Crg
						Left outer Join
						(Select grp_contactId,gpm_id,gpm_Description,gpm_code 
						from tbl_master_groupMaster,tbl_trans_group
						Where grp_groupMaster=gpm_id 
						and grp_groupType='''+@GrpType+'''
						) Gpm_Grp
						on cnt_internalId=grp_contactId
						) CntCrg_GpmGrpinner 
						join
						(Select Exch_InternalID,exh_shortName+'' - '' +exch_segmentId as SegmentName 
						from tbl_master_companyExchange,tbl_master_Exchange
						Where exh_cntId=exch_exchId
						) exch_exh
						On crg_exchange=SegmentName'	

	----*****End Modify----
	Insert Into #TABCLIENT (CLIENTID1,SegId,SegmentName,CLIENTNAME1,GROUPID1,GRPNAME1)Exec(@sql)
	--select distinct CLIENTID1 from #TABCLIENT
	---Delete Clients for specific Segment
	if(@Segment<>'ALL')
	Begin
		Delete From #TABCLIENT Where SegId not in (Select col from fnSplitReturnTable(@Segment,','))
	End

	----------Closing Balance Fetch
	Select @Sql='Select AccountsLedger_SubAccountID,''     Trading A/c :-'',SegmentName
	,2
	,Sum(isnull(accountsledger_amountCr,0)-isnull(accountsledger_amountDr,0))
	From trans_accountsledger,#TABCLIENT Where 
	accountsledger_mainaccountid=''SYSTM00001'''
	If([dbo].[fn_GetFinYear](cast(@ToDate as datetime))<>@Finyear)
	Begin
			Select @SQL=@SQL+' AND ltrim(rtrim(AccountsLedger_FinYear))
			in ('''+@Finyear+''','''+@NextFinYear+''')'
	End
	Else
	Begin
			Select @SQL=@SQL+' AND ltrim(rtrim(AccountsLedger_FinYear))='''+@Finyear+''''
	End
	Select @SQL=@SQL+'
	AND AccountsLedger_ExchangeSegmentID=SegId
	and AccountsLedger_SubAccountID=CLIENTID1
	AND AccountsLedger_TransactionDate<='''+@ToDate +'''
	AND AccountsLedger_CompanyID='''+@Companyid+'''
	Group by AccountsLedger_SubAccountID,SegmentName'
	
	
	
	
	
	
	
	
	
	
	Insert Into #MainTb(ClientId,Description,TabVisible,StOrder,Amnt)Exec(@Sql)

	----------Closing Balance Fetch
	Select @Sql='Select AccountsLedger_SubAccountID,''    Cash Margin & FDR :-'',SegmentName
	,3
	,Sum(isnull(accountsledger_amountCr,0)-isnull(accountsledger_amountDr,0))
	From trans_accountsledger,#TABCLIENT Where 
	accountsledger_mainaccountid in (''SYSTM00002'',''SYSTM00003'')
	AND ltrim(rtrim(AccountsLedger_FinYear))='''+@Finyear+'''
	AND AccountsLedger_ExchangeSegmentID=SegId
	and AccountsLedger_SubAccountID=CLIENTID1
	AND AccountsLedger_TransactionDate<='''+@ToDate +'''
	AND AccountsLedger_CompanyID='''+@Companyid+'''
	Group by AccountsLedger_SubAccountID,SegmentName'
	
	Insert Into #MainTb(ClientId,Description,TabVisible,StOrder,Amnt)Exec(@Sql)

	--------Heading Display
	Insert Into #MainTb(ClientId,Description,TabVisible,StOrder)
	Select Distinct  ClientId,'1. Closing Balance As On '+Convert(varchar(11),cast(@ToDate as Datetime),106),null,1
	From #MainTb Where StOrder in (2,3)

	--------Sum Of Trading Balance
	Insert Into #MainTb(ClientId,Description,TabVisible,Amnt,StOrder)
	Select Distinct  ClientId,null,'Net Total:',Sum(isnull(Amnt,0)),4
	From #MainTb Where StOrder in (2,3) Group By ClientId

	
--------------------------------------------Fetch Collateral
	--------------Fetch Record From Demat Transaction
	Insert Into #TbTransactionFilter (CustomerID,ProductSeriesID,SegmentID,SourceSegmentId,Quantity,
	SettlementNumberS,SettlementNumberT,OwnAccountS,OwnAccountT)
	
	Select 
	DematTransactions_CustomerID,DematTransactions_ProductSeriesID,
	DematTransactions_SegmentID,DematTransactions_SourceSegmentId,
	isnull(DematTransactions_Quantity,0),
	DematTransactions_SettlementNumberS,DematTransactions_SettlementNumberT,
	DematTransactions_OwnAccountS,DematTransactions_OwnAccountT 
	from Trans_DematTransactions
	--,#TABCLIENT 
	Where
	DematTransactions_Date<=@ToDate
	and DematTransactions_FinYear=@Finyear
	--and DematTransactions_CustomerID=CLIENTID1
	--and 
	--	(DematTransactions_SegmentID=SegId
	--	or 
	--	DematTransactions_SourceSegmentId=SegId)
	and DematTransactions_CustomerID in (Select Distinct CLIENTID1 From #TABCLIENT)
	and (
			(isnull(DematTransactions_SettlementNumberS,'kkk') in ('Margin','Hldbk'))
			or 
			(isnull(DematTransactions_SettlementNumberT,'kkk') in ('Margin','Hldbk'))
		)
	and isnull(DematTransactions_TransferType,'H')<>'CF'
	and DematTransactions_CompanyID=@CompanyID
	
	--update #TbTransactionFilter set SourceSegmentId=NULL
	--select * from #TbTransactionFilter	
	--order by ProductSeriesID
	-----Insert into Transaction  Filter Table
	Insert Into #TbTransaction (CustomerID,ProductSeriesID,SegmentID,SourceSegmentId,Quantity,
	SettlementNumberS,SettlementNumberT,OwnAccountS,OwnAccountT)
	select CustomerID,ProductSeriesID,SegmentID,SourceSegmentId,Quantity,
	SettlementNumberS,SettlementNumberT,OwnAccountS,OwnAccountT
	from #TbTransactionFilter where SourceSegmentId is not null

	delete from #TbTransactionFilter where SourceSegmentId is not null

	------------------------------SPLIT RECORDS FOR SOURCE SEGMENT ID
	insert into #TbTransactionFilter
	(
	Quantity,CustomerID,ProductSeriesID,SegmentID,
	SettlementNumberS,SettlementNumberT,SourceSegmentId,
	OwnAccountS,OwnAccountT
	)
	select Quantity,CustomerID,ProductSeriesID,SegmentID,null,
	SettlementNumberT,NULL,null,OwnAccountT
	from #TbTransaction where isnull(SourceSegmentId,'9999')<>isnull(SegmentID,'9999')


	insert into #TbTransactionFilter
	(
	Quantity,CustomerID,ProductSeriesID,SegmentID,
	SettlementNumberS,SettlementNumberT,SourceSegmentId,
	OwnAccountS,OwnAccountT
	)
	select Quantity,CustomerID,ProductSeriesID,SourceSegmentId,
	SettlementNumberS,null,NULL,OwnAccountS,null
	from #TbTransaction where isnull(SourceSegmentId,'9999')<>isnull(SegmentID,'9999')


	if @Segment<>'ALL'
	Begin
		delete from #TbTransactionFilter where SegmentID not in (select col From  [fnSplitReturnTable](@Segment,','))
	End

		---------Asset and Asset Name Fetch
		
		Update #TbTransactionFilter Set  AssetId=CASE WHEN PRODUCTS_DERIVEDFROMID IS NULL THEN PRODUCTS_ID ELSE PRODUCTS_DERIVEDFROMID END 
									    ,AssetName=RTRIM(PRODUCTS_NAME)
		FROM Master_Commodity,master_products
		WHERE 
		Commodity_ProductSeriesID=ProductSeriesID
		AND PRODUCTS_ID=Commodity_productid
		
		Update #TbTransactionFilter Set  AssetId=CASE WHEN PRODUCTS_DERIVEDFROMID IS NULL THEN PRODUCTS_ID ELSE PRODUCTS_DERIVEDFROMID END 
									    ,AssetName=RTRIM(PRODUCTS_NAME)
		FROM master_EQUITY,master_products
		WHERE 
		equity_SERIESID=ProductSeriesID
		AND PRODUCTS_ID=equity_productid
		
		----------------Segment Name Fetch
		Update #TbTransactionFilter Set SegName=left(SegmentName,3) From #TABCLIENT Where 
		(
			(SegId=SegmentID and  SourceSegmentId is null)
		  or
			(SegId=SourceSegmentId and  SourceSegmentId is not null)
		)
		------------ MainProductSeriesID Find [Preference NSE]
		Update #TbTransactionFilter Set MainProductSeriesID=Seriesid 
		From
			(Select  distinct CustomerID as Client, AssetId as Productid,ProductSeriesID as Seriesid,SegName as Seg
			From #TbTransactionFilter 
			Where SegName=(Select top 1 SegName from 
									   (Select SegName,
										case when SegName='NSE' then 1
											 when SegName='BSE' then 2
											 when SegName='CSE' then 3
										else 4 end as addreorder
										From #TbTransactionFilter as kk
										Where #TbTransactionFilter.CustomerID=kk.CustomerID
										and #TbTransactionFilter.AssetId=kk.AssetId
										) tb
						order by addreorder)
			) as JB
		Where CustomerID=Client and AssetId=Productid
		and ProductSeriesID=Seriesid and SegName=Seg

	delete from #TbTransactionFilter where 
	isnull(SettlementNumberS,'SSS') not in ('MARGIN','HLDBK') and ISNULL(SettlementNumberT,'SSS') not in ('MARGIN','HLDBK')
	
	UPDATE #TbTransactionFilter SET MainProductSeriesID=ProductSeriesID WHERE MainProductSeriesID IS NULL
	
	--select * from #TbTransactionFilter
	--order by AssetId
	--	--------Insert Into Margin 
		Insert Into  #MainTb (ClientId,Productid,Qty,Description,StOrder)
		Select 
		case when CustomerIDS is null then CustomerIDT else CustomerIDS end as Client
		,case when MainProductSeriesIDS is null then MainProductSeriesIDT else MainProductSeriesIDS end as product
		,(ISNULL(Quantityt,0.0)-ISNULL(QuantityS,0.0)) AS QuantityTTEMP
		,CASE WHEN '   '+AssetNameS IS NULL THEN '   '+AssetNameT ELSE '   '+AssetNameS END
		,8
		From

		(Select  sum(isnull(Quantity,0)) as QuantityS,
		CustomerID as CustomerIDS,AssetId as AssetIdS,AssetName as AssetNameS,MainProductSeriesID as MainProductSeriesIDS
		From #TbTransactionFilter where
		rtrim(ltrim(isnull(SettlementNumberS,'')))='Margin'
		Group By CustomerID,AssetId,AssetName,MainProductSeriesID) as tabS
		
		full outer join

		(Select  sum(isnull(Quantity,0)) as QuantityT,
		CustomerID as CustomerIDT,AssetId as AssetIdT,AssetName as AssetNameT,MainProductSeriesID as MainProductSeriesIDT
		From #TbTransactionFilter where
		rtrim(ltrim(isnull(SettlementNumberT,'')))='Margin'
		Group By CustomerID,AssetId,AssetName,MainProductSeriesID) as tabT
		
		on(CustomerIDS=CustomerIDT and AssetIdS=AssetIdT AND AssetNameS=AssetNameT and MainProductSeriesIDS=MainProductSeriesIDT)


		------------Insert Into HLDBK 
		Insert Into  #MainTb (ClientId,Productid,Qty,Description,StOrder)
		Select 
		case when CustomerIDS is null then CustomerIDT else CustomerIDS end as Client
		,case when MainProductSeriesIDS is null then MainProductSeriesIDT else MainProductSeriesIDS end as product
		,(ISNULL(Quantityt,0.0)-ISNULL(QuantityS,0.0)) AS QuantityTTEMP
		,CASE WHEN '   '+AssetNameS IS NULL THEN '   '+AssetNameT ELSE '   '+AssetNameS END
		,9
		From

		(Select  sum(isnull(Quantity,0)) as QuantityS,
		CustomerID as CustomerIDS,AssetId as AssetIdS,AssetName as AssetNameS,MainProductSeriesID as MainProductSeriesIDS
		From #TbTransactionFilter where
		rtrim(ltrim(isnull(SettlementNumberS,'')))='HLDBK'
		Group By CustomerID,AssetId,AssetName,MainProductSeriesID) as tabS
		
		full outer join

		(Select  sum(isnull(Quantity,0)) as QuantityT,
		CustomerID as CustomerIDT,AssetId as AssetIdT,AssetName as AssetNameT,MainProductSeriesID as MainProductSeriesIDT
		From #TbTransactionFilter where
		rtrim(ltrim(isnull(SettlementNumberT,'')))='HLDBK'
		Group By CustomerID,AssetId,AssetName,MainProductSeriesID) as tabT
		
		on(CustomerIDS=CustomerIDT and AssetIdS=AssetIdT AND AssetNameS=AssetNameT and MainProductSeriesIDS=MainProductSeriesIDT)

		
		----------Delete Quantity
		Delete From #MainTb Where isnull(Qty,0)=0 and StOrder in (8,9)

		---------Close Price Fetch
		Update #MainTb set ClosePrice=DailyStat_Close,Amnt=(isnull(Qty,0)*isnull(DailyStat_Close,0)) From 
		Trans_DailyStatistics,
								(
									Select MAX(DailyStat_DateTime) AS DATE,DailyStat_ProductSeriesID AS PRDID
									From Trans_DailyStatistics,#MainTb
									where DailyStat_DateTime<=@ToDate
									AND DailyStat_ProductSeriesID=Productid and StOrder in (8,9)
									GROUP BY DailyStat_ProductSeriesID
								) AS TB
		Where DailyStat_ProductSeriesID=PRDID
		AND DailyStat_ProductSeriesID=Productid
		AND PRDID=Productid and StOrder in (8,9)
		AND DailyStat_DateTime=DATE

		--------Blank Record 
		Insert Into #MainTb(ClientId,StOrder)
		Select Distinct  ClientId,5 From #MainTb Where StOrder in (8,9)

		--------Heading Display
		Insert Into #MainTb(ClientId,Description,TabVisible,StOrder)
		Select Distinct  ClientId,'2. Securities Held In Our DP A/c towards Margin Requirment As On '+Convert(varchar(11),cast(@ToDate as Datetime),106),null,6
		From #MainTb Where StOrder in (8,9)

		Insert Into #MainTb(ClientId,Description,TabVisible,TabVisibleRate,TabVal,StOrder)
		Select Distinct  ClientId,'   Product Name','Quantity','Close Rate','Value',7
		From #MainTb Where StOrder in (8,9)

		--------Sum Of Trading Balance
		Insert Into #MainTb(ClientId,Description,TabVisible,Qty,Amnt,StOrder)
		Select Distinct  ClientId,'Net Total:',null,Sum(isnull(Qty,0)),Sum(isnull(Amnt,0)),10
		From #MainTb Where StOrder in (8,9) Group By ClientId

		---------Email Fetch
		Update #MainTb Set EnailId=rtrim(eml_email) From tbl_master_email Where 
		Eml_Cntid=ClientId and eml_type='Official' and isnull(eml_status,'A')='A'

		-----Client Pan Card
		Update #MainTb Set ClientPanCard=rtrim(crg_number)
		From tbl_master_contactregistration
		Where crg_type='Pancard' and crg_cntid=ClientId
		
		
		
		
		Update #MainTb set Clientphone=isnull(phf_countrycode,'')+' '+isnull(phf_areacode,'')+' '+isnull(phf_phonenumber,'')
		                               from tbl_master_phonefax where phf_cntId=ClientId and RTRIM (phf_type)='Office' 
		                               and RTRIM(phf_entity)='Customer/Client'

		---------Segment Combine Per Client
		Update #MainTb Set SegmentCombine=Case When SegmentCombine is null Then ltrim(rtrim(SegCombine))
												 Else 
												  ltrim(rtrim(SegmentCombine))+' , '+ltrim(rtrim(SegCombine))
												 End
		From 
		(SELECT p1.CLIENTID1 as Client,
		 STUFF(                    
		 (SELECT   ',' + p2.Seg From  (Select Distinct CLIENTID1 as Cli,SegmentName as Seg From #TABCLIENT)  p2                          
		  WHERE p2.Cli=p1.CLIENTID1
		  FOR XML PATH(''), TYPE                    
		  ).value('.','varchar(max)'),1,1, '') AS SegCombine      
		 FROM #TABCLIENT p1     
		 GROUP BY p1.CLIENTID1) as KK
		Where ClientId=Client 
		
		----------Result Display
		create table #finaltab
		(autoidfial int identity,ClientId varchar(max),SegmentCombine varchar(max),ClientName varchar(max),GrpName varchar(max),
		EnailId varchar(max),Description varchar(max),TabVisible varchar(max),
		Diaply1 varchar(max),Diaply2 varchar(max),StOrder int,ClientPanCard varchar(max),
		Clientphone varchar(max),CLIENTADDRESS1 varchar(max),CLIENTADDRESS2 varchar(max),
		Citypin varchar(max),PeriodDate varchar(max))--,signaturev signature)
		insert into #finaltab
		Select *
		From 
		(Select Distinct 
		ClientId,SegmentCombine,ClientName,GrpName,EnailId,Description,TabVisible,Diaply1,Diaply2,StOrder,ClientPanCard,Clientphone
		,(select top 1 (isnull(rtrim(ltrim(add_address1)),'')))AS CLIENTADDRESS1
		,(select top 1 (isnull(rtrim(ltrim(add_address2)),'')+' '+isnull(rtrim(ltrim(add_address3)),''))) AS CLIENTADDRESS2
		,(select top 1 (city_name+' - '+isnull(rtrim(ltrim(add_pin)),'')) from tbl_master_city where city_id=add_city) AS Citypin
		,'Period : ' +Convert(varchar(11),cast(@FromDate as Datetime),106)+' - '+Convert(varchar(11),cast(@ToDate as Datetime),106) as PeriodDate
		 From

		(Select ClientId,StOrder,SegmentCombine
		,CLIENTNAME1 as ClientName,GRPNAME1 as GrpName,EnailId,ClientPanCard,Clientphone
		,Description
		,Case When StOrder in (8,9,10) Then CASE WHEN ISNULL(Qty,0)=0 THEN NULL 
										WHEN Qty<0 THEN '-'+dbo.fn_FormatNumber(CAST(ABS(Qty) AS VARCHAR(8000)),'Y') 
										ELSE dbo.fn_FormatNumber(CAST(Qty AS VARCHAR(8000)),'Y') 
										END
			 Else TabVisible
		End as TabVisible
		,Case When StOrder in (2,3,4) Then CASE WHEN ISNULL(Amnt,0)=0 THEN NULL 
											 WHEN Amnt<0 THEN dbo.fn_FormatNumber(CAST(ABS(Amnt) AS VARCHAR(8000)),'N') 
										Else null END
			  When StOrder in (8,9) Then
										CASE WHEN ISNULL(ClosePrice,0)=0 THEN NULL 
										ELSE dbo.fn_FormatNumber(CAST(ClosePrice AS VARCHAR(8000)),'N') 
										END
			 Else TabVisibleRate 
		End as Diaply1
		,Case When StOrder in (2,3,4) Then CASE WHEN ISNULL(Amnt,0)=0 THEN '0.00' 
											 WHEN Amnt>0 THEN dbo.fn_FormatNumber(CAST(ABS(Amnt) AS VARCHAR(8000)),'N') 
										Else null END
			  When StOrder in (8,9,10) Then
										CASE WHEN ISNULL(Amnt,0)=0 THEN NULL 
										WHEN Amnt<0 THEN '-'+dbo.fn_FormatNumber(CAST(ABS(Amnt) AS VARCHAR(8000)),'N') 
										ELSE dbo.fn_FormatNumber(CAST(Amnt AS VARCHAR(8000)),'N') 
										END
			  Else TabVal 
		End as Diaply2
		
		From #MainTb,#TABCLIENT
		Where ClientId=CLIENTID1) as Tb

		Left Outer Join

			tbl_master_address
			on(add_cntID=ClientId AND add_entity='Customer/Client' AND 
						add_addressType=(Select top 1 add_addressType From 
										(	Select add_addressType,
											case when rtrim(ltrim(add_addressType))='Correspondence' then 1
												 when rtrim(ltrim(add_addressType))='Registered' then 2
												 when rtrim(ltrim(add_addressType))='Residence' then 3
												 else 4 end as addreorder
											From tbl_master_address Where 
											add_cntID=ClientId
											and add_entity='Customer/Client') tb
											Order By addreorder
										)
			 )
		) as Kk
		Order By  ClientId,StOrder,Description
		
		------------insert into #finaltab (ClientId,StOrder,Description,Diaply1)
		------------select 'CLP0000160',11,'Margin',25466.56
		--select *,@Signature as Signature from #finaltab
		if exists(select * from #finaltab)
			Begin
				Create table #distinctclient (Autoid int identity,clientid varchar(25))
				insert into #distinctclient
				select distinct CLIENTID1 from #TABCLIENT
				create table #distinctsegment(autoid int identity,segid int)
				insert into #distinctsegment
				select distinct SegId from #TABCLIENT
				Declare @staticcounter int,@dynamiccounter int,
				@fomaxdate datetime,@cmmaxdate datetime,@commcdxmaxdate datetime,@distinctseg varchar(500),
				@fototal numeric(28,2),@cmtotal numeric(28,2),@commcdxtotal numeric(28,2),
				@clientidinlooping varchar(20),@segmentnametotal varchar(500)
				select @distinctseg=coalesce(@distinctseg+',', '') + Convert(varchar,SegId)
									from #distinctsegment
				
				select @fomaxdate=max(DailyFOMargin_Date) from Trans_DailyFOMargin 
						where DailyFOMargin_Date<=@ToDate
				select @cmmaxdate=max(CMMarginSummary_Date) from Trans_CMMarginSummary 
						where CMMarginSummary_Date<=@ToDate
				select @commcdxmaxdate=max(ComMarginSummary_Date) from Trans_ComMarginSummary 
						where ComMarginSummary_Date<=@ToDate
										
				--select @distinctseg
				
				
				
				select @staticcounter=MAX(Autoid) from #distinctclient
				select @dynamiccounter=1
				while(@dynamiccounter<=@staticcounter)
					Begin
						
						Select @clientidinlooping=clientid from #distinctclient where Autoid=@dynamiccounter
						select @segmentnametotal=(select top 1 SegmentCombine from #finaltab where ClientId=@clientidinlooping)
						select @fototal= 
						isnull(Sum(isnull(DailyFOMargin_SpanMargin,0)+isnull(DailyFOMargin_BuyPremium,0)+isnull(DailyFOMargin_ExposureMargin,0)),0)
						from Trans_DailyFOMargin 
						where DailyFOMargin_Date=@fomaxdate
						and DailyFOMargin_CustomerID=@clientidinlooping and DailyFOMargin_CalculationType='E'
						and DailyFOMargin_ExchangeSegmentID in (select * from dbo.fnSplitReturnTable(@distinctseg,','))
						
						select @cmtotal= 
						isnull(Sum(isnull(CMMarginSummary_MTMLosses,0)+isnull(CMMarginSummary_TotalMargin,0)),0)
						from Trans_CMMarginSummary
						where CMMarginSummary_Date=@cmmaxdate--<'2012-09-20'
						and CMMarginSummary_CustomerID=@clientidinlooping and CMMarginSummary_CalculationType='E'
						and CMMarginSummary_ExchangeSegmentID in (select * from dbo.fnSplitReturnTable(@distinctseg,','))
						
						select @commcdxtotal= 
						isnull(Sum(isnull(ComMarginSummary_InitialMargin,0)+isnull(ComMarginSummary_Premium,0)+isnull(ComMarginSummary_ELMMargin,0)+isnull(ComMarginSummary_SpecialMargin,0)),0)
						 from Trans_ComMarginSummary
						 where ComMarginSummary_Date=@commcdxmaxdate--<'2012-09-20'
						 and ComMarginSummary_CustomerID=@clientidinlooping and ComMarginSummary_CalType='E'
						 and ComMarginSummary_SegmentID in (select * from dbo.fnSplitReturnTable(@distinctseg,','))
						 
						 insert into #finaltab (ClientId,StOrder,Description)--,Diaply1,Diaply2)
						 select @clientidinlooping,11,'Margin Utilization of '+Convert(varchar(11),cast(@ToDate as Datetime),106)+'    '+
						 dbo.fn_FormatNumber(CAST(ABS(ISNULL(@fototal,0)+ISNULL(@commcdxtotal,0)+ISNULL(@cmtotal,0)) AS VARCHAR(8000)),'N')
						 update #finaltab set SegmentCombine=@segmentnametotal where ClientId=@clientidinlooping
						 and SegmentCombine is null
						 --end
						 --,case when ISNULL(@fototal,0)+ISNULL(@cmtotal,0)+ISNULL(@cmtotal,0),case when ISNULL(@fototal,0)+ISNULL(@cmtotal,0)+ISNULL(@cmtotal,0)<0
						 --then  
						 --dbo.fn_FormatNumber(CAST(ABS(ISNULL(@fototal,0)+ISNULL(@cmtotal,0)+ISNULL(@cmtotal,0)) AS VARCHAR(8000)),'N') end,case when ISNULL(@fototal,0)+ISNULL(@cmtotal,0)+ISNULL(@cmtotal,0)>0
						 --then dbo.fn_FormatNumber(CAST(ABS(ISNULL(@fototal,0)+ISNULL(@cmtotal,0)+ISNULL(@cmtotal,0)) AS VARCHAR(8000)),'N') end
						 
						Set @dynamiccounter=@dynamiccounter+1
					End
				End
			select *,@Signature as Signature from #finaltab order by ClientId,StOrder
		-----Insert Into Sebi,Compliance Office's Details
		Select @Sql='
		Select Top 1 rtrim(Exch_TmCode) as TmCode
		,(Select Top 1 (case when len(rtrim(isnull(Exch_SebiNo,'''')))>0 then ''--''+Exch_SebiNo
		when len(rtrim(isnull(Exch_regnNo,'''')))>0 then ''_''+Exch_regnNo else '':'' end )) as SebiNo
		,rtrim(Exch_ComplianceOfficer) as ComplianceOfficer
		,(Select top 1 (isnull(rtrim(cnt_firstName),'''') +'' ''+isnull(rtrim(cnt_middleName),'''')+'' ''+isnull(rtrim(cnt_lastName),''''))
		  From tbl_master_contact where cnt_internalid=rtrim(Exch_ComplianceOfficer) and rtrim(Exch_ComplianceOfficer) is not null) as OfficerName
		,(Select top 1 rtrim(eml_email) From tbl_master_email where Eml_Cntid=rtrim(Exch_ComplianceOfficer) and eml_type=''Official'' and isnull(eml_status,''A'')=''A'' and rtrim(Exch_ComplianceOfficer) is not null) as OfficerEmail
		,(Select top 1 phf_phoneNumber from tbl_master_phonefax where  phf_cntId=rtrim(Exch_ComplianceOfficer) and rtrim(Exch_ComplianceOfficer) is not null) as OfficerPhNo
		,(Select top 1 add_address1 from tbl_master_address where add_cntid=rtrim(Exch_ComplianceOfficer) and rtrim(Exch_ComplianceOfficer) is not null) as officeradd1 
		,(Select top 1 add_address2 from tbl_master_address where add_cntid=rtrim(Exch_ComplianceOfficer) and rtrim(Exch_ComplianceOfficer) is not null) as officeradd2
		,(Select top 1 add_address3 from tbl_master_address where add_cntid=rtrim(Exch_ComplianceOfficer) and rtrim(Exch_ComplianceOfficer) is not null) as officeradd3
		,(Select top 1 add_pin from tbl_master_address where add_cntid=rtrim(Exch_ComplianceOfficer) and rtrim(Exch_ComplianceOfficer) is not null) as officerpin
		,(select top 1 city_name from tbl_master_city,tbl_master_address where city_id=add_city and add_cntid=rtrim(Exch_ComplianceOfficer) and rtrim(Exch_ComplianceOfficer) is not null) As officercity
		From tbl_master_companyexchange Where EXCH_COMPID='''+@CompanyID+''''
		If @Segment<>'ALL'
		Begin
			Select @sql=@sql+' and  EXCH_INTERNALID in ('+@Segment+') '
		End 
		Select @sql=@sql+' and rtrim(exch_segmentid)=(Select top 1 SegId From 
													(	Select rtrim(exch_segmentid) as SegId,
														case when rtrim(ltrim(exch_segmentid))=''CM'' then 1
															 when rtrim(ltrim(exch_segmentid))=''FO'' then 2
															 when rtrim(ltrim(exch_segmentid))=''COMM'' then 3
															 else 4 end as addreorder
														From tbl_master_companyexchange Where EXCH_COMPID='''+@CompanyID+''''
														If @Segment<>'ALL'
														Begin
															Select @sql=@sql+' and  EXCH_INTERNALID in ('+@Segment+') '
														End 
														Select @sql=@sql+' ) tb
														Order By addreorder
												)'
		

		Insert Into #TbSebi(TmCode,SebiNo,OfficerId,OfficerName,OfficerEmilId,OfficerPhNo,officeradd1,officeradd2,officeradd3,officerpin,officercity)Exec(@Sql)
		

		--------CompanyDetails
		
		Select cmp_Name as CmpName
		,(Select Top 1 TmCode From #TbSebi) as TmCode
		,(Select Top 1 SebiNo From #TbSebi) as SebiNo
		,isnull((select Top 1(cmp_ServiceTaxNo) from tbl_master_company where cmp_internalid=@CompanyID),'')as CmpServiceTaxNo
		,cmp_panNo as CmpPanNo
		,isnull((select top 1(isnull(add_address1,' ')+' '+
		isnull(add_address2,' ')+' '+isnull(add_address3,' ')) 
		from tbl_master_address,tbl_master_company,tbl_master_city
		where cmp_internalid=add_cntid and cmp_internalid=@CompanyID
		and add_city=city_id and add_cntID=@CompanyID
		AND add_entity='Company' AND add_addressType='Office'),'')as CmpAddress
		,isnull((select top 1 (isnull(city_name,' ')+' - '+ isnull(add_pin,' '))
		from tbl_master_address,tbl_master_company,tbl_master_city
		where cmp_internalid=add_cntid and cmp_internalid=@CompanyID
		and add_city=city_id and add_cntID=@CompanyID
		AND add_entity='Company' AND add_addressType='Office'),'')as Cmpaddress1
		,isnull((Select top 1 isnull(phf_countryCode,'')+'-'+isnull(phf_areaCode,'')+'-'+isnull(phf_phoneNumber,'') from tbl_master_phonefax where  PHF_TYPE='Office' AND phf_cntId=@CompanyID),'')as CmpPh
		,isnull((select Top 1(eml_email) from tbl_master_email where eml_cntid=@CompanyID and eml_type='Official'),'')as CmpEmail
		,(Select Top 1 OfficerName From #TbSebi) as OfficerName
		,(Select Top 1 OfficerEmilId From #TbSebi) as OfficerEmilId
		,(Select Top 1 OfficerPhNo From #TbSebi) as OfficerPhNo
		,(Select top 1 officeradd1 from #TbSebi) as officeradd1
		,(Select top 1 officeradd2 from #TbSebi) as officeradd2
		,(Select top 1 officeradd3 from #TbSebi) as officeradd3
		,(Select top 1 officerpin from #TbSebi) as officerpin
		,(Select top 1 officercity from #TbSebi) as officercity
		From tbl_master_company
		Where cmp_internalid=@CompanyID


		------------Header 
		If @HeaderId='NA'
			Begin
					Select 'NA' as Header
			End
		Else
			Begin
					Select rtrim(HeaderFooter_Content) as Header From Master_HeaderFooter Where  HeaderFooter_ID=@HeaderId
			End

		---------Footer
		If @FooterId='NA'
			Begin
					Select 'NA' as Footer
			End
		Else
			Begin
					Select rtrim(HeaderFooter_Content) as Footer From Master_HeaderFooter Where  HeaderFooter_ID=@FooterId
			End
		
		
End







