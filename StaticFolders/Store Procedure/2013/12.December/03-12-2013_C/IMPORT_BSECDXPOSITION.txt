
--Exec [IMPORT_BSECDXPOSITION] 455,35,'COR0000002','C:\GRD\BSECDX\','2011-01-01','2013-12-29','ABCD'

ALTER  PROCEDURE [dbo].[IMPORT_BSECDXPOSITION]
@ModifyUser	varchar(10)=null,
@ExcSegmt int,
@ExchangeTrades_CompanyID char(10)=null,
@FilePath varchar(250)=null,
@LckTradeDate datetime,
@ExpireDate datetime,
@LockMsg Varchar(250) Output



AS
BEGIN


				declare @ReadFrom as int
				declare @Q as varchar(250)
				declare @P int 
				Declare @Min as Int
				Declare @Max As Int
			
	
			CREATE TABLE  #tmpTrans_BSECDX (
				[BSECDX_TradeEntryTime] DateTime null,
				[BSECDX_Segment] Varchar(10) null,
				[BSECDX_SettType] char(1) null,
				[BSECDX_CMCode] Varchar(15) null,
				[BSECDX_MemberType] char(1) null,-------------------5
				[BSECDX_TMCode] Varchar(15) null,
				[BSECDX_ProCli] Varchar(2) null,
				[BSECDX_ClientAcc] varchar(15) null,
				[BSECDX_InstrumentType] varchar(10) null,   
				[BSECDX_SecuritySymbol] varchar(20) NULL,    -------------------10
				[BSECDX_EXPIRYDATE] DateTime NULL,
				[BSECDX_StrikePrice] numeric(18,4) NULL,
				[BSECDX_OptionType] varchar(100) NULL,
				[BSECDX_Filler] Varchar(15) null,
				[BSECDX_OpenBuy] numeric(18,0) null,-------------------15
				[BSECDX_OpenBuyValue] numeric (28,2) null,
				[BSECDX_OpenSell] numeric(18,0) null,
				[BSECDX_OpenSellValue] numeric(28,2) null,
				[BSECDX_DayBuy] numeric(18,0) null,
				[BSECDX_DayBuyValue] numeric(28,2) null,-------------------20
				[BSECDX_DaySell] numeric(18,0) null,
				[BSECDX_DaySellValue] numeric(28,2) null,
				[BSECDX_PreNetBuy] numeric(18,0) null,
				[BSECDX_PreNetBuyValue] numeric(28,2) null,
				[BSECDX_PreNetSell] numeric(18,0) null,-------------------25
				[BSECDX_PreNetSellValue] numeric(28,2) null,
				[BSECDX_EXCQty] numeric(18,0) null,
				[BSECDX_ASNQty] numeric(18,0) null,     
				[BSECDX_PostNetBuy] numeric(18,0) null,
				[BSECDX_PostNetBuyValue] numeric(28,2) null,-------------------30
				[BSECDX_PostNetSell] numeric(18,0) null,
				[BSECDX_PostNetSellValue] numeric(28,2) null,
				[BSECDX_SettPrice] numeric(14,4) null,
				[BSECDX_NetPremium] numeric(28,2) null,
				[BSECDX_NetMTM] numeric(28,2) null,-------------------35
				[BSECDX_EXPAmount] numeric(28,2) null,
				[BSECDX_ASNEXCAmount] numeric(28,2) null-------------------37
				)
				
				set @ReadFrom=1
				
				set @Q='BULK INSERT #tmpTrans_BSECDX FROM '+ char(39) + @FilePath + char(39) + ' with (firstrow = ' + convert(varchar,@ReadFrom) + ' , FIELDTERMINATOR = ' + char(39) + ',' + char(39) + ' , ROWTERMINATOR = ' + char(39) + char(10)+ + char(39) +')'
				print @Q
				exec (@Q)


---		----------------------------------------------------------------------------------------------------
				alter table #tmpTrans_BSECDX
						add  	[BSECDX_ID] [bigint] IDENTITY(1,1) NOT NULL	,
								[BSECDX_ProductSeriesID] [bigint] null,
								[BSECDX_ProductID] [bigint] null,
								[BSECDX_AssetID] [bigint] null,
								[BSECDX_TradePrice] numeric(18,4) not null Default (0.00),
								[BSECDX_CustomerID] varchar(100) null,
								[BSECDX_ExchangeNet] numeric(18,0) null,
								[BSECDX_BONet] numeric (18,0) null,
								[BSECDX_PosDiff] numeric (18,0) null,
								[BSECDX_ClPrd] varchar(30) null,
								[BSECDX_Quantity] numeric(18,2) null,
								[BSECDX_ExpQuantity] numeric(18,2) null
--
				DECLARE @FY DateTime  
				DECLARE @SETT_FY VARCHAR(250)
				DECLARE @DTDIFF	int
                Declare @Cflag char(1)
                declare @ww char(20)
				
				set @FY=(select Top (1) [BSECDX_TradeEntryTime] From #tmpTrans_BSECDX )
				
	If (@FY >=@LckTradeDate and @FY<=@ExpireDate)
	begin
----       -------------------------------------------Financial Year-------------------------------------
					SET @DTDIFF=CAST(MONTH(@FY) AS INT)
					IF(@DTDIFF>=1 AND @DTDIFF<=3)
					BEGIN
						SET @SETT_FY=NULL
						SET @SETT_FY=  CAST((CAST(YEAR(@FY) AS INT)-1) AS VARCHAR(50) )+'-'+CAST(YEAR(@FY) AS VARCHAR(50))
					END
					IF(@DTDIFF>=4 AND @DTDIFF<=12)
					BEGIN
						SET @SETT_FY=NULL
						SET @SETT_FY=  CAST(YEAR(@FY) AS VARCHAR(50))+'-'+CAST((CAST(YEAR(@FY) AS INT)+1) AS VARCHAR(50) )
					END
----	---------------------------------Update ProductSeriesID--------------------------------------------
					Update #tmpTrans_BSECDX set BSECDX_ProductSeriesID=commodity_productseriesid from Master_Commodity
							where Commodity_ExchangeSegmentID=6
							and ltrim(rtrim(BSECDX_InstrumentType))=ltrim(rtrim(Commodity_Identifier))
							and ltrim(rtrim(BSECDX_SecuritySymbol))=ltrim(rtrim(Commodity_TickerSymbol))
							and ISNULL(BSECDX_StrikePrice,0)=isnull(Commodity_StrikePrice,0)
							and ltrim(rtrim(ISNULL(BSECDX_OptionType,'FF')))=ltrim(rtrim(isnull(Commodity_TickerSeries,'FF')))
							and BSECDX_EXPIRYDATE=Commodity_ExpiryDate
							
												
-----   ------------------------------------- Update CustomerIDs  ------------
					Update #tmpTrans_BSECDX set [BSECDX_CustomerID]=crg_cntid from tbl_master_contactExchange
					where crg_company=@ExchangeTrades_CompanyID
					and crg_exchange='BSE - CDX'
					and ltrim(rtrim(crg_tcode))=ltrim(rtrim(BSECDX_ClientAcc))


-----	-------------------------------- Identifying the future Expiry trades ------------------------------
					Update #tmpTrans_BSECDX set [BSECDX_ExpQuantity]=
					isnull(BSECDX_PostNetBuy,0.00)-isnull(BSECDX_PostNetSell,0.00)
						where LEFT(ltrim(rtrim(BSECDX_InstrumentType)),3)='FUT' 
						AND BSECDX_EXPIRYDATE=BSECDX_TradeEntryTime
-----	-----------------------------------------------------------------------------------------------------
		----Delete All previously imported Expiry Trades
					-- Create a temp table to hold the IDs to be deleted from comcustomer & comexchangetrades

					Create Table #TmpIDs (id bigint null,Eid bigint)
					insert into #TmpIDs (id,Eid)
					select ComExchangeTrades_CustTransactionID,ComExchangeTrades_ID from Trans_ComExchangeTrades 
					Where ComExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
					And ComExchangeTrades_Segment=@ExcSegmt 
					And ComExchangeTrades_TradeDate=@FY
					And ISNULL(ComExchangeTrades_TradeCategory,'XXX') in ('EXC','ASN','EXP')
					
					Delete from Trans_ComCustomerTrades where 
					ComCustomerTrades_CompanyID=@ExchangeTrades_CompanyID
					And ComCustomerTrades_ExchangeSegment=@ExcSegmt
					And ComCustomerTrades_TradeDate=@FY
					And ISNULL(ComCustomerTrades_TradeCategory,'XXX') in ('EXC','ASN','EXP')
					And ComCustomerTrades_ID in (select id from #TmpIDs where id is not null)
					
					Delete from Trans_ComCustomerTrades where 
					ComCustomerTrades_CompanyID=@ExchangeTrades_CompanyID
					And ComCustomerTrades_ExchangeSegment=@ExcSegmt
					And ComCustomerTrades_TradeDate=@FY
					And ISNULL(ComCustomerTrades_TradeCategory,'XXX') in ('EXC','ASN','EXP')
					And ComCustomerTrades_OriginalTransactionID in (select id from #TmpIDs where id is not null)
					
					Delete from Trans_ComExchangeTrades Where 
					ComExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
					And ComExchangeTrades_Segment=@ExcSegmt 
					And ComExchangeTrades_TradeDate=@FY
					And ISNULL(ComExchangeTrades_TradeCategory,'XXX') in ('EXC','ASN','EXP')
					And ComExchangeTrades_ID in (select Eid from #TmpIDs)


					
					--FIRST from Trans_CustomerTrades
					----Delete from Trans_ComCustomerTrades where ComCustomerTrades_CompanyID=@ExchangeTrades_CompanyID
					----And ComCustomerTrades_ExchangeSegment=@ExcSegmt
					----And ComCustomerTrades_TradeDate=@FY
					----And (ComCustomerTrades_ID in (
					----Select ComExchangeTrades_CustTransactionID from Trans_ComExchangeTrades 
					----Where ComExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
					----And ComExchangeTrades_Segment=@ExcSegmt 
					----And ComExchangeTrades_TradeDate=@FY
					----And ISNULL(ComExchangeTrades_TradeCategory,'XXX') in ('EXC','ASN','EXP'))
					----OR Isnull(ComCustomerTrades_OriginalTransactionID,0) in (
					----Select ComExchangeTrades_CustTransactionID from Trans_ComExchangeTrades 
					----Where ComExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
					----And ComExchangeTrades_Segment=@ExcSegmt 
					----And ComExchangeTrades_TradeDate=@FY
					----And ISNULL(ComExchangeTrades_TradeCategory,'XXX') in ('EXC','ASN','EXP')))
					------THEN from Trans_ExchangeTrades
					----Delete from Trans_ComExchangeTrades Where ComExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
					----And ComExchangeTrades_Segment=@ExcSegmt 
					----And ComExchangeTrades_TradeDate=@FY
					----And ISNULL(ComExchangeTrades_TradeCategory,'XXX') in ('EXC','ASN','EXP')
					
----  ----------- Let us now create a table with Open Position as per the Back-Office records for comparision------


			create table #TmpExp (ClientID varchar(10),ProductID bigint,InstrType varchar(10) null,OptType varchar(10) null,strike numeric(18,4) null,expiry datetime,
			NetQty numeric(18,0),Symbol varchar(30) null,TCode varchar(20) null,ClPrd varchar(30) null)

			insert into #TmpExp (ClientID,ProductID,InstrType,OptType,strike,expiry,Symbol,TCode,NetQty)
			select ComCustomerTrades_CustomerID,ComCustomerTrades_ProductSeriesID,Commodity_Identifier,Commodity_TickerSeries,Commodity_StrikePrice,Commodity_ExpiryDate,
			commodity_tickersymbol,crg_tcode,
			SUM(ComCustomerTrades_QuantityLots) 
			from Trans_ComCustomerTrades,Master_Commodity,tbl_master_contactExchange
			where ComCustomerTrades_ExchangeSegment=@ExcSegmt
			and ComCustomerTrades_TradeDate<=@FY
			and Commodity_ExpiryDate>=@FY
			and ComCustomerTrades_ProductSeriesID=Commodity_ProductSeriesID
			and ComCustomerTrades_CustomerID=crg_cntID
			and crg_company=@ExchangeTrades_CompanyID
			and crg_exchange='BSE - CDX'
			group by ComCustomerTrades_CustomerID,ComCustomerTrades_ProductSeriesID,Commodity_Identifier,Commodity_TickerSeries,Commodity_StrikePrice,Commodity_ExpiryDate,commodity_tickersymbol,crg_tcode
			having SUM(ComCustomerTrades_QuantityLots)<>0

			Update #tmpTrans_BSECDX set BSECDX_ExchangeNet=isnull(BSECDX_PreNetBuy,0)-isnull(BSECDX_PreNetSell,0)
			
			Update #tmpTrans_BSECDX set BSECDX_ClPrd=ltrim(rtrim(cast(BSECDX_ProductSeriesID as varchar(15))))+ltrim(rtrim(BSECDX_ClientAcc))
			
			Update #TmpExp set NetQty=-1*NetQty
			Update #tmpTrans_BSECDX set BSECDX_BONet=netqty from #TmpExp
					where ClientID=BSECDX_CustomerID
					and ProductID=BSECDX_ProductSeriesID

			Update #TmpExp set ClPrd=ltrim(rtrim(cast(ProductID as varchar(15))))+ltrim(rtrim(TCode))
			Insert into #tmpTrans_BSECDX (BSECDX_TradeEntryTime,BSECDX_ClientAcc,BSECDX_InstrumentType,BSECDX_SecuritySymbol,
											BSECDX_EXPIRYDATE,BSECDX_StrikePrice,BSECDX_OptionType,BSECDX_EXCHANGENET,
											BSECDX_BONET)
				SELECT @FY,TCode,InstrType,Symbol,expiry,strike,OptType,0,NetQty FROM #TmpExp
					where ClPrd not in (select distinct BSECDX_ClPrd from #tmpTrans_BSECDX)


			Update #tmpTrans_BSECDX set BSECDX_PosDiff=
			isnull(BSECDX_exchangenet,0)-isnull(BSECDX_BONet,0)

----------------------------------------------------------------------------------------------------------------------
			
			If (select COUNT(*) from #tmpTrans_BSECDX where BSECDX_PosDiff<>0)>0
			
				select BSECDX_ClientAcc as ClientCode,BSECDX_InstrumentType As InstrType,
				BSECDX_SecuritySymbol As Symbol,convert(varchar(11),BSECDX_EXPIRYDATE,106) as ExpiryDate,
				ISNULL(BSECDX_OptionType,'FF') As OptType,BSECDX_StrikePrice As StrikePrice,
				isnull(BSECDX_ExchangeNet,0) As ExchangePos,isnull(BSECDX_BONet,0) As BOPos,
				BSECDX_PosDiff As [Difference]
				from #tmpTrans_BSECDX where BSECDX_PosDiff<>0
			
			Else
			
				select ' Client Wise Open Position in BO as on: '+convert(varchar(11),@FY,106)+' tallies with those in Exchange File'

		
				Delete from #tmpTrans_BSECDX where 
				isnull([BSECDX_ExcQty],0)+isnull([BSECDX_AsnQty],0)+isnull(abs([BSECDX_ExpQuantity]),0)=0
				----(abs([BSECDX_ExpQuantity])+abs(isnull([BSECDX_AsnExcAmount],0))=0
				----OR BSECDX_CMCode is NULL
				----OR [BSECDX_ExcQty]+[BSECDX_AsnQty]+[BSECDX_PostNetBuy]+[BSECDX_PostNetSell]=0)
				
---			select * from #tmpTrans_BSECDX

				if (select COUNT(*) from #tmpTrans_BSECDX)=0
				
					select ' No Final Settlement (Exercise/Assigment/Expiry) Trades Exist For: '+CONVERT(varchar(11),@FY,106)
				
				Else
--				
				Update #tmpTrans_BSECDX set BSECDX_Quantity=
												([BSECDX_ExcQty]+[BSECDX_AsnQty]+[BSECDX_PostNetBuy]+[BSECDX_PostNetSell])*
												(commodity_convnumerator/commodity_condenominator) 
												from Master_Commodity where
												Commodity_ProductSeriesID=BSECDX_ProductSeriesID

				Update #tmpTrans_BSECDX Set [BSECDX_TradePrice]=
								Case when left(ltrim(rtrim([BSECDX_InstrumentType])),3) ='FUT' THEN 
								[BSECDX_SettPrice]
								else abs([BSECDX_AsnExcAmount])/BSECDX_Quantity END
								where BSECDX_CMCode is not null

-----------------------------------Insert Into Main Table------------------------------------------------------------
	insert into Trans_ComExchangeTrades
       (comExchangeTrades_FinYear,comExchangeTrades_CompanyID,comExchangeTrades_Segment,comExchangeTrades_BranchID,
		comExchangeTrades_SettlementNumber,comExchangeTrades_SettlementType,comExchangeTrades_TradeDate,comExchangeTrades_TradeNumber,
		comExchangeTrades_OrderNumber,comExchangeTrades_SecurityExpiry,comExchangeTrades_TransactionType,comExchangeTrades_ProCli,
		comExchangeTrades_CustomerUcc,comExchangeTrades_CustomerID,comExchangeTrades_SecurityOptionType,comExchangeTrades_SecurityStrikePrice,
		comExchangeTrades_SecurityType,comExchangeTrades_SecuritySymbol,comExchangeTrades_SecuritySeries,comExchangeTrades_ProductSeriesID,
		comExchangeTrades_StrikePrice,comExchangeTrades_BuySellFlag,comExchangeTrades_QuantityLots,comExchangeTrades_UnitPrice,
		comExchangeTrades_UnitPriceQuantity,comExchangeTrades_MarketValue,comExchangeTrades_CustodialFlag,comExchangeTrades_CreateUser,
		comExchangeTrades_CreateDateTime,comExchangeTrades_IMPORTTYPE,ComExchangeTrades_ClearingMemberID,ComExchangeTrades_TradingMemberID,
		comExchangeTrades_TradeCategory,ComExchangeTrades_SettPrice)

			select 
				@SETT_FY,
				@ExchangeTrades_CompanyID,
				@ExcSegmt,
				(select cnt_branchid from tbl_master_contact where cnt_internalId=[BSECDX_CustomerID]),
				(Select Top(1) Settlements_Number FROM Master_Settlements 
				WHERE Settlements_ExchangeSegmentID=3
				AND @FY Between Settlements_StartDateTime AND Settlements_EndDateTime 
				AND Settlements_TypeSuffix='F'AND Settlements_FinYear=@SETT_FY), 
				'F',
				@FY,
				'FS - '+ cast ([BSECDX_ID] as varchar(12)),
				'FS - '+ cast ([BSECDX_ID] as varchar(12)),
				[BSECDX_EXPIRYDATE],   ---10
				'Orgnl',
				(Case when ltrim(rtrim([BSECDX_ProCli]))='C' then 1 Else 2 End),
				Ltrim(Rtrim([BSECDX_ClientAcc])),
				[BSECDX_CustomerID],
				Ltrim(Rtrim(ISNULL([BSECDX_OptionType],'FF'))),  ---15
				[BSECDX_StrikePrice],                                                                        -------------16
				Ltrim(Rtrim([BSECDX_InstrumentType])),
				Ltrim(Rtrim([BSECDX_SecuritySymbol])),
				Ltrim(Rtrim(ISNULL([BSECDX_OptionType],'FF'))),
				[BSECDX_ProductSeriesID],                           ---------------------------------------20
				[BSECDX_StrikePrice],               ------------------------------------------21
				(CASE WHEN left(Ltrim(Rtrim([BSECDX_InstrumentType])),3)='FUT' AND [BSECDX_PostNetBuy]>0 THEN '2'
					WHEN left(Ltrim(Rtrim([BSECDX_InstrumentType])),3)='FUT' AND [BSECDX_PostNetSell]>0 THEN '1' 
					WHEN left(Ltrim(Rtrim([BSECDX_InstrumentType])),3)='OPT' AND [BSECDX_ExcQty]>0 THEN '2'
					WHEN left(Ltrim(Rtrim([BSECDX_InstrumentType])),3)='OPT' AND [BSECDX_AsnQty]>0 THEN '1' 
					ELSE '1' END),
				[BSECDX_ExcQty]+[BSECDX_AsnQty]+[BSECDX_PostNetBuy]+[BSECDX_PostNetSell],
				[BSECDX_TradePrice],
				BSECDX_Quantity,        --------------25
				cast([BSECDX_TradePrice]*BSECDX_Quantity as numeric(18,2)),
				'N',
				cast(@ModifyUser as int),
				getdate(),
				'P',                  ---------------30
				[BSECDX_CMCode],
				[BSECDX_TMCode],
				CASE When [BSECDX_PostNetBuy]+[BSECDX_PostNetSell]>0 then 'EXP'
					 When [BSECDX_ExcQty]>0 then 'EXC' Else 'ASN' End,
				[BSECDX_SettPrice]	 
				
				from #tmpTrans_BSECDX
----
----
-----------------------------------------------------Checking For CustomerID Is Null---------------------------------
--
					SELECT DISTINCT comExchangeTrades_CustomerUcc FROM 
					Trans_ComExchangeTrades,#tmpTrans_BSECDX WHERE
					comExchangeTrades_Segment=@ExcSegmt 
					AND comExchangeTrades_TradeDate=cast(@FY as DateTime)
					AND (comExchangeTrades_CustomerID IS NULL or 
						len(comExchangeTrades_CustomerID)=0) 
					and comExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
					and BSECDX_CMCode is not null
--
--
---------------------------------------------------Showing the Import Summary --------------------------------------------------------
					select comExchangeTrades_settlementnumber as [Sett.No],
					comExchangeTrades_settlementtype as [Sett.Type],
					sum(rowcnt) as Records,
					cast(sum(isnull(buy,0))as numeric(18,2)) as [Buy Obligation],
					cast(sum(isnull(sell,0))as numeric(18,2)) as [Sell Obligation],
					cast((sum(isnull(sell,0))-sum(isnull(buy,0)))as numeric(18,2)) as [Net Obligation]
					 from
					(select comExchangeTrades_settlementnumber,comExchangeTrades_settlementtype,COUNT(comExchangeTrades_settlementtype) as rowcnt,
					case when comExchangeTrades_buysellflag=1 then sum(comExchangeTrades_marketvalue) else null end buy,
					case when  comExchangeTrades_buysellflag=2 then sum(comExchangeTrades_marketvalue)  else null end as sell
					from TRANS_comExchangeTrades WHERE
					comExchangeTrades_SEGMENT=@ExcSegmt 
					and comExchangeTrades_TransactionType='Orgnl'
					And comExchangeTrades_ImportType='P'
					AND comExchangeTrades_TradeDate=@FY
					and comExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
					group by comExchangeTrades_settlementnumber,comExchangeTrades_settlementtype,comExchangeTrades_buysellflag)as bb
					group by comExchangeTrades_settlementnumber,comExchangeTrades_settlementtype
----------------------------------------------------Select Terminal ID not present in tradingterminal----------------------------------
					SELECT 'NA' as TERMINALID 
----------------------------------------------------------------------------------------------------------------
					Select @FY as TradeDate	
-------------------------------------------------------------------------------------------------------------------
					Select @FY as TradeDate
----------------------------------------------------------------------------------------------------------------
--
----------------------------------------------------Select UCC----------------------------------
						SELECT DISTINCT	comExchangeTrades_CustomerUCC from TRANS_comEXCHANGETRADES WHERE
						comEXCHANGETRADES_SEGMENT=@ExcSegmt AND comExchangeTrades_TradeDate=cast(@FY as datetime)
						and comExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
						and comExchangeTrades_TransactionType='Orgnl' and comExchangeTrades_ImportType='P'
----------------------------------------------------------------------------------------------------------------
	
	Set @LockMsg=''
	end
	Else
		begin
			Set @LockMsg= 'The Data is Locked' 
		end
	drop table #tmpTrans_BSECDX
	drop table #TmpExp
END



GO

