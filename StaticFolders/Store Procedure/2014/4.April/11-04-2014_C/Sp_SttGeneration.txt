
ALTER procedure [dbo].[Sp_SttGeneration]--------------FOR NSECM
@date varchar(50),
@ClientsID varchar(max),
@segment varchar(20),
@MasterSegment varchar(20),
@Companyid varchar(30),
@createuser varchar(50),
@forcntrnogenerate varchar(50)

as
begin

------------------------------------------------------------Notes--------------------------------------------------------
/*
	Changes Made For New Stt Generation For Contract Pattern Single,Sharewise,Orderwise,BuySellwise
	1.Finding Out Contract Pattern From BrokerageMain Table Then Evaluate Accordingly.Cause Stt is now depended on
	Contract Pattern (Single then DayWise and Sharewise,Orderwise,BuySellwise then ContractNo)
*/
-------------------------------------------------------------------------------------------------------------------------
 Declare @SqlSelect varchar(max),@SqlSelect1 varchar(max),@SqlSelect2 varchar(max)
 select @SqlSelect='',@SqlSelect1='',@SqlSelect2=''

create table #TEMP(customerid varchar(50),productid varchar(50),setno varchar(50),settype varchar(20),
companyid varchar(50),finyear varchar(50),segmentid varchar(20),branchid varchar(50),ucc varchar(50),
BrokerageId varchar(50),GroupCode varchar(50),symbol varchar(50),series varchar(50),contractno varchar(50),
sttpattern varchar(20),RateDelBuy numeric(8,6),RateDelSale numeric(8,6),RateSqr numeric(8,6),
mktvalue numeric(28,6),quantity numeric(28,6),wap numeric(28,6),purchasequantity numeric(28,6),
purchasemktvalue numeric(28,6),sellquantity numeric(28,6),sellmktvalue numeric(28,6),
delbuyquantity numeric(28,6),delsellquantity numeric(28,6),diffquantity numeric(28,6),
delbuyvalue numeric(28,6),delsellvalue numeric(28,6),diffvalue numeric(28,6),
taxmode char(1),Equity_STT char(1))


-----------------------------------FETCH BRKG-ID---------------------------------------------
select @SqlSelect='select distinct CustomerTrades_CustomerID,CustomerTrades_ProductSeriesID,
					BrokerageMain_ID,CustomerTrades_SettlementNumber,CustomerTrades_SettlementType,
					CustomerTrades_CompanyID,CustomerTrades_FinYear,CustomerTrades_ExchangeSegment,
					CustomerTrades_BranchID,crg_tcode,Equity_TickerSymbol,Equity_Series,
					CustomerTrades_ContractNoteNumber,crg_STTPattern,Equity_STT
					from

			(select CustomerTrades_CustomerID,CustomerTrades_ProductSeriesID,
			CustomerTrades_SettlementNumber,CustomerTrades_SettlementType,CustomerTrades_CompanyID,
			CustomerTrades_FinYear,CustomerTrades_ExchangeSegment,CustomerTrades_BranchID,crg_tcode,
			Equity_TickerSymbol,Equity_Series,CustomerTrades_ContractNoteNumber,crg_STTPattern,
			Equity_STT,
			isnull((select  ChargeGroupMembers_GroupCode from  Trans_ChargeGroupMembers where  
			ChargeGroupMembers_SegmentID=CustomerTrades_ExchangeSegment 
			and CustomerTrades_CompanyID=ChargeGroupMembers_CompanyID 
			and ChargeGroupMembers_CustomerID=CustomerTrades_CustomerID and CustomerTrades_TradeDate
			between cast(CONVERT(VARCHAR(11),ChargeGroupMembers_FromDate,106) as datetime) 
			and cast(CONVERT(VARCHAR(11),isnull(ChargeGroupMembers_UntilDate,''2100-01-01 00:00:00.000''),106)
			 as datetime)),''DEFAULT'')
			as ChargeGroupMembers_GroupCode

			from Trans_CustomerTrades,tbl_master_contact,Master_Equity,tbl_master_contactExchange
			where crg_exchange=(select exh_shortName+'+char(39)+' - '+char(39)+'+exch_segmentId as SegmentName 
			from tbl_master_companyExchange,
			tbl_master_Exchange where exch_compid='+char(39)+@Companyid +char(39)+' 
			and exch_internalId ='+char(39)+@segment+char(39)+' and exh_cntId=exch_exchId)'
			IF @ClientsID<>'ALL'
			BEGIN
				SELECT @SqlSelect=@SqlSelect+' and crg_cntid in ('+ @ClientsID +') '
			END
			SELECT @SqlSelect=@SqlSelect+'
			and crg_cntid=CustomerTrades_CustomerID 
			and crg_company=CustomerTrades_CompanyID
			and isnull(CustomerTrades_TradeCategory,''R'') not in (''CFS'',''CFT'',''CA'',''AUC'',''ARS'',''ART'',''NOC'')
			and Equity_SeriesID=CustomerTrades_ProductSeriesID
			and cnt_internalid=CustomerTrades_CustomerID
			and cast('+char(39)+@date+char(39)+' as datetime)=cast(CONVERT(VARCHAR(11),
			CustomerTrades_TradeDate, 106)as datetime) 
			and CustomerTrades_ExchangeSegment='+char(39)+@segment+char(39)+' 
			and CustomerTrades_CompanyID='+char(39)+@Companyid+char(39)+' 
			) as tab,Config_BrokerageMain

			where ChargeGroupMembers_GroupCode=BrokerageMain_CustomerID '
			IF @ClientsID<>'ALL'
			BEGIN
				SELECT @SqlSelect=@SqlSelect+' and CustomerTrades_CustomerID in('+@ClientsID+') '
			END
			SELECT @SqlSelect=@SqlSelect+'
			and cast('+char(39)+@date+char(39)+' as datetime)
			between cast(CONVERT(VARCHAR(11),BrokerageMain_FromDate,106) as datetime) 
			and cast(CONVERT(VARCHAR(11),isnull(BrokerageMain_UntilDate,''2100-01-01 00:00:00.000''),106) 
			as datetime)
			and BrokerageMain_SegmentID='+char(39)+@segment+char(39)+' 
			and BrokerageMain_CompanyID='+char(39)+@Companyid+char(39)+''

--print @SqlSelect

	insert into #TEMP (customerid,productid,BrokerageId,setno,settype,companyid,finyear,segmentid,branchid,ucc,
	symbol,series,contractno,sttpattern,Equity_STT)
	exec(@SqlSelect)


	-----If N Series Is Exists
    Delete From #TEMP Where series like 'N%'
    
    -----Change For SttPattern See Note 1 On Starting For Further Detail
    Update #TEMP
    Set sttpattern=Case When BrokerageMain_ContractPattern=1 Then 'D' Else 'C' End
    from Config_BrokerageMain
    Where BrokerageMain_ID=BrokerageId
	
	--Select * from #TEMP

    
-------------------------------------------END----------------------------------------------

----------------------------------------FETCH GROUP CODE-------------------------------------
update #TEMP set GroupCode=ChargeSetup_ChargeGroup,
	taxmode=case when ChargeSetup_ChargeBasis='1' then 'I' when  ChargeSetup_ChargeBasis='2' then 'E' else 'N' end
	from Config_ChargeSetup
	where ChargeSetup_ChargeType='SX'
	and ChargeSetup_MainID=BrokerageId

Delete From #TEMP Where taxmode='N'
------------------------------------------END-------------------------------------------------
-------------------------------------------MODE CHECK ----------------------------------------
--    update #TEMP set taxmode=case when ChargeSetup_ChargeBasis='1' then 'I' when  ChargeSetup_ChargeBasis='2' then 'E' else null end 
--		(select customerid as TempClientsid,ChargeSetup_ChargeBasis 
--			from Config_ChargeSetup,#TEMP where ChargeSetup_ChargeType='SX'
--				and ChargeSetup_MainID=BrokerageId)as tb
---------------------------------------------END---------------------------------------------------
-----------------------------------------RATES FETCH ----------------------------------------

    update #TEMP set RateDelBuy=STTRates_RateDelBuy,
		RateDelSale=STTRates_RateDelSale,
			RateSqr=STTRates_RateSqr
				from Config_STTRates
					where STTRates_ChargeGroupID=GroupCode
					and cast(@date as datetime)
					between cast(CONVERT(VARCHAR(11),STTRates_DateFrom,106) as datetime) 
					and cast(CONVERT(VARCHAR(11),isnull(STTRates_DateTo,'2100-01-01 00:00:00.000'),106)as datetime)
					and STTRates_ExchangeSegmentID=@segment
					and STTRates_CompanyID=@Companyid
					and isnull(Equity_STT,'Y')='Y'

    update #TEMP set RateDelBuy=STTRates_RateDelBuyETF,
		RateDelSale=STTRates_RateDelSaleETF,
			RateSqr=STTRates_RateSqrETF
				from Config_STTRates
					where STTRates_ChargeGroupID=GroupCode
					and cast(@date as datetime)
					between cast(CONVERT(VARCHAR(11),STTRates_DateFrom,106) as datetime) 
					and cast(CONVERT(VARCHAR(11),isnull(STTRates_DateTo,'2100-01-01 00:00:00.000'),106)as datetime)
					and STTRates_ExchangeSegmentID=@segment
					and STTRates_CompanyID=@Companyid
					and isnull(Equity_STT,'Y')='T'

-------------------------------------------END---------------------------------------------------


---***Note Here sttpattern=ContractPattern(Already Updated Starting of Sp)***-----------------
------******************************** Where Contract Pattern is (1)*********************************************************------------------

select @SqlSelect1='update #TEMP set mktvalue=tempmktvalue,quantity=tempquantity,
					wap=round((tempmktvalue/tempquantity),2)
from
(select CustomerTrades_CustomerID as tempCustId,CustomerTrades_ProductSeriesID as tempproductid,
CustomerTrades_SettlementNumber as tempsetno,CustomerTrades_SettlementType as tempsettype,
sum(abs(isnull(CustomerTrades_MarketValue,0.0))) as tempmktvalue,
sum(abs(isnull(CustomerTrades_UnitPriceQuantity,0.0))) as tempquantity
from Trans_CustomerTrades where
CustomerTrades_TradeDate=cast('+char(39)+@date+char(39)+' as datetime)'
IF @ClientsID<>'ALL'
BEGIN
	SELECT @SqlSelect1=@SqlSelect1+' and CustomerTrades_CustomerID in('+@ClientsID+') '
END
SELECT @SqlSelect1=@SqlSelect1+'
and isnull(CustomerTrades_TradeCategory,''R'') not in (''CFS'',''CFT'',''CA'',''AUC'',''ARS'',''ART'',''NOC'')
and CustomerTrades_ExchangeSegment='+char(39)+@segment+char(39)+' 
and CustomerTrades_CompanyID='+char(39)+@companyid +char(39)+'
group by CustomerTrades_ProductSeriesID,CustomerTrades_CustomerID,
CustomerTrades_SettlementNumber,CustomerTrades_SettlementType) as temp
where customerid=tempCustId 
and productid=tempproductid
and setno=tempsetno
and settype=tempsettype
and sttpattern=''D'''
---------------------------------------------END---------------------------------------------------
exec(@SqlSelect1)
------------------------------------Fetch purchase quantity,mkt value,sell quantity,sell value-----------
select @SqlSelect2='
update #TEMP set
					purchasequantity =temppurchasequantity ,purchasemktvalue=temppurchasemktvalue,
					sellquantity =tempsellquantity ,sellmktvalue=tempsellmktvalue

from
(select case when BUY_ProductSeriesID is null then Sell_ProductSeriesID else BUY_ProductSeriesID end as BUY_ProductSeriesID,
case when BUY_CustomerTrades_CustomerID is null then Sell_CustomerTrades_CustomerID else BUY_CustomerTrades_CustomerID end as BUY_CustomerTrades_CustomerID,
case when BUY_setno is null then Sell_setno else BUY_setno end as BUY_setno,
case when BUY_settype is null then Sell_settype else BUY_settype end as BUY_settype,
case when Buy_Qty is null then 0.0 else Buy_Qty end as temppurchasequantity,
case when Buy_Mkt is null then 0.0 else Buy_Mkt end as temppurchasemktvalue,
case when Sell_Qty is null then 0.0 else Sell_Qty end as tempsellquantity,
case when Sell_Mkt is null then 0.0 else Sell_Mkt end as tempsellmktvalue
		from

(select distinct CustomerTrades_ProductSeriesID as BUY_ProductSeriesID,
CustomerTrades_CustomerID as BUY_CustomerTrades_CustomerID,
CustomerTrades_SettlementNumber as BUY_setno,CustomerTrades_SettlementType as BUY_settype,
sum(abs(isnull(CustomerTrades_UnitPriceQuantity,0.0))) as Buy_Qty,
sum(abs(isnull(CustomerTrades_MarketValue,0.0))) as Buy_Mkt
from Trans_CustomerTrades
where 
CustomerTrades_UnitPriceQuantity<0'
IF @ClientsID<>'ALL'
BEGIN
	SELECT @SqlSelect2=@SqlSelect2+' and CustomerTrades_CustomerID in('+ @ClientsID +') '
END
SELECT @SqlSelect2=@SqlSelect2+'
and isnull(CustomerTrades_TradeCategory,''R'') not in (''CFS'',''CFT'',''CA'',''AUC'',''ARS'',''ART'',''NOC'')
and CustomerTrades_TradeDate=cast('+char(39)+@date+char(39)+' as datetime)
and CustomerTrades_ExchangeSegment='+char(39)+@segment+char(39)+' 
and CustomerTrades_CompanyID='+char(39)+@companyid +char(39)+'
group by CustomerTrades_ProductSeriesID,CustomerTrades_CustomerID,
CustomerTrades_SettlementNumber,CustomerTrades_SettlementType) as BUYTAB

full outer join


(select distinct CustomerTrades_ProductSeriesID as Sell_ProductSeriesID,
CustomerTrades_CustomerID as Sell_CustomerTrades_CustomerID,
CustomerTrades_SettlementNumber as Sell_setno,CustomerTrades_SettlementType as Sell_settype,
sum(isnull(CustomerTrades_UnitPriceQuantity,0.0)) as Sell_Qty,
sum(isnull(CustomerTrades_MarketValue,0.0)) as Sell_Mkt
from Trans_CustomerTrades
where 
CustomerTrades_UnitPriceQuantity>0'
IF @ClientsID<>'ALL'
BEGIN
	SELECT @SqlSelect2=@SqlSelect2+' and CustomerTrades_CustomerID in('+ @ClientsID +') '
END
SELECT @SqlSelect2=@SqlSelect2+'
and isnull(CustomerTrades_TradeCategory,''R'') not in (''CFS'',''CFT'',''CA'',''AUC'',''ARS'',''ART'',''NOC'')
and CustomerTrades_TradeDate=cast('+char(39)+@date+char(39)+' as datetime)
and CustomerTrades_ExchangeSegment='+char(39)+@segment+char(39)+' 
and CustomerTrades_CompanyID='+char(39)+@companyid +char(39)+'
group by CustomerTrades_ProductSeriesID,CustomerTrades_CustomerID,
CustomerTrades_SettlementNumber,CustomerTrades_SettlementType) as SellTAB

on(BUY_ProductSeriesID=Sell_ProductSeriesID 
and BUY_CustomerTrades_CustomerID=Sell_CustomerTrades_CustomerID
and BUY_setno=Sell_setno
and BUY_settype=Sell_settype)) as tb-----------Condition btn BUYTAB & SellTAB

where productid=BUY_ProductSeriesID
and customerid=BUY_CustomerTrades_CustomerID
and setno=BUY_setno
and settype=BUY_settype
and sttpattern=''D'''---Condition btn #Temp & tb
-------------------------------------END-----------------------------------------------------------------
exec(@SqlSelect2)
------------------------------------Fetch DEL Buy Quantity and DEL Buy Value----------------------------------

-----------Settelment Type 'A' and 'N'-------------------------
update #Temp set delbuyquantity=tempdelbuyquantity,delbuyvalue=(tempdelbuyquantity*tempwap)
from
(select productid as tempproductid,customerid as tempcustomerid,wap as tempwap,
	setno as tempsetno,settype as tempsettype,
		case when purchasequantity>sellquantity 
			then (purchasequantity-sellquantity) else 0.0 end 
				as tempdelbuyquantity from #Temp) as temp
					where productid=tempproductid
					and customerid=tempcustomerid
					and setno=tempsetno
					and settype=tempsettype
					and settype in('N','A')
					and sttpattern='D'
-----------END------------------
-----------Settelment Type 'W' ----------------
update #Temp set delbuyquantity=tempdelbuyquantity,delbuyvalue=(tempdelbuyquantity*tempwap)
from
(select productid as tempproductid,customerid as tempcustomerid,wap as tempwap,
	setno as tempsetno,settype as tempsettype,purchasequantity as tempdelbuyquantity 
		from #Temp) as temp
					where productid=tempproductid
					and customerid=tempcustomerid
					and setno=tempsetno
					and settype=tempsettype
					and settype='W'
					and sttpattern='D'
-----------END------------------

------------------------------------END------------------------------------------------------------
------------------------------------Fetch DEL Sell Quantity and DEL Sell Value---------------------------
-----------Settelment Type 'A' and 'N'-------------------------

update #Temp set delsellquantity=tempsellquantity,delsellvalue=(tempsellquantity*tempwap)
from
(select productid as tempproductid,customerid as tempcustomerid,wap as tempwap,
	setno as tempsetno,settype as tempsettype,
		case when sellquantity>purchasequantity
			then (sellquantity-purchasequantity) else 0.0 end 
				as tempsellquantity from #Temp) as temp
					where productid=tempproductid
					and customerid=tempcustomerid
					and setno=tempsetno
					and settype=tempsettype
					and settype in('N','A')
					and sttpattern='D'

-----------END------------------
-----------Settelment Type 'W'-------------------------

update #Temp set delsellquantity=tempsellquantity,delsellvalue=(tempsellquantity*tempwap)
from
(select productid as tempproductid,customerid as tempcustomerid,wap as tempwap,
	setno as tempsetno,settype as tempsettype,sellquantity as tempsellquantity
			 from #Temp) as temp
					where productid=tempproductid
					and customerid=tempcustomerid
					and setno=tempsetno
					and settype=tempsettype
					and settype='W'
					and sttpattern='D'
-----------END------------------

------------------------------------END------------------------------------------------------------

---------------------Fetch Diff Quantity and Diff Value---------------------------
-----------Settelment Type 'A' and 'N'-------------------------

update #Temp set diffquantity=tempdiffquantity,diffvalue=(tempdiffquantity*tempwap)
from
(select productid as tempproductid,customerid as tempcustomerid,wap as tempwap,
	setno as tempsetno,settype as tempsettype,
		case when (sellquantity=0.0 or purchasequantity=0.0) then 0.0
			 when sellquantity>purchasequantity then purchasequantity
			 when sellquantity<purchasequantity then sellquantity 
			 else purchasequantity end as tempdiffquantity from #Temp) as temp
					where productid=tempproductid
					and customerid=tempcustomerid
					and setno=tempsetno
					and settype=tempsettype
					and settype in('N','A')
					and sttpattern='D'

-----------END------------------
-----------Settelment Type 'W'-------------------------

update #Temp set diffquantity=tempdiffquantity,diffvalue=(tempdiffquantity*tempwap)
from
(select productid as tempproductid,customerid as tempcustomerid,wap as tempwap,
	setno as tempsetno,settype as tempsettype,0.0 as tempdiffquantity 
		from #Temp) as temp
					where productid=tempproductid
					and customerid=tempcustomerid
					and setno=tempsetno
					and settype=tempsettype
					and settype='W'
					and sttpattern='D'

-----------END------------------

------******************************** End Of Section (Where Contract Pattern is (1))*********************************************************------------------
--------------/////////////////////////////////////////////////////////////////////////////////////////////////****************************************************




------******************************** Where Contract Pattern is (2,3,6)*********************************************************------------------
------------------------------------------MKT VALUE and UNITPRICEQUANTITY FETCH-----------------
----MarketValue,Wap,Quantity Updation
select @SqlSelect1='update #TEMP set mktvalue=tempmktvalue,quantity=tempquantity,
					wap=round((tempmktvalue/tempquantity),2)
from
(select CustomerTrades_CustomerID as tempCustId,CustomerTrades_ProductSeriesID as tempproductid,
CustomerTrades_SettlementNumber as tempsetno,CustomerTrades_SettlementType as tempsettype,
sum(abs(isnull(CustomerTrades_MarketValue,0.0))) as tempmktvalue,
sum(abs(isnull(CustomerTrades_UnitPriceQuantity,0.0))) as tempquantity,
CustomerTrades_ContractNoteNumber as tempCntrNo
from Trans_CustomerTrades where
CustomerTrades_TradeDate=cast('+char(39)+@date+char(39)+' as datetime)'
IF @ClientsID<>'ALL'
BEGIN
	SELECT @SqlSelect1=@SqlSelect1+' and CustomerTrades_CustomerID in('+@ClientsID+') '
END
SELECT @SqlSelect1=@SqlSelect1+'
and isnull(CustomerTrades_TradeCategory,''R'') not in (''CFS'',''CFT'',''CA'',''AUC'',''ARS'',''ART'',''NOC'')
and CustomerTrades_ExchangeSegment='+char(39)+@segment+char(39)+' 
and CustomerTrades_CompanyID='+char(39)+@companyid +char(39)+'
group by CustomerTrades_ProductSeriesID,CustomerTrades_CustomerID,
CustomerTrades_SettlementNumber,CustomerTrades_SettlementType,CustomerTrades_ContractNoteNumber) as temp
where customerid=tempCustId 
and productid=tempproductid
and setno=tempsetno
and settype=tempsettype
and contractno=tempCntrNo
and sttpattern=''C'''


exec(@SqlSelect1)

---------------------------------------------END---------------------------------------------------

------------------------------------Fetch purchase quantity,mkt value,sell quantity,sell value-----------
select @SqlSelect2='
update #TEMP set
					purchasequantity =temppurchasequantity ,purchasemktvalue=temppurchasemktvalue,
					sellquantity =tempsellquantity ,sellmktvalue=tempsellmktvalue

from
(select case when BUY_ProductSeriesID is null then Sell_ProductSeriesID else BUY_ProductSeriesID end as BUY_ProductSeriesID,
case when BUY_CustomerTrades_CustomerID is null then Sell_CustomerTrades_CustomerID else BUY_CustomerTrades_CustomerID end as BUY_CustomerTrades_CustomerID,
case when BUY_setno is null then Sell_setno else BUY_setno end as BUY_setno,
case when BUY_settype is null then Sell_settype else BUY_settype end as BUY_settype,
case when Buy_Qty is null then 0.0 else Buy_Qty end as temppurchasequantity,
case when Buy_Mkt is null then 0.0 else Buy_Mkt end as temppurchasemktvalue,
case when Sell_Qty is null then 0.0 else Sell_Qty end as tempsellquantity,
case when Sell_Mkt is null then 0.0 else Sell_Mkt end as tempsellmktvalue,
isnull(Buy_ContractNo,Sell_ContractNo) BS_ContractNo
		from

(select distinct CustomerTrades_ProductSeriesID as BUY_ProductSeriesID,
CustomerTrades_CustomerID as BUY_CustomerTrades_CustomerID,
CustomerTrades_SettlementNumber as BUY_setno,CustomerTrades_SettlementType as BUY_settype,
sum(abs(isnull(CustomerTrades_UnitPriceQuantity,0.0))) as Buy_Qty,
sum(abs(isnull(CustomerTrades_MarketValue,0.0))) as Buy_Mkt,
CustomerTrades_ContractNoteNumber Buy_ContractNo
from Trans_CustomerTrades
where 
CustomerTrades_UnitPriceQuantity<0'
IF @ClientsID<>'ALL'
BEGIN
	SELECT @SqlSelect2=@SqlSelect2+' and CustomerTrades_CustomerID in('+ @ClientsID +') '
END
SELECT @SqlSelect2=@SqlSelect2+'
and isnull(CustomerTrades_TradeCategory,''R'') not in (''CFS'',''CFT'',''CA'',''AUC'',''ARS'',''ART'',''NOC'')
and CustomerTrades_TradeDate=cast('+char(39)+@date+char(39)+' as datetime)
and CustomerTrades_ExchangeSegment='+char(39)+@segment+char(39)+' 
and CustomerTrades_CompanyID='+char(39)+@companyid +char(39)+'
group by CustomerTrades_ProductSeriesID,CustomerTrades_CustomerID,
CustomerTrades_SettlementNumber,CustomerTrades_SettlementType,CustomerTrades_ContractNoteNumber) as BUYTAB

full outer join


(select distinct CustomerTrades_ProductSeriesID as Sell_ProductSeriesID,
CustomerTrades_CustomerID as Sell_CustomerTrades_CustomerID,
CustomerTrades_SettlementNumber as Sell_setno,CustomerTrades_SettlementType as Sell_settype,
sum(isnull(CustomerTrades_UnitPriceQuantity,0.0)) as Sell_Qty,
sum(isnull(CustomerTrades_MarketValue,0.0)) as Sell_Mkt,
CustomerTrades_ContractNoteNumber as Sell_ContractNo
from Trans_CustomerTrades
where 
CustomerTrades_UnitPriceQuantity>0'
IF @ClientsID<>'ALL'
BEGIN
	SELECT @SqlSelect2=@SqlSelect2+' and CustomerTrades_CustomerID in('+ @ClientsID +') '
END
SELECT @SqlSelect2=@SqlSelect2+'
and isnull(CustomerTrades_TradeCategory,''R'') not in (''CFS'',''CFT'',''CA'',''AUC'',''ARS'',''ART'',''NOC'')
and CustomerTrades_TradeDate=cast('+char(39)+@date+char(39)+' as datetime)
and CustomerTrades_ExchangeSegment='+char(39)+@segment+char(39)+' 
and CustomerTrades_CompanyID='+char(39)+@companyid +char(39)+'
group by CustomerTrades_ProductSeriesID,CustomerTrades_CustomerID,
CustomerTrades_SettlementNumber,CustomerTrades_SettlementType,CustomerTrades_ContractNoteNumber) as SellTAB

on(BUY_ProductSeriesID=Sell_ProductSeriesID 
and BUY_CustomerTrades_CustomerID=Sell_CustomerTrades_CustomerID
and BUY_setno=Sell_setno
and BUY_settype=Sell_settype
and Buy_ContractNo=Sell_ContractNo)) as tb-----------Condition btn BUYTAB & SellTAB

where productid=BUY_ProductSeriesID
and customerid=BUY_CustomerTrades_CustomerID
and setno=BUY_setno
and settype=BUY_settype
and ContractNo=BS_ContractNo
and sttpattern=''C'''---Condition btn #Temp & tb
-------------------------------------END-----------------------------------------------------------------
exec(@SqlSelect2)


------------------------------------Fetch DEL Buy Quantity and DEL Buy Value----------------------------------


-----------Settelment Type 'A' and 'N'-------------------------
update #Temp set delbuyquantity=tempdelbuyquantity,delbuyvalue=(tempdelbuyquantity*tempwap)
from
(select productid as tempproductid,customerid as tempcustomerid,wap as tempwap,
	setno as tempsetno,settype as tempsettype,
		case when purchasequantity>sellquantity 
			then (purchasequantity-sellquantity) else 0.0 end 
				as tempdelbuyquantity,contractno tempcontractno from #Temp) as temp
					where productid=tempproductid
					and customerid=tempcustomerid
					and setno=tempsetno
					and settype=tempsettype
					and settype in('N','A')
					and contractno=tempcontractno
					and sttpattern='C'
-----------END------------------
-----------Settelment Type 'W' ----------------
update #Temp set delbuyquantity=tempdelbuyquantity,delbuyvalue=(tempdelbuyquantity*tempwap)
from
(select productid as tempproductid,customerid as tempcustomerid,wap as tempwap,
	setno as tempsetno,settype as tempsettype,purchasequantity as tempdelbuyquantity,contractno as tempcontractno
		from #Temp) as temp
					where productid=tempproductid
					and customerid=tempcustomerid
					and setno=tempsetno
					and settype=tempsettype
					and settype='W'
					and contractno=tempcontractno
					and sttpattern='C'
-----------END------------------

------------------------------------END------------------------------------------------------------
------------------------------------Fetch DEL Sell Quantity and DEL Sell Value---------------------------
-----------Settelment Type 'A' and 'N'-------------------------

update #Temp set delsellquantity=tempsellquantity,delsellvalue=(tempsellquantity*tempwap)
from
(select productid as tempproductid,customerid as tempcustomerid,wap as tempwap,
	setno as tempsetno,settype as tempsettype,
		case when sellquantity>purchasequantity
			then (sellquantity-purchasequantity) else 0.0 end 
				as tempsellquantity,contractno as tempcontractno from #Temp) as temp
					where productid=tempproductid
					and customerid=tempcustomerid
					and setno=tempsetno
					and settype=tempsettype
					and settype in('N','A')
					and contractno=tempcontractno
					and sttpattern='C'

-----------END------------------
-----------Settelment Type 'W'-------------------------

update #Temp set delsellquantity=tempsellquantity,delsellvalue=(tempsellquantity*tempwap)
from
(select productid as tempproductid,customerid as tempcustomerid,wap as tempwap,
	setno as tempsetno,settype as tempsettype,sellquantity as tempsellquantity,contractno as tempcontractno
			 from #Temp) as temp
					where productid=tempproductid
					and customerid=tempcustomerid
					and setno=tempsetno
					and settype=tempsettype
					and settype='W'
					and contractno=tempcontractno
					and sttpattern='C'
-----------END------------------

------------------------------------END------------------------------------------------------------
---------------------Fetch Diff Quantity and Diff Value---------------------------
-----------Settelment Type 'A' and 'N'-------------------------

update #Temp set diffquantity=tempdiffquantity,diffvalue=(tempdiffquantity*tempwap)
from
(select productid as tempproductid,customerid as tempcustomerid,wap as tempwap,
	setno as tempsetno,settype as tempsettype,
		case when (sellquantity=0.0 or purchasequantity=0.0) then 0.0
			 when sellquantity>purchasequantity then purchasequantity
			 when sellquantity<purchasequantity then sellquantity 
			 else purchasequantity end as tempdiffquantity from #Temp) as temp
					where productid=tempproductid
					and customerid=tempcustomerid
					and setno=tempsetno
					and settype=tempsettype
					and settype in('N','A')

-----------END------------------
-----------Settelment Type 'W'-------------------------

update #Temp set diffquantity=tempdiffquantity,diffvalue=(tempdiffquantity*tempwap)
from
(select productid as tempproductid,customerid as tempcustomerid,wap as tempwap,
	setno as tempsetno,settype as tempsettype,0.0 as tempdiffquantity 
		from #Temp) as temp
					where productid=tempproductid
					and customerid=tempcustomerid
					and setno=tempsetno
					and settype=tempsettype
					and settype='W'
					and sttpattern='C'

-----------END------------------

------------------------------------END------------------------------------------------------------
------******************************** End Of Section (Where Contract Pattern is (2,3,6))*********************************************************------------------


----------------------------DELETE ALL DATA FOR Trans_Sttax and Trans_SttaxSummary------------------

declare @Sqldelete varchar(max),@Sqldelete1 varchar(max)
select @Sqldelete='',@Sqldelete1=''
select @Sqldelete='delete from Trans_Sttax where Sttax_Type=''Prov'' '
					IF @ClientsID<>'ALL'
					BEGIN
						SELECT @Sqldelete=@Sqldelete+' and Sttax_CustomerID in('+ @ClientsID +') '
					END
					SELECT @Sqldelete=@Sqldelete+'
					and Sttax_STTDate=cast('+char(39)+@date+char(39)+' as datetime)
					and Sttax_SegmentID='+char(39)+@segment+char(39)+' 
					and Sttax_CompanyID='+char(39)+@companyid +char(39)+''

select @Sqldelete1='delete from Trans_SttaxSummary where SttaxSummary_Type=''Prov'''
					IF @ClientsID<>'ALL'
					BEGIN
						SELECT @Sqldelete1=@Sqldelete1+' and SttaxSummary_CustomerID in('+ @ClientsID +')'
					END
					SELECT @Sqldelete1=@Sqldelete1+'
					and SttaxSummary_STTDate=cast('+char(39)+@date+char(39)+' as datetime)
					and SttaxSummary_SegmentID='+char(39)+@segment+char(39)+' 
					and SttaxSummary_CompanyID='+char(39)+@companyid +char(39)+''

exec (@Sqldelete)
exec(@Sqldelete1)
------------------------------------END-------------------------------------------------------------

---------------------------------insert into main table(Trans_Sttax)--------------------------------------
-------***********sttpattern D OR null
insert into Trans_Sttax(Sttax_CompanyID,Sttax_SegmentID,Sttax_BranchID,Sttax_FinYear,Sttax_STTDate,Sttax_Type,
Sttax_CustomerID,Sttax_SettlementNumber,Sttax_SettlementType,Sttax_SecuritySymbol,Sttax_SecuritySeries,
Sttax_ProductSeriesID,Sttax_TotalBuyQuantity,Sttax_TotalSaleQuantity,Sttax_TotalBuyValue,Sttax_TotalSaleValue,
Sttax_AverageRate,Sttax_DeliveryBuyQuantity,Sttax_DeliveryBuyValue,Sttax_DeliverySaleQuantity,
Sttax_DeliverySaleValue,Sttax_DifferenceSaleQuantity,Sttax_DifferenceSaleValue,
Sttax_DeliveryBuyStt,Sttax_DeliverySaleStt,Sttax_DifferenceStt,Sttax_TotalStt,
Sttax_ContractNoteNumber,Sttax_CustomerUCC,Sttax_CreateUser,Sttax_CreateDateTime,Sttax_Mode)

select companyid,segmentid,branchid,finyear,@date,'Prov',
	customerid,setno,settype,symbol,series,
		productid,purchasequantity,sellquantity,purchasemktvalue,sellmktvalue,
			wap,delbuyquantity,delbuyvalue,delsellquantity,
				delsellvalue,diffquantity,diffvalue,
					Case when left(customerid,2)='CL' then round((delbuyvalue*RateDelBuy/100),2) Else round((delbuyvalue*RateDelSale/100),2) End,
						Case when left(customerid,2)='CL' then round((delsellvalue*RateDelSale/100),2) Else round((delsellvalue*RateDelBuy/100),2) End,
							round((diffvalue*RateSqr/100),2),
							--round((delbuyvalue*RateDelBuy/100)+(delsellvalue*RateDelSale/100)+(diffvalue*RateSqr/100),2),
							Case when left(customerid,2)='CL' then round(round((delbuyvalue*RateDelBuy/100),2)+round((delsellvalue*RateDelSale/100),2)+round((diffvalue*RateSqr/100),2),2) Else
								round(round((delbuyvalue*RateDelSale/100),2)+round((delsellvalue*RateDelBuy/100),2)+round((diffvalue*RateSqr/100),2),2) End,
								contractno,ucc,@createuser,getdate(),taxmode

from #TEMP where isnull(Equity_STT,'Y')<>'N' AND (sttpattern='D' or sttpattern is null)

-------***********sttpattern C OR contractno is not null
insert into Trans_Sttax(Sttax_CompanyID,Sttax_SegmentID,Sttax_BranchID,Sttax_FinYear,Sttax_STTDate,Sttax_Type,
Sttax_CustomerID,Sttax_SettlementNumber,Sttax_SettlementType,Sttax_SecuritySymbol,Sttax_SecuritySeries,
Sttax_ProductSeriesID,Sttax_TotalBuyQuantity,Sttax_TotalSaleQuantity,Sttax_TotalBuyValue,Sttax_TotalSaleValue,
Sttax_AverageRate,Sttax_DeliveryBuyQuantity,Sttax_DeliveryBuyValue,Sttax_DeliverySaleQuantity,
Sttax_DeliverySaleValue,Sttax_DifferenceSaleQuantity,Sttax_DifferenceSaleValue,
Sttax_DeliveryBuyStt,Sttax_DeliverySaleStt,Sttax_DifferenceStt,Sttax_TotalStt,
Sttax_ContractNoteNumber,Sttax_CustomerUCC,Sttax_CreateUser,Sttax_CreateDateTime,Sttax_Mode)

select companyid,segmentid,branchid,finyear,@date,'Prov',
	customerid,setno,settype,symbol,series,
		productid,purchasequantity,sellquantity,purchasemktvalue,sellmktvalue,
			wap,delbuyquantity,delbuyvalue,delsellquantity,
				delsellvalue,diffquantity,diffvalue,
					Case when left(customerid,2)='CL' then round((delbuyvalue*RateDelBuy/100),2) Else round((delbuyvalue*RateDelSale/100),2) End,
						Case when left(customerid,2)='CL' then round((delsellvalue*RateDelSale/100),2) Else round((delsellvalue*RateDelBuy/100),2) End,
							round((diffvalue*RateSqr/100),2),
							--round((delbuyvalue*RateDelBuy/100)+(delsellvalue*RateDelSale/100)+(diffvalue*RateSqr/100),2),
								Case when left(customerid,2)='CL' then round(round((delbuyvalue*RateDelBuy/100),2)+round((delsellvalue*RateDelSale/100),2)+round((diffvalue*RateSqr/100),2),2) Else
									round(round((delbuyvalue*RateDelSale/100),2)+round((delsellvalue*RateDelBuy/100),2)+round((diffvalue*RateSqr/100),2),2) End,
								contractno,ucc,@createuser,getdate(),taxmode

from #TEMP where isnull(Equity_STT,'Y')<>'N'  AND sttpattern='C' and contractno is not null

--------------------------------------END-----------------------------------------------------------------
------------------For Settelment Type---------------------------------
select * into #TEMPSETTTYPE1 from (
select  count(Sttax_SettlementType)as countsetttype,Sttax_SettlementType as SettlementType, 
Sttax_SettlementNumber,Sttax_CustomerUCC as CustomerUCC
from Trans_Sttax
where Sttax_CreateUser=@createuser
and Sttax_STTDate=@date
and Sttax_SegmentID=@segment
and Sttax_CompanyID=@Companyid
and Sttax_Type='Prov'
group by Sttax_CustomerUCC,Sttax_SettlementNumber,Sttax_SettlementType
) as tb1


alter table #TEMPSETTTYPE1 add id int identity(1,1)
create table #TEMPSETTTYPE(SettlementType varchar(50),SettNo varchar(50),UCC varchar(100))

insert into #TEMPSETTTYPE(SettlementType,SettNo,UCC) 
select SettlementType,Sttax_SettlementNumber,CustomerUCC from #TEMPSETTTYPE1 where SettlementType='N'
delete from #TEMPSETTTYPE1 where CustomerUCC in(select UCC from #TEMPSETTTYPE) 

insert into #TEMPSETTTYPE(SettlementType,SettNo,UCC) 
select SettlementType,Sttax_SettlementNumber,CustomerUCC from #TEMPSETTTYPE1 where SettlementType='W'
delete from #TEMPSETTTYPE1 where CustomerUCC in(select UCC from #TEMPSETTTYPE) 


insert into #TEMPSETTTYPE(SettlementType,SettNo,UCC) 
select SettlementType,Sttax_SettlementNumber,CustomerUCC from #TEMPSETTTYPE1 where SettlementType='A'
delete from #TEMPSETTTYPE1 where CustomerUCC in(select UCC from #TEMPSETTTYPE) 

--select * from #TEMPSETTTYPE

--select * from  #TEMPSETTTYPE

----------------------END----------------------------------------------
-------------------------------insert into main table(Trans_SttaxSummary)-------------------------------

------------------STT-PATTERN (Day:'D')-------------------
insert into Trans_SttaxSummary(SttaxSummary_CompanyID,SttaxSummary_SegmentID,
SttaxSummary_BranchID,SttaxSummary_FinYear,SttaxSummary_STTDate,SttaxSummary_CustomerID,
SttaxSummary_TotalSTT,SttaxSummary_RoundOffAmount,SttaxSummary_NetSTT,
SttaxSummary_CreateUser,SttaxSummary_CreateDateTime,SttaxSummary_CustomerUcc,SttaxSummary_Type,
SttaxSummary_SettlementType,SttaxSummary_SettlementNumber,SttaxSummary_Mode,SttaxSummary_CntrNo)

select Sttax_CompanyID,Sttax_SegmentID,Sttax_BranchID,Sttax_FinYear,Sttax_STTDate,Sttax_CustomerID,
	totalstt,roundstt,netstt,Sttax_CreateUser,Sttax_CreateDateTime,Sttax_CustomerUCC,Sttax_Type,
	SettlementType,
		SettNo,Sttax_Mode,Sttax_ContractNoteNumber
from
(select Sttax_CompanyID,Sttax_SegmentID,Sttax_BranchID,Sttax_FinYear,Sttax_STTDate,Sttax_CustomerID,
	sum(Sttax_TotalStt) as totalstt,
		(dbo.fn_NSECMChargesRoundOffFORNETAMOUNT(2,sum(Sttax_TotalStt))-sum(Sttax_TotalStt)) as roundstt,
			dbo.fn_NSECMChargesRoundOffFORNETAMOUNT(2,sum(Sttax_TotalStt)) as netstt,
				Sttax_CreateUser,Sttax_CreateDateTime,Sttax_CustomerUCC,Sttax_Type,Sttax_Mode,Sttax_ContractNoteNumber
from
(select distinct Sttax_CompanyID,Sttax_SegmentID,Sttax_BranchID,Sttax_FinYear,Sttax_STTDate,Sttax_CustomerID,
	Sttax_TotalStt,Sttax_CreateUser,Sttax_CreateDateTime,Sttax_CustomerUCC,Sttax_Type,Sttax_SecuritySymbol,
		Sttax_Mode,Sttax_ContractNoteNumber
		
from Trans_Sttax,#TEMP
where (sttpattern='D' or sttpattern is null)
and Sttax_CreateUser=@createuser
and Sttax_CustomerID=customerid
and Sttax_BranchID=branchid
and Sttax_FinYear=finyear
and Sttax_STTDate=@date
and Sttax_SegmentID=@segment
and Sttax_CompanyID=@Companyid
and Sttax_Type='Prov'

) as tb


group by Sttax_Mode,Sttax_CustomerID,Sttax_CustomerUCC,Sttax_Type,
Sttax_CreateUser,Sttax_CreateDateTime,Sttax_STTDate,
Sttax_FinYear,Sttax_SegmentID,Sttax_BranchID,Sttax_CompanyID,Sttax_ContractNoteNumber
) as tempsumtb,#TEMPSETTTYPE
where 
 Sttax_CreateUser=@createuser
and Sttax_CustomerUCC=UCC
and Sttax_STTDate=@date
and Sttax_SegmentID=@segment
and Sttax_CompanyID=@Companyid
and Sttax_Type='Prov'



----------------END-------------------------------------------
------------------STT-PATTERN (Contract Note:'C' and CNTR PATTERN NOT NULL)-------------------
insert into Trans_SttaxSummary(SttaxSummary_CompanyID,SttaxSummary_SegmentID,
SttaxSummary_BranchID,SttaxSummary_FinYear,SttaxSummary_STTDate,SttaxSummary_CustomerID,
SttaxSummary_TotalSTT,SttaxSummary_RoundOffAmount,SttaxSummary_NetSTT,
SttaxSummary_CreateUser,SttaxSummary_CreateDateTime,SttaxSummary_CustomerUcc,SttaxSummary_Type,
SttaxSummary_CntrNo,SttaxSummary_SettlementType,SttaxSummary_SettlementNumber,SttaxSummary_Mode)

select Sttax_CompanyID,Sttax_SegmentID,Sttax_BranchID,Sttax_FinYear,Sttax_STTDate,Sttax_CustomerID,
	totalstt,roundstt,netstt,Sttax_CreateUser,Sttax_CreateDateTime,Sttax_CustomerUCC,Sttax_Type,contractno,
		SettlementType,SettNo,Sttax_Mode
from
(select Sttax_CompanyID,Sttax_SegmentID,Sttax_BranchID,Sttax_FinYear,Sttax_STTDate,Sttax_CustomerID,
	sum(Sttax_TotalStt) as totalstt,
		(dbo.fn_NSECMChargesRoundOffFORNETAMOUNT(2,sum(Sttax_TotalStt))-sum(Sttax_TotalStt)) as roundstt,
			dbo.fn_NSECMChargesRoundOffFORNETAMOUNT(2,sum(Sttax_TotalStt)) as netstt,
				Sttax_CreateUser,Sttax_CreateDateTime,Sttax_CustomerUCC,Sttax_Type,contractno,Sttax_Mode
from
(select distinct Sttax_CompanyID,Sttax_SegmentID,Sttax_BranchID,Sttax_FinYear,Sttax_STTDate,Sttax_CustomerID,
	Sttax_TotalStt,Sttax_CreateUser,Sttax_CreateDateTime,Sttax_CustomerUCC,Sttax_Type,contractno,
		Sttax_SecuritySymbol,Sttax_Mode
		
from Trans_Sttax,#TEMP
where sttpattern='C' 
and contractno is not null
and Sttax_ContractNoteNumber=contractno
and Sttax_CreateUser=@createuser
and Sttax_CustomerID=customerid
and Sttax_BranchID=branchid
and Sttax_FinYear=finyear
and Sttax_STTDate=@date
and Sttax_SegmentID=@segment
and Sttax_CompanyID=@Companyid
and Sttax_Type='Prov'
)as tb

group by Sttax_Mode,Sttax_CustomerID,contractno,Sttax_CustomerUCC,Sttax_Type,
contractno,Sttax_CreateUser,Sttax_CreateDateTime,Sttax_STTDate,
Sttax_FinYear,Sttax_SegmentID,Sttax_BranchID,Sttax_CompanyID) as tempsumtb,#TEMPSETTTYPE
where 
 Sttax_CreateUser=@createuser
and Sttax_CustomerUCC=UCC
and Sttax_STTDate=@date
and Sttax_SegmentID=@segment
and Sttax_CompanyID=@Companyid
and Sttax_Type='Prov'


----------------END-------------------------------------------
-- For Brokers the STT is payable (negative)
Update Trans_Sttax Set Sttax_DeliveryBuyStt=Sttax_DeliveryBuyStt*-1,
						Sttax_DeliverySaleStt=Sttax_DeliverySaleStt*-1,
						Sttax_DifferenceStt=Sttax_DifferenceStt*-1,
						Sttax_TotalStt=Sttax_TotalStt*-1

		where Sttax_CompanyID=@Companyid
		and Sttax_SegmentID=@segment
		and Sttax_Type='Prov'
		and Sttax_STTDate=@date
		and Sttax_CreateUser=@createuser
		and LEFT(Sttax_CustomerID,2)='BO'

Update Trans_SttaxSummary set SttaxSummary_TotalSTT=SttaxSummary_TotalSTT*-1,
								SttaxSummary_RoundOffAmount=cast(SttaxSummary_RoundOffAmount as numeric)*-1,
								SttaxSummary_NetSTT=SttaxSummary_NetSTT*-1
		
		where SttaxSummary_CompanyID=@Companyid
		and SttaxSummary_SegmentID=@segment
		and SttaxSummary_Type='Prov'
		and SttaxSummary_STTDate=@date
		and SttaxSummary_CreateUser=@createuser
		and left(SttaxSummary_CustomerID,2)='BO'

-----------------------------------------


------------------STT-PATTERN (Contract Note:'C' and CNTR NO. IS NULL)-------------------
IF @forcntrnogenerate='STT'
BEGIN
	if exists(select 'Y' from #Temp where sttpattern='C' and contractno is null)
		begin
				select 1 as status
				select distinct cnt_internalid,
				(isnull(cnt_firstname,'')+''+isnull(cnt_middlename,'')+''+isnull(cnt_lastname,'')) as name,
				isnull(cnt_ucc,'') as code
				from tbl_master_contact,#TEMP
				where cnt_internalid=customerid
				and sttpattern='C' 
				and contractno is null
		end
	else
		begin
			  select 2 as status
		end
END
----------------END-------------------------------------------

------------------------------------END-----------------------------------------------------------------
End