
---exec [SP_INSUP_TradeFOCSV] 'InsertTradeDataCSV','C:\SARA\F_TR01_14759_26112013.CSV',416,25,'COR0000002','2011-12-31','2013-12-28',''
ALTER  procedure [dbo].[SP_INSUP_TradeFOCSV]

@Module varchar(100),
@FilePath as varchar(255)=null,
@ModifyUser	int,
@ExcSegmt int,
@ExchangeTrades_CompanyID char(10)=null,
@LckTradeDate datetime,
@ExpireDate datetime,
@LockMsg Varchar(250) Output



AS
BEGIN

        
	IF @Module='InsertTradeData'
		BEGIN
         
           CREATE TABLE #TempTableTradeFoTxt 
				(
					[Trade_TradeNo] VARCHAR(255) NULL,
					[Trade_Status] VARCHAR(255) null,
					[Trade_InstrumentType] VARCHAR(255)null,
					[Trade_Symbol] VARCHAR(255) null,
					[Trade_ExpiryDate] VARCHAR(255) null,
					[Trade_Strikeprice] varchar(255) null,
					[Trade_OptionType] varchar(255) null,
					[Trade_Securityname] varchar(255)null,
					[Trade_BookType] varchar(255) null,
					[Trade_BookTypeName] varchar(255) null,
                    [Trade_MarketType] varchar(255) null,
					[Trade_UserId] varchar(255)null,
					[Trade_Branchno] varchar(255)null,
					[Trade_BuySell] varchar(255)null,
					[Trade_Quantity] varchar(255)null,
					[Trade_Price] varchar(255)null,
					[Trade_ProCli] varchar(255)null,
					[Trade_Account] varchar(255)null,
					[Trade_Participent] varchar(255)null,
					[Trade_OpenClose] varchar(255)null,
					[Trade_Uncover] varchar(255)null,
					[Trade_TradeTime] varchar(255)null,
					[Trade_LastModtime] varchar(255)null,
					[Trade_OrderNo] varchar(255)null,
                    [Trade_CounterBrokerId] varchar(255)null,
					[Trade_Nil] varchar(255)null   
                                   
                )

                declare @ReadFrom as int
				declare @Q as varchar(200)
				set @ReadFrom=1
				
				set @Q='BULK INSERT #TempTableTradeFoTxt FROM '+ char(39) + @FilePath + char(39) + ' with (firstrow = ' + convert(varchar,@ReadFrom) + ' , FIELDTERMINATOR = ' + char(39) + ',' + char(39) + ' , ROWTERMINATOR = ' + char(39) + CHAR(10) + char(39) +')'
				exec (@Q)

				Declare @UpdateDate DateTime
				Set @UpdateDate=GETDATE()


				alter table #TempTableTradeFoTxt
						add  	[Trade_ID] [bigint] IDENTITY(1,1) NOT NULL	,
								[Trade_ProductSeriesID] varchar(100) null,
								[Trade_CustomerID] varchar(100) null,
								[Trade_BrokerID] varchar(10) null
				
                DECLARE @FY datetime 
				DECLARE @SETT_FY VARCHAR(250)
				DECLARE @DTDIFF	int
                Declare @Cflag char(1)
			

                set @FY=(select top(1) Substring(Convert(varchar(11),Convert(datetime,LTRIM(RTRIM(Trade_TradeTime)),120),120),1,11) from #TempTableTradeFoTxt)

If (@FY>=@LckTradeDate and @FY<=@ExpireDate)
begin

------------------------------------------Financial Year Calculation
	            SET @DTDIFF=CAST(MONTH(@FY) AS INT)
				IF(@DTDIFF>=1 AND @DTDIFF<=3)
				BEGIN
					SET @SETT_FY=NULL
					SET @SETT_FY=  CAST((CAST(YEAR(@FY) AS INT)-1) AS VARCHAR(50) )+'-'+CAST(YEAR(@FY) AS VARCHAR(50))
				END
				IF(@DTDIFF>=4 AND @DTDIFF<=12)
				BEGIN
					SET @SETT_FY=NULL
					SET @SETT_FY=  CAST(YEAR(@FY) AS VARCHAR(50))+'-'+CAST((CAST(YEAR(@FY) AS INT)+1) AS VARCHAR(50) )
				END

--	---------------------------------Update ProductSeriesID--------------------------------------------
					
					UPDATE #TempTableTradeFoTxt set [Trade_ProductSeriesID]=Equity_SeriesID
						from Master_Equity 
					 where Equity_ExchSegmentID=2
					 and Equity_TickerSymbol=[Trade_Symbol]
					and  Equity_Series=(case when LEN([Trade_OptionType])<>0 then  LTRIM(RTRIM([Trade_OptionType])) when LEN([Trade_OptionType])=0 then 'FF' else '' end)
					and  Equity_StrikePrice=(case when Trade_StrikePrice<>' ' then Convert(numeric(14,4),[Trade_StrikePrice]) when LEN(Trade_StrikePrice)<>0 then Convert(numeric(14,4),[Trade_StrikePrice]) when LEN(Trade_StrikePrice)=0 then Convert(numeric(14,4),0.00000000) when Trade_StrikePrice=' ' then Convert(numeric(14,4),0.00000000) else '' end)
					and  Equity_FOIdentifier=[Trade_InstrumentType]
					and  Equity_EffectUntil=Convert(datetime,[Trade_ExpiryDate],120) and Equity_ExchSegmentID=2

	--------------------------------------CUSTOMERID---------------------------------------------------
						
					UPDATE #TempTableTradeFoTxt set [Trade_CustomerID]=crg_cntID
					from tbl_master_contactExchange
					where crg_tcode=LTRIM(RTRIM([Trade_Account])) AND crg_exchange='NSE - FO'
					and Crg_Company=@ExchangeTrades_CompanyID
--	------------------------------------------------------------------------------------------------------------------
--------- Update the brokerID in case the terminalD are mapped to a broker -------------------
			Update #TempTableTradeFoTxt Set [Trade_BrokerID]=TradingTerminal_BrokerID 
								from Master_TradingTerminal
								where TradingTerminal_CompanyID=@ExchangeTrades_CompanyID
								and TradingTerminal_ExchangeSegmentID=@ExcSegmt
								and ltrim(rtrim(TradingTerminal_TerminalID))=ltrim(rtrim([Trade_UserId]))

				
----------------- Delete all unidentified trades from this segment of this date

						Delete from TRANS_EXCHANGETRADES WHERE
						EXCHANGETRADES_SEGMENT=@ExcSegmt AND ExchangeTrades_TradeDate=cast(@FY as datetime)
						and ExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
						and (ExchangeTrades_Customerid is NULL Or ExchangeTrades_ProductSeriesID is NULL Or ExchangeTrades_Customerid='')
						and ExchangeTrades_CustTransactionID is NULL


--------------------------------------------------------------------------------------------

				CREATE TABLE  #tmpTrans_TradeTemp 
				(	
					ExchangeTradesID int,
					Tradedate datetime,
					TradeNumber varchar(100) null,
					OrderNumber varchar(100) null,
					CustomerId varchar(100) null,
					BranchId varchar(100) null,
					CompanyID varchar(100) null,
					Segment varchar(100)null
				)


				insert into #tmpTrans_TradeTemp
				(
					ExchangeTradesID,
					Tradedate ,
					TradeNumber ,
					OrderNumber ,
					CustomerId ,
					BranchId,
					CompanyID ,
					Segment 
				)

				Select 
				ExchangeTrades_ID,
				ExchangeTrades_TradeDate,
				ExchangeTrades_TradeNumber,
				ExchangeTrades_OrderNumber,
				ExchangeTrades_CustomerID,
				ExchangeTrades_BranchID,
				ExchangeTrades_CompanyID,
				ExchangeTrades_Segment

				from
				Trans_ExchangeTrades,#TempTableTradeFoTxt
				where
				ExchangeTrades_CompanyID=@ExchangeTrades_CompanyID AND ExchangeTrades_Segment=@ExcSegmt
				AND convert(varchar(10),ExchangeTrades_TradeDate,105)=convert(varchar(10),cast(@FY as datetime),105 )
				AND LTRIM(RTRIM(ExchangeTrades_TradeNumber))=LTRIM(RTRIM([Trade_TradeNo])) and LTRIM(RTRIM(ExchangeTrades_OrderNumber))=LTRIM(RTRIM([Trade_OrderNo]))

-----------------------------insert Into Main Table
		             insert into Trans_ExchangeTrades
						( 
							ExchangeTrades_FinYear,
							ExchangeTrades_CompanyID,
							ExchangeTrades_Segment,
							ExchangeTrades_BranchID,
							ExchangeTrades_SettlementNumber,
							ExchangeTrades_SettlementType,
							ExchangeTrades_TradeDate,
							ExchangeTrades_TradeNumber,
							ExchangeTrades_TradeStatus,
							ExchangeTrades_TradeEntryTime,
							ExchangeTrades_TradeModifyTime,
							ExchangeTrades_OrderNumber,
							ExchangeTrades_TransactionType,
							ExchangeTrades_ProCli,
							ExchangeTrades_CustomerUcc,
							ExchangeTrades_CustodialParticipantCode,
							ExchangeTrades_CustomerID,
							ExchangeTrades_SecurityType,
							ExchangeTrades_SecuritySymbol,
							ExchangeTrades_SecuritySeries,
							ExchangeTrades_SecurityExpiry,
							ExchangeTrades_SecurityOptionType,
							ExchangeTrades_SecurityStrikePrice,
							ExchangeTrades_ProductSeriesID,
							ExchangeTrades_BookType,
							ExchangeTrades_MarketType,
							ExchangeTrades_TerminalID,
							ExchangeTrades_CTCLID,
							ExchangeTrades_ExchangeBranchID,
							ExchangeTrades_BuySellFlag,
							ExchangeTrades_QuantityLots,
							ExchangeTrades_UnitPrice,
							ExchangeTrades_UnitPriceQuantity,
							ExchangeTrades_MarketValue,
							ExchangeTrades_CustodialFlag,
							ExchangeTrades_CreateUser,
							ExchangeTrades_CreateDateTime,
							ExchangeTrades_CounterPartyID,
							ExchangeTrades_LastUpdateDate
							)

--
--
                     select 
							@SETT_FY,
							@ExchangeTrades_CompanyID,
						    @ExcSegmt,
							(select cnt_branchid from tbl_master_contact where cnt_internalId=isnull((Select CASE 
								WHEN  ([TradingTerminal_AllTradeID] is not null and LEN(REPLACE(isnull([TradingTerminal_AllTradeID],''),CHAR(13),''))>0) 
								then TradingTerminal_AllTradeID
								when  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) 
								AND (TradingTerminal_ProTradeID is null OR LEN(REPLACE(TradingTerminal_ProTradeID,CHAR(13),''))=0) 
								AND (TradingTerminal_CliTradeID is null OR LEN(REPLACE(TradingTerminal_CliTradeID,CHAR(13),''))=0) 
								then [Trade_CustomerID] 
								WHEN  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) 
								AND A.[Trade_ProCli]='2' then TradingTerminal_ProTradeID
								when  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND A.[Trade_ProCli]='1' then TradingTerminal_CliTradeID
								else [Trade_CustomerID] end	
								from Master_TradingTerminal where LTRIM(RTRIM(TradingTerminal_TerminalID))=LTRIM(RTRIM(A.[Trade_UserId])) 
								AND TradingTerminal_ExchangeSegmentID=@ExcSegmt 
								AND TradingTerminal_CompanyID=@ExchangeTrades_CompanyID),[Trade_CustomerID])),
							(select top(1)Settlements_Number
								from Master_Settlements where
								convert(varchar(11), cast([Trade_TradeTime] as datetime), 120) between convert(varchar(11), Settlements_StartDateTime , 120)
								and convert(varchar(11), Settlements_EndDateTime, 120)
								and Settlements_ExchangeSegmentID=2 and Settlements_TypeSuffix='F'AND Settlements_FinYear=@SETT_FY),
							'F',
							convert(varchar(11),cast([Trade_TradeTime] as datetime),120),
							[Trade_TradeNo],
							[Trade_Status],
							cast(REPLACE(LTRIM(RTRIM([Trade_TradeTime])),CHAR(13),'') as datetime),
							cast(REPLACE(LTRIM(RTRIM([Trade_LastModtime])),CHAR(13),'') as datetime),
							[Trade_OrderNo],
							'Orgnl',
							[Trade_ProCli],
							[Trade_Account],
							[Trade_Participent],
							isnull((Select CASE 
								WHEN  ([TradingTerminal_AllTradeID] is not null and LEN(REPLACE(isnull([TradingTerminal_AllTradeID],''),CHAR(13),''))>0) then TradingTerminal_AllTradeID 
								when  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND (TradingTerminal_ProTradeID is null OR LEN(REPLACE(TradingTerminal_ProTradeID,CHAR(13),''))=0) AND (TradingTerminal_CliTradeID is null OR LEN(REPLACE(TradingTerminal_CliTradeID,CHAR(13),''))=0) then [Trade_CustomerID] 
								WHEN  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND A.[Trade_ProCli]='2' then TradingTerminal_ProTradeID
								when  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND A.[Trade_ProCli]='1' then TradingTerminal_CliTradeID
								else  [Trade_CustomerID] end	
								from Master_TradingTerminal where LTRIM(RTRIM(TradingTerminal_TerminalID))=LTRIM(RTRIM(A.[Trade_UserId])) AND TradingTerminal_ExchangeSegmentID=@ExcSegmt AND TradingTerminal_CompanyID=@ExchangeTrades_CompanyID),[Trade_CustomerID]),
							[Trade_InstrumentType],
							[Trade_Symbol],
							(case when [Trade_OptionType]='XX' then 'FF' when [Trade_OptionType]=' ' then 'FF' else [Trade_OptionType] end),
							convert(varchar(11),Cast([Trade_ExpiryDate] as datetime),120),(case when [Trade_OptionType]='XX' then 'FF' when [Trade_OptionType]=' ' then 'FF' else [Trade_OptionType] end) , case when ltrim(rtrim([Trade_Strikeprice]))='' then '0.00' else [Trade_Strikeprice] end,
							[Trade_ProductSeriesID],
							[Trade_BookType],
							[Trade_MARKETTYPE],
							isnull((Select CASE When LEN(a1.TradingTerminal_ParentTerminalID)=0 then a1.TradingTerminal_TerminalID When LTRIM(RTRIM(a1.TradingTerminal_ParentTerminalID)) is not null then LTRIM(RTRIM(a1.TradingTerminal_ParentTerminalID)) When LTRIM(RTRIM(a1.TradingTerminal_ParentTerminalID)) is null then LTRIM(RTRIM(a1.TradingTerminal_TerminalID)) else [Trade_UserId] end From (Select TradingTerminal_ParentTerminalID,TradingTerminal_TerminalID from Master_TradingTerminal WHERE LTRIM(RTRIM(Master_TradingTerminal.TradingTerminal_TerminalID)) IN(''+LTRIM(RTRIM([Trade_UserId]))+'') AND Master_TradingTerminal.TradingTerminal_ExchangeSegmentID=@ExcSegmt AND Master_TradingTerminal.TradingTerminal_CompanyID=''+@ExchangeTrades_CompanyID+'')as a1),LTRIM(RTRIM([Trade_UserId]))),
							isnull((Select CASE When LEN(a1.TradingTerminal_parentterminalID)=0 then null When LTRIM(RTRIM(a1.TradingTerminal_ParentTerminalID)) is not null then LTRIM(RTRIM(a1.TradingTerminal_TerminalID)) When LTRIM(RTRIM(a1.TradingTerminal_ParentTerminalID)) is null then null else null end From (Select TradingTerminal_ParentTerminalID,TradingTerminal_TerminalID from Master_TradingTerminal WHERE LTRIM(RTRIM(Master_TradingTerminal.TradingTerminal_TerminalID)) IN(''+LTRIM(RTRIM([Trade_UserId]))+'') AND Master_TradingTerminal.TradingTerminal_ExchangeSegmentID=@ExcSegmt AND Master_TradingTerminal.TradingTerminal_CompanyID=''+@ExchangeTrades_CompanyID+'')as a1),null),
							[Trade_Branchno],
							[Trade_BuySell], 
							[Trade_Quantity],
							[Trade_Price],
							[Trade_Quantity], 
							convert(decimal(12,2),[Trade_Price])*convert(decimal(12,2),[Trade_Quantity]),
							(case when (select top(1)isnull([Trade_Participent],'0') from tbl_master_companyExchange where [Trade_Participent]=exch_TMCode and exch_internalId=@ExcSegmt and len([Trade_Participent])>0) !='0' then 'N' else 'Y'end),
							@ModifyUser,
							getdate(),
							[Trade_BrokerID],
							Case when isnull([Trade_BrokerID],'')='' then NULL else @UpdateDate End
							
							from #TempTableTradeFoTxt AS A
							LEFT OUTER JOIN
							tbl_master_contactExchange AS B ON (B.crg_tcode=LTRIM(RTRIM(A.[Trade_Account]))
							AND B.crg_exchange='NSE - FO')
							Where not exists(select ExchangeTradesID from #tmpTrans_TradeTemp where convert(varchar(12),cast(Tradedate as datetime),105)=convert(varchar(10),cast([Trade_TradeTime] as datetime),105 ) and LTRIM(RTRIM(TradeNumber))=LTRIM(RTRIM([Trade_TradeNo])) and LTRIM(RTRIM(OrderNumber))=LTRIM(RTRIM([Trade_OrderNo])) AND Segment=@ExcSegmt AND CompanyID=@ExchangeTrades_CompanyID)

						  	 DECLARE  @TEMPTABLE TABLE (ExchangeTradesID bigint identity(1,1) not null,ExchangeTrades_SecuritySymbol varchar(100),ExchangeTrades_SecurityType varchar(50), ExchangeTrades_SecurityExpiry varchar(50), ExchangeTrades_SecuritySeries varchar(50), ExchangeTrades_SecurityStrikePrice decimal (28,8),ExchangeTrades_TradeDate varchar(50),ExchangeTrades_Segment varchar(10))
							 Declare @Min as Int
							 Declare @Max As Int
							 Declare @ID as int
							 Declare @Symbol as varchar(100)
							 Declare @Type as varchar(50)
							 Declare @Exp as varchar(50)
							 Declare @Series as varchar(50)
							 Declare @Strike as decimal(28,8)
							 Declare @Tradedate as varchar(50)
							 Declare @Segmentid as varchar(10)

							INSERT INTO @TEMPTABLE
							EXEC [SP_SelectTradeProduct] 'SelectFONullPId' ,@ExcSegmt,@FY
				


							set @Min=(Select MIN(ExchangeTradesID) from @TEMPTABLE)
							set @Max=(Select MAX(ExchangeTradesID) from @TEMPTABLE)
							While (@Min<=@Max)
							Begin
								set @Symbol=(select ExchangeTrades_SecuritySymbol from @TEMPTABLE where ExchangeTradesID=@Min)
								set @Type=(select ExchangeTrades_SecurityType from @TEMPTABLE where ExchangeTradesID=@Min)
								set @Exp=(select ExchangeTrades_SecurityExpiry from @TEMPTABLE where ExchangeTradesID=@Min)
								set @Series=(select ExchangeTrades_SecuritySeries from @TEMPTABLE where ExchangeTradesID=@Min)
								set @Strike=(select ExchangeTrades_SecurityStrikePrice from @TEMPTABLE where ExchangeTradesID=@Min)
								set @Tradedate=(select ExchangeTrades_Tradedate from @TEMPTABLE where ExchangeTradesID=@Min)
								set @Segmentid=(select ExchangeTrades_Segment from @TEMPTABLE where ExchangeTradesID=@Min)

								EXEC [ImportTradeFO] 'InsUpdateTradeFO' ,@Type,@Symbol,@Strike,@Series,@Exp,@Tradedate,@Segmentid


								set @Min=@Min+1
							end
							---------------------------------------------------------------Checking For CustomerID Is Null---------------------------------
							SELECT DISTINCT exchangetrades_CustomerUcc FROM Trans_exchangetrades WHERE
							exchangetrades_Segment=@ExcSegmt AND  convert(varchar(10),exchangetrades_TradeDate,120)=convert(varchar(10),convert(datetime,@FY,120),120)
							AND (exchangetrades_CustomerID IS NULL or len(exchangetrades_CustomerID)=0) and ExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
							----------------------------------Showing the Import Summary --------------------------------------------------------
							select exchangetrades_settlementnumber as [Sett.No],exchangetrades_settlementtype as [Sett.Type],
							sum(rowcnt) as Records,
							sum(isnull(buy,0)) as [Buy Obligation],
							sum(isnull(sell,0)) as [Sell Obligation],
							(sum(isnull(sell,0))-sum(isnull(buy,0))) as [Net Obligation]
							 from
							(select exchangetrades_settlementnumber,exchangetrades_settlementtype,COUNT(exchangetrades_settlementtype) as rowcnt,
							case when exchangetrades_buysellflag=1 then sum(exchangetrades_marketvalue) else null end buy,
							case when  exchangetrades_buysellflag=2 then sum(exchangetrades_marketvalue)  else null end as sell
							from TRANS_exchangetrades WHERE
							ExchangeTrades_TransactionType='Orgnl' and 
							exchangetrades_SEGMENT=@ExcSegmt AND convert(varchar(10),exchangetrades_TradeDate,120)=convert(varchar(10),convert(datetime,@FY,120),120)
							and exchangetrades_CompanyID=@ExchangeTrades_CompanyID
							group by exchangetrades_settlementnumber,exchangetrades_settlementtype,exchangetrades_buysellflag)as bb
							group by exchangetrades_settlementnumber,exchangetrades_settlementtype
							---------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------Select Terminal ID not present in tradingterminal----------------------------------
					SELECT DISTINCT	ExchangeTrades_TerminalID as TERMINALID 
					from Trans_Exchangetrades WHERE exchangetrades_CompanyID=@ExchangeTrades_CompanyID
					and exchangetrades_SEGMENT=@ExcSegmt AND convert(varchar(10),exchangetrades_TradeDate,120)=convert(varchar(10),convert(datetime,@FY,120),120)
					and ExchangeTrades_TerminalID 
					NOT IN (Select TradingTerminal_TerminalID from Master_tradingTerminal 
					where tradingterminal_ExchangeSegmentID=@ExcSegmt 
					AND tradingterminal_companyID=@ExchangeTrades_CompanyID)
--------------------------------------------------------------------------------------------------------------
							Select cast(@FY as datetime) as TradeDate
-----------------------------------------------------------------------------------------------------------------
							Select cast(@FY as datetime) as TradeDate
--------------------------------------------------Select Terminal IDs ----------------------------------
					SELECT DISTINCT	ExchangeTrades_TerminalID from TRANS_EXCHANGETRADES WHERE
						EXCHANGETRADES_SEGMENT=@ExcSegmt AND ExchangeTrades_TradeDate=cast(@FY as datetime)
						and ExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
						and ExchangeTrades_TransactionType='Orgnl'
--------------------------------------------------------------------------------------------------------------
--------------------------------------------------Select UCC----------------------------------
						SELECT DISTINCT	ExchangeTrades_CustomerUCC from TRANS_EXCHANGETRADES WHERE
						EXCHANGETRADES_SEGMENT=@ExcSegmt AND ExchangeTrades_TradeDate=cast(@FY as datetime)
						and ExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
						and ExchangeTrades_TransactionType='Orgnl'
--------------------------------------------------------------------------------------------------------------
---- And now the brokers part -------
			insert into Trans_ExchangeTrades
			(ExchangeTrades_FinYear,ExchangeTrades_CompanyID,ExchangeTrades_Segment,ExchangeTrades_BranchID,ExchangeTrades_SettlementNumber,
			ExchangeTrades_SettlementType,ExchangeTrades_TradeDate,ExchangeTrades_TradeNumber,ExchangeTrades_TradeStatus,ExchangeTrades_TradeEntryTime,
			ExchangeTrades_TradeModifyTime,ExchangeTrades_OrderNumber,ExchangeTrades_TransactionType,ExchangeTrades_ProCli,ExchangeTrades_CustomerUcc,
			ExchangeTrades_CustodialParticipantCode,ExchangeTrades_CustomerID,ExchangeTrades_SecurityType,ExchangeTrades_SecuritySymbol,
			ExchangeTrades_SecuritySeries,ExchangeTrades_SecurityExpiry,ExchangeTrades_SecurityOptionType,ExchangeTrades_SecurityStrikePrice,
			ExchangeTrades_ProductSeriesID,ExchangeTrades_BookType,ExchangeTrades_MarketType,ExchangeTrades_TerminalID,ExchangeTrades_CTCLID,
			ExchangeTrades_ExchangeBranchID,ExchangeTrades_BuySellFlag,ExchangeTrades_QuantityLots,ExchangeTrades_UnitPrice,ExchangeTrades_UnitPriceQuantity,
			ExchangeTrades_MarketValue,ExchangeTrades_CustodialFlag,ExchangeTrades_CreateUser,ExchangeTrades_CreateDateTime,ExchangeTrades_CounterPartyID,
			ExchangeTrades_LastUpdateDate)

			Select ExchangeTrades_FinYear,ExchangeTrades_CompanyID,ExchangeTrades_Segment,ExchangeTrades_BranchID,ExchangeTrades_SettlementNumber,
			ExchangeTrades_SettlementType,ExchangeTrades_TradeDate,ExchangeTrades_TradeNumber,ExchangeTrades_TradeStatus,ExchangeTrades_TradeEntryTime,
			ExchangeTrades_TradeModifyTime,ExchangeTrades_OrderNumber,ExchangeTrades_TransactionType,ExchangeTrades_ProCli,ExchangeTrades_CustomerUcc,
			ExchangeTrades_CustodialParticipantCode,ExchangeTrades_CounterPartyID,ExchangeTrades_SecurityType,ExchangeTrades_SecuritySymbol,
			ExchangeTrades_SecuritySeries,ExchangeTrades_SecurityExpiry,ExchangeTrades_SecurityOptionType,ExchangeTrades_SecurityStrikePrice,
			ExchangeTrades_ProductSeriesID,ExchangeTrades_BookType,ExchangeTrades_MarketType,ExchangeTrades_TerminalID,ExchangeTrades_CTCLID,
			ExchangeTrades_ExchangeBranchID,
			Case when ExchangeTrades_BuySellFlag=1 then 2 Else 1 End,ExchangeTrades_QuantityLots,ExchangeTrades_UnitPrice,ExchangeTrades_UnitPriceQuantity,
			ExchangeTrades_MarketValue,ExchangeTrades_CustodialFlag,ExchangeTrades_CreateUser,GETDATE(),ExchangeTrades_CustomerID,
			ExchangeTrades_LastUpdateDate
			From Trans_ExchangeTrades
			where ExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
			and ExchangeTrades_Segment=@ExcSegmt
			and ExchangeTrades_FinYear=@SETT_FY
			and ExchangeTrades_LastUpdateDate=@UpdateDate
			and ExchangeTrades_CreateUser=@ModifyUser
			and ExchangeTrades_TradeDate=cast(@FY as DateTime)
			and LEFT(ISNULL(ExchangeTrades_CounterPartyID,'NOR'),2)='BO'
------------------------------------------------------------------------------------------------------------------			
					Set @LockMsg=''

	end
	Else
	begin
		Set @LockMsg= 'The Data is Locked' 

	end



        END
---exec [SP_INSUP_TradeFOCSV] 'InsertTradeData','F:\CommonFolderInfluxCRM\TRADEOP_FALTU.TXT',398,25,'COI0000001'



---exec [SP_INSUP_TradeFOCSV] 'InsertTradeData','D:\CommonFolderInfluxCRM\TRADEOP.TXT',235,27,'COR0000002'
--Select * from Trans_ExchangeTrades where ExchangeTrades_TradeDate='2010-10-26' AND ExchangeTrades_Segment=27 AND Exchangetrades_BranchID is null
--Delete from Trans_ExchangeTrades where ExchangeTrades_TradeDate='2010-10-26' AND ExchangeTrades_Segment=27 AND Exchangetrades_BranchID is null

--Select ExchangeTrades_BranchID,ExchangeTrades_TerminalID,ExchangeTrades_CTCLId,ExchangeTrades_CustomerID,* from Trans_ExchangeTrades where ExchangeTrades_TradeDate='2010-10-06' 

--Delete from Trans_ExchangeTrades where ExchangeTrades_TradeDate='2010-10-06' AND ExchangeTrades_Segment=17 AND Exchangetrades_CustomerUCC='S128'

IF @Module='InsertTradeDataCSV'
      BEGIN

                          CREATE TABLE #TempTableTradeFoCsv
				         (
                          Trade_no varchar(255)null,Trade_Date varchar(255)null,
                          Book_Type varchar(255)null,Market_Type varchar(255)null,
                          Instrument_Type varchar(255) null,Symbol varchar(255)null,
                          Exipry_date varchar(255)null,Strike_Price varchar(255)null,     
                          Option_Type varchar(255)null,CA_level varchar(255)null,
                          Buy_Tm varchar(255)null,Sel_Tm varchar(255)null,
                          Price varchar(255)null,Trade_Time varchar(255)null,
                          Quantity varchar(255)null,test1 varchar(255)null,
                          Buy_Branch varchar(255)null,Buy_CmId varchar(255)null,
                          Sell_CmId varchar(255)null,Sell_Branch varchar(255)null,
                          test2 varchar(255)null,test3 varchar(255)null,test4 varchar(255)null, 
                          test5 varchar(255)null,test6 varchar(255)null,test7 varchar(255)null,
                          test8 varchar(255)null,test9 varchar(255)null,test10 varchar(255)null,
                          test11 varchar(255)null,Buy_Userid varchar(255)null,
                          Sell_userid varchar(255)null,Buy_orderno varchar(255)null,
                          Sell_Orderno varchar(255)null,Buy_Account varchar(255)null,
                          Sell_Account varchar(255)null,test12 varchar(255)null,
                          test13 varchar(255)null ,Buy_Openclose varchar(255)null,
                          Sell_Openclose varchar(255)null,Buy_Coveruncover varchar(255)null,
                          Sell_Coveruncover varchar(255)null, test14 varchar(255)null ,
                          Order_entrymodtime varchar(255)null     
                          )
                     
                declare @ReadFrom1 as int
				declare @Q1 as varchar(200)
				set @ReadFrom1=1
				
				set @Q1='BULK INSERT #TempTableTradeFoCsv FROM '+ char(39) + @FilePath + char(39) + ' with (firstrow = ' + convert(varchar,@ReadFrom1) + ' , FIELDTERMINATOR = ' + char(39) + ',' + char(39) + ' , ROWTERMINATOR = ' + char(39) + char(10) + char(39) +')'
				exec (@Q1)
				

				alter table #TempTableTradeFoCsv
						add  	[BRANCH_ID]  varchar(100) null,
						        [Customer_ID] varchar(100) null
				Update #TempTableTradeFoCsv Set Trade_No=cast(substring(Trade_No,9,Len(Trade_No)) as bigint) 

--------------------------------------Insert AND Update #TempTableTradeFoCsv------------------------------------------------------------

Insert Into #TempTableTradeFoCsv
(
						  Trade_no ,Trade_Date ,
                          Book_Type ,Market_Type ,
                          Instrument_Type ,Symbol ,
                          Exipry_date ,Strike_Price ,     
                          Option_Type ,CA_level ,
                          Buy_Tm ,Sel_Tm ,
                          Price ,Trade_Time ,
                          Quantity ,test1,
                          Buy_Branch ,Buy_CmId ,
                          Sell_CmId ,Sell_Branch ,
                          test2 ,test3 ,test4 , 
                          test5 ,test6 ,test7 ,
                          test8 ,test9 ,test10 ,
                          test11 ,Buy_Userid ,
                          Sell_userid ,Buy_orderno ,
                          Sell_Orderno ,Buy_Account ,
                          Sell_Account ,test12 ,
                          test13 ,Buy_Openclose ,
                          Sell_Openclose ,Buy_Coveruncover ,
                          Sell_Coveruncover , test14 ,
                          Order_entrymodtime 
	
)
Select                   Trade_no ,Trade_Date ,
						  Book_Type ,Market_Type ,
                          Instrument_Type ,Symbol ,
                          Exipry_date ,Strike_Price ,     
                          Option_Type ,CA_level ,
                          null ,Sel_Tm ,
                          Price ,Trade_Time ,
                          Quantity ,test1,
                          Buy_Branch ,null ,
                          Sell_CmId ,Sell_Branch ,
                          test2 ,test3 ,test4 , 
                          test5 ,test6 ,test7 ,
                          test8 ,test9 ,test10 ,
                          test11 ,null ,
                          Sell_userid ,null ,
                          Sell_Orderno ,null ,
                          Sell_Account ,test12 ,
                          test13 ,null ,
                          Sell_Openclose ,null ,
                          Sell_Coveruncover , test14 ,
                          Order_entrymodtime 

from #TempTableTradeFoCsv where Buy_CmID is not null AND Sell_CmID is not null



Update #TempTableTradeFoCsv SET Sel_Tm=null,Sell_CmId=null,Sell_userid=null,Sell_Orderno=null,
Sell_Account=null,Sell_Openclose=null,Sell_Coveruncover=null
Where Buy_CmID is not null AND Sell_CmID is not null




------------------------------------------------------------------------------------------------------------------------------------------
                
				DECLARE @DATE VARCHAR(20)
				DECLARE @FY1 VARCHAR(250)  
				DECLARE @SETT_FY1 VARCHAR(250)
				DECLARE @DTDIFF1	int
                Declare @Cflag1 char(1)

				DECLARE @Buy_OrderNo varchar(20)
				Declare @Sell_OrderNo varchar(20)
				Declare @TotalLength int
				Set @TotalLength=16

				DECLARE @SetDay varchar(20)
				Declare @SetMonth varchar(20)
				Declare @SetYear  varchar(20)

				set @DATE=(select top(1) convert(varchar(12), Trade_Date, 120) from #TempTableTradeFoCsv)
				
				set @SetDay=DAY(convert(varchar(12), @DATE, 101))
				set @SetMonth=month(convert(varchar(12), @DATE, 101))
				set @SetYear=year(convert(varchar(12), @DATE, 101))
				IF(LEN(@SetDay)=1)
					SET @SetDay='0'+@SetDay
				IF(LEN(@SetMonth)=1)
					SET @SetMonth='0'+@SetMonth
				SET @DATE=@SetYear+'-'+@SetMonth+'-'+@SetDay
               set @FY1=(select top(1) convert(varchar(12), Trade_Time, 101) from #TempTableTradeFoCsv)

If (@DATE>=@LckTradeDate and @DATE<=@ExpireDate)
begin
	            SET @DTDIFF1=CAST(MONTH(@FY1) AS INT)
				IF(@DTDIFF1>=1 AND @DTDIFF1<=3)
				BEGIN
					SET @SETT_FY1=NULL
					SET @SETT_FY1=  CAST((CAST(YEAR(@FY1) AS INT)-1) AS VARCHAR(50) )+'-'+CAST(YEAR(@FY1) AS VARCHAR(50))
				END
				IF(@DTDIFF1>=4 AND @DTDIFF1<=12)
				BEGIN
					SET @SETT_FY1=NULL
					SET @SETT_FY1=  CAST(YEAR(@FY1) AS VARCHAR(50))+'-'+CAST((CAST(YEAR(@FY1) AS INT)+1) AS VARCHAR(50) )
				END
				

				UPDATE #TempTableTradeFoCsv set [Customer_ID]=a1.crg_cntID
				from
					(select TE.crg_cntID,TE.crg_tcode,TE.crg_exchange from tbl_master_contactExchange TE,#TempTableTradeFoCsv O 
					where TE.crg_tcode=(CASE WHEN O.Buy_Account IS NULL THEN O.Sell_Account WHEN O.Sell_Account IS NULL THEN O.Buy_Account END) AND TE.crg_exchange='NSE - FO')as a1
					where a1.crg_tcode=(CASE WHEN Buy_Account IS NULL THEN Sell_Account WHEN Sell_Account IS NULL THEN Buy_Account END) AND a1.crg_exchange='NSE - FO'
								
			
                       insert into Trans_ExchangeTrades
                    (
                   ExchangeTrades_FinYear,ExchangeTrades_CompanyID,
                   ExchangeTrades_Segment,ExchangeTrades_BranchID,
                   ExchangeTrades_SettlementNumber,
                   ExchangeTrades_SettlementType,ExchangeTrades_TradeDate,
                   ExchangeTrades_TradeNumber,
                   ExchangeTrades_TradeEntryTime,ExchangeTrades_TradeModifyTime,
                   ExchangeTrades_OrderNumber,ExchangeTrades_OrderEntryTime,
                   ExchangeTrades_OrderModifyTime,ExchangeTrades_TransactionType,
                   ExchangeTrades_ProCli,ExchangeTrades_CustomerUcc,
                   ExchangeTrades_CustodialParticipantCode,ExchangeTrades_CustomerID,
                   ExchangeTrades_CounterPartyID,ExchangeTrades_SecurityType,
                   ExchangeTrades_SecuritySymbol,ExchangeTrades_SecuritySeries,
                   ExchangeTrades_SecurityExpiry,ExchangeTrades_SecurityOptionType,
                   ExchangeTrades_SecurityStrikePrice,
                   ExchangeTrades_ProductSeriesID,ExchangeTrades_BookType,
                   ExchangeTrades_MarketType,
                   ExchangeTrades_ExchangeBranchID,ExchangeTrades_BuySellFlag,
                   ExchangeTrades_QuantityLots,ExchangeTrades_UnitPrice,
                   ExchangeTrades_UnitPriceQuantity,ExchangeTrades_MarketValue,
                   ExchangeTrades_SettPeriod,ExchangeTrades_CustodialFlag,
				   ExchangeTrades_TerminalID,ExchangeTrades_CTCLID,
                   ExchangeTrades_CreateUser,ExchangeTrades_CreateDateTime)

                
                   select  @SETT_FY1,@ExchangeTrades_CompanyID,
                  @ExcSegmt,(select cnt_branchid from tbl_master_contact where cnt_internalId=isnull((Select CASE 
						WHEN  ([TradingTerminal_AllTradeID] is not null and LEN(REPLACE(isnull([TradingTerminal_AllTradeID],''),CHAR(13),''))>0) then TradingTerminal_AllTradeID 
						WHEN  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND (Buy_Coveruncover='P' OR Sell_Coveruncover='P') then TradingTerminal_ProTradeID
						when  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND (Buy_Coveruncover='C' OR Sell_Coveruncover='C') then TradingTerminal_CliTradeID
						else null end	
						from Master_TradingTerminal where LTRIM(RTRIM(TradingTerminal_TerminalID))=(CASE WHEN Buy_Userid IS NULL THEN Sell_userid WHEN Sell_userid is null then Buy_Userid END)  AND TradingTerminal_ExchangeSegmentID=@ExcSegmt),[Customer_ID])),
                  (select top(1) Settlements_Number from Master_Settlements where
					convert(varchar(12), @DATE, 101) between convert(varchar(12), Settlements_StartDateTime, 106)
				 and convert(varchar(12), Settlements_EndDateTime, 106)
				 and Settlements_ExchangeSegmentID=2 and Settlements_TypeSuffix='F' AND Settlements_FinYear=@SETT_FY1),'F'
                 ,convert(varchar(12),Trade_Date,105),Trade_No,Trade_Time,
                  Trade_Time,(case when Buy_orderno!='0' then Buy_orderno else Sell_Orderno end),
                 '','','Orgnl',
                  (case when Buy_Tm=Buy_Account then 2 when Sel_Tm=Sell_Account then 2 else 1 end),
                 (case when Buy_Account is not null then Buy_Account else Sell_Account end),
                    (case when Buy_Tm is not null then Buy_Tm else Sel_Tm end),

				  isnull((Select CASE 
						WHEN  ([TradingTerminal_AllTradeID] is not null and LEN(REPLACE(isnull([TradingTerminal_AllTradeID],''),CHAR(13),''))>0) then TradingTerminal_AllTradeID 
						WHEN  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND (Buy_Coveruncover='P' OR Sell_Coveruncover='P') then TradingTerminal_ProTradeID
						when  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND (Buy_Coveruncover='C' OR Sell_Coveruncover='C') then TradingTerminal_CliTradeID
						else null end	
						from Master_TradingTerminal where LTRIM(RTRIM(TradingTerminal_TerminalID))=(CASE WHEN Buy_Userid IS NULL THEN Sell_userid WHEN Sell_userid is null then Buy_Userid END)  AND TradingTerminal_ExchangeSegmentID=@ExcSegmt),[Customer_ID]),
                  '',Instrument_Type,Symbol,(case when Option_Type='XX' then 'FF' else Option_Type end),
                    Exipry_date ,     
                    Option_Type,Strike_Price,
                   (select top(1)Equity_SeriesID from Master_Equity
						where Equity_ExchSegmentID=2
						and Equity_TickerSymbol=Symbol
						and  Equity_Series=(case when Option_Type='XX' then 'FF'  else Option_Type end)
						and  Equity_StrikePrice=Strike_Price
						and  Equity_FOIdentifier=Instrument_Type
						and  Equity_EffectUntil=Exipry_date),
                   Book_Type,(case when Market_Type='N' then 1 when Market_Type='W' then 2 when Market_Type='A' then 4  else 3 end),
                   (case when Buy_Branch is not null then Buy_Branch  else Sell_Branch end),
					(case when Buy_Account is not null then 1 else 2 end),
                    Quantity,Price,Quantity,
                    convert(float,Quantity)*convert(float,Price),
                  0,
                    (case when (select top(1)isnull(Buy_CmId,'0') from tbl_master_companyExchange where (Buy_CmId =exch_TMCode or Sell_CmId =exch_TMCode)
                     and exch_internalId=@ExcSegmt)!='0' then 'Y' 
					when (select top(1)isnull(Sell_CmId,'0') from tbl_master_companyExchange where (Buy_CmId =exch_TMCode or Sell_CmId =exch_TMCode)
                     and exch_internalId=@ExcSegmt)!='0' then 'Y'
					else
					'N'
					end),
				   isnull((Select CASE When LEN(a1.TradingTerminal_ParentTerminalID)=0 then a1.TradingTerminal_TerminalID When LTRIM(RTRIM(a1.TradingTerminal_ParentTerminalID)) is not null then LTRIM(RTRIM(a1.TradingTerminal_ParentTerminalID)) When LTRIM(RTRIM(a1.TradingTerminal_ParentTerminalID)) is null then LTRIM(RTRIM(a1.TradingTerminal_TerminalID)) else (CASE WHEN Buy_Userid is null then Sell_userid When Sell_userid is null then Buy_Userid END  ) end From (Select TradingTerminal_ParentTerminalID,TradingTerminal_TerminalID from Master_TradingTerminal WHERE LTRIM(RTRIM(Master_TradingTerminal.TradingTerminal_TerminalID)) IN(''+(CASE WHEN Buy_Userid is null then Sell_userid When Sell_userid is null then Buy_Userid END)+'') AND Master_TradingTerminal.TradingTerminal_ExchangeSegmentID=@ExcSegmt AND Master_TradingTerminal.TradingTerminal_CompanyID=''+@ExchangeTrades_CompanyID+'')as a1),(CASE WHEN Buy_Userid is null then Sell_userid When Sell_userid is null then Buy_Userid END  )),
				   isnull((Select CASE When LEN(a1.TradingTerminal_parentterminalID)=0 then null When LTRIM(RTRIM(a1.TradingTerminal_ParentTerminalID)) is not null then LTRIM(RTRIM(a1.TradingTerminal_TerminalID)) When LTRIM(RTRIM(a1.TradingTerminal_ParentTerminalID)) is null then null else null end From (Select TradingTerminal_ParentTerminalID,TradingTerminal_TerminalID from Master_TradingTerminal WHERE LTRIM(RTRIM(Master_TradingTerminal.TradingTerminal_TerminalID)) IN(''+(CASE WHEN Buy_Userid is null then Sell_userid When Sell_userid is null then Buy_Userid END  )+'') AND Master_TradingTerminal.TradingTerminal_ExchangeSegmentID=@ExcSegmt AND Master_TradingTerminal.TradingTerminal_CompanyID=''+@ExchangeTrades_CompanyID+'')as a1),null),
                   @ModifyUser,getdate()from #TempTableTradeFoCsv 
                  where  
				  not exists(select ExchangeTrades_ID from Trans_ExchangeTrades 
				 where convert(varchar(12),ExchangeTrades_TradeDate,105)=convert(varchar(10),cast(Trade_Time as datetime),105 ) and 
				 ExchangeTrades_TradeNumber=Trade_No
				 and exchangetrades_segment=@ExcSegmt
				 and ExchangeTrades_OrderNumber=(CASE WHEN Buy_orderno IS NULL THEN Sell_Orderno when Sell_Orderno is null then Buy_orderno end))

				UPDATE Trans_ExchangeTrades set ExchangeTrades_CustomerID=a1.crg_cntID,
				ExchangeTrades_BranchID=(Select cnt_branchid  FROM tbl_master_contact where cnt_internalID=a1.crg_cntID)
--					SELECT a1.crg_cntID
				from
				(select TE.crg_cntID,TE.crg_tcode,TE.crg_exchange,O.Trade_no,O.Buy_orderno,O.Sell_orderno,O.Buy_Account,O.Sell_Account
				from tbl_master_contactExchange TE,#TempTableTradeFoCsv O 
				where TE.crg_tcode=(CASE WHEN O.Buy_Account IS NULL THEN O.Sell_Account WHEN O.Sell_Account IS NULL THEN O.Buy_Account END) AND TE.crg_exchange='NSE - FO')
				as a1,Trans_ExchangeTrades
				where 
				exists(select ExchangeTrades_ID from Trans_ExchangeTrades,#TempTableTradeFoCsv 
				where convert(varchar(12),ExchangeTrades_TradeDate,105)=convert(varchar(10),cast(Trade_Time as datetime),105)
				and ExchangeTrades_TradeNumber=Trade_no and ExchangeTrades_OrderNumber=(CASE WHEN Buy_orderno IS NULL THEN Sell_Orderno when Sell_Orderno is null then Buy_orderno end)
				AND (LEN(ExchangeTrades_CustomerID)=0 OR ExchangeTrades_CustomerID is null)  And ExchangeTrades_CompanyID=@ExchangeTrades_CompanyID 
				AND ExchangeTrades_Segment=@ExcSegmt) 
				AND a1.crg_tcode=(CASE WHEN a1.Buy_Account IS NULL THEN a1.Sell_Account WHEN a1.Sell_Account IS NULL THEN a1.Buy_Account END) AND a1.crg_exchange='NSE - FO'
				AND (ExchangeTrades_CustomerID is null OR LEN(ExchangeTrades_CustomerID)=0)
				AND ExchangeTrades_Segment=@ExcSegmt AND ExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
				AND ExchangeTrades_TradeNumber=a1.Trade_no and ExchangeTrades_OrderNumber=(CASE WHEN a1.Buy_orderno IS NULL THEN a1.Sell_Orderno when a1.Sell_Orderno is null then a1.Buy_orderno end)

			 


				 ---------------------------------------------------------------Checking For CustomerID Is Null---------------------------------
							SELECT DISTINCT exchangetrades_CustomerUcc FROM Trans_exchangetrades WHERE
							exchangetrades_Segment=@ExcSegmt AND  convert(varchar(10),exchangetrades_TradeDate,120)=convert(varchar(10),cast(@DATE as datetime),120)
							AND (exchangetrades_CustomerID IS NULL or len(exchangetrades_CustomerID)=0) and ExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
							----------------------------------Showing the Import Summary --------------------------------------------------------
							select exchangetrades_settlementnumber as [Sett.No],exchangetrades_settlementtype as [Sett.Type],
							sum(rowcnt) as Records,
							sum(isnull(buy,0)) as [Buy Obligation],
							sum(isnull(sell,0)) as [Sell Obligation],
							(sum(isnull(sell,0))-sum(isnull(buy,0))) as [Net Obligation]
							 from
							(select exchangetrades_settlementnumber,exchangetrades_settlementtype,COUNT(exchangetrades_settlementtype) as rowcnt,
							case when exchangetrades_buysellflag=1 then sum(exchangetrades_marketvalue) else null end buy,
							case when  exchangetrades_buysellflag=2 then sum(exchangetrades_marketvalue)  else null end as sell
							from TRANS_exchangetrades WHERE
							exchangetrades_SEGMENT=@ExcSegmt 
							and ExchangeTrades_TransactionType='Orgnl'
							AND convert(varchar(10),exchangetrades_TradeDate,120)=convert(varchar(10),cast(@DATE as datetime),120)
							and exchangetrades_CompanyID=@ExchangeTrades_CompanyID
							group by exchangetrades_settlementnumber,exchangetrades_settlementtype,exchangetrades_buysellflag)as bb
							group by exchangetrades_settlementnumber,exchangetrades_settlementtype
							---------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------Select Terminal ID not present in tradingterminal----------------------------------
					SELECT DISTINCT	(CASE WHEN Buy_Userid is null then Sell_userid else Buy_Userid END) as TERMINALID 
					from #TempTableTradeFoCsv WHERE (CASE WHEN Buy_Userid is null then Sell_userid else Buy_Userid END) 
					NOT IN (Select TradingTerminal_TerminalID from Master_tradingTerminal 
					where tradingterminal_ExchangeSegmentID=@ExcSegmt AND tradingterminal_companyID=@ExchangeTrades_CompanyID)
--------------------------------------------------------------------------------------------------------------
				Select cast(@DATE as datetime) as TradeDate
--------------------------------------------------------------------------------------------------------------
				Select cast(@DATE as datetime) as TradeDate

--------------------------------------------------Select Terminal IDs ----------------------------------
					SELECT DISTINCT	ExchangeTrades_TerminalID from TRANS_EXCHANGETRADES WHERE
						EXCHANGETRADES_SEGMENT=@ExcSegmt AND ExchangeTrades_TradeDate=cast(@DATE as datetime)
						and ExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
						and ExchangeTrades_TransactionType='Orgnl'
--------------------------------------------------------------------------------------------------------------
--------------------------------------------------Select UCC----------------------------------
						SELECT DISTINCT	ExchangeTrades_CustomerUCC from TRANS_EXCHANGETRADES WHERE
						EXCHANGETRADES_SEGMENT=@ExcSegmt AND ExchangeTrades_TradeDate=cast(@DATE as datetime)
						and ExchangeTrades_CompanyID=@ExchangeTrades_CompanyID
						and ExchangeTrades_TransactionType='Orgnl'
--------------------------------------------------------------------------------------------------------------

					Set @LockMsg=''

	end
	Else
	begin
		Set @LockMsg= 'The Data is Locked' 

	end




          END  
END 



GO

