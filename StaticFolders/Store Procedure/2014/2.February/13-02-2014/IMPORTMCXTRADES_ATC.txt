
-- =============================================
-- =============================================
ALTER  procedure [dbo].[IMPORTMCXTRADES_ATC]
	@Module varchar(100),
	@FilePath as varchar(255)=null,
	@SegmentId  int,
	@COMPANY_ID varchar(255)=null,
	@LckTradeDate datetime,
	@ExpireDate datetime,
	@LockMsg Varchar(250) Output

AS
BEGIN
	
	declare @ReadFrom as int
	declare @Q as varchar(250)
	declare @P int 
	Declare @Min as Int
	Declare @Max As Int
	DECLARE @STATUS AS INT		
	
	

	IF @Module='InsertTrade'
	BEGIN
			CREATE TABLE  #tmpTrans_MCEXTRADES (

				[MCEXTRADES_TradeNumber] varchar(100) null,
				[MCEXTRADES_TradeStatus]  varchar(100) null,
				[MCEXTRADES_InstrumentID] varchar(100) NULL,
				[MCEXTRADES_InstrumentName] varchar(100) NULL,
				[MCEXTRADES_ContractCode] varchar(100) NULL,
				[MCEXTRADES_ExpiryDate] varchar(200) null,
				[MCEXTRADES_Reserved] varchar(200) null,
				[MCEXTRADES_StrikePrice] varchar(200) null,
				[MCEXTRADES_OptionType] varchar(200) null,
				[MCEXTRADES_ContractDescription] varchar(100) null,
				[MCEXTRADES_BookType] varchar(100) null,
				[MCEXTRADES_BookTypeName] varchar(100) null,
				[MCEXTRADES_MarketType] varchar(100) null,
				[MCEXTRADES_TerminalID] varchar(100) null,
				[MCEXTRADES_BranchID] varchar(100) null,
				[MCEXTRADES_BuySellIndicator] varchar(100) null,
				[MCEXTRADES_TradeQuantity] varchar(100) null,
				[MCEXTRADES_Price] varchar(100) null,
				[MCEXTRADES_AccountType] varchar(100) null,
				[MCEXTRADES_Accounts] varchar(100) null,
				[MCEXTRADES_ParticipantSettler] varchar(100) null,
				[MCEXTRADES_SpreadPrice] varchar(100) null,
				[MCEXTRADES_TradingMemberID] varchar(100) null,
				[MCEXTRADES_Reserved1] varchar(100) null,
				[MCEXTRADES_TradeTime] varchar(100) null,
				[MCEXTRADES_LastModifiedTime] varchar(100) null,
				[MCEXTRADES_OrderNumber] varchar(100) null,
				[MCEXTRADES_Reserved2] varchar(100) null,
				[MCEXTRADES_UserRemarks] varchar(100) null,
				[MCEXTRADES_OrderUserLastModifiedTime] varchar(100) null,
				[MCEXTRADES_Reserved3] varchar(100) null,
				[MCEXTRADES_Reserved4] varchar(100) null,
				[MCEXTRADES_Reserved5] varchar(100) null
				
				)
				set @ReadFrom=1
				
				set @Q='BULK INSERT #tmpTrans_MCEXTRADES FROM '+ char(39) + @FilePath + char(39) + ' with (firstrow = ' + convert(varchar,@ReadFrom) + ' , FIELDTERMINATOR = ' + char(39) + ',' + char(39) + ' , ROWTERMINATOR = ' + char(39) + char(10)+ + char(39) +')'
				print @Q
				exec (@Q)
				
				Declare @UpdateDate DateTime
				Set @UpdateDate=GETDATE()

				alter table #tmpTrans_MCEXTRADES
				
						add  	[MCEXTRADES_ID] [bigint] IDENTITY(1,1) NOT NULL,	
						        [MCEXTRADES_ProductSeriesId] varchar(100) NULL,
								[MCEXTRADES_UNITQuantity] varchar(100) NULL,
								[MCEXTRADES_CustomerID] varchar(100) NULL,
								[MCEXTRADES_BrokerID] varchar(10) NULL
				
				
							DECLARE @TransactionType varchar(20)
							DECLARE @FY VARCHAR(11)  
							DECLARE @SETT_FY VARCHAR(250)
							DECLARE @DTDIFF	int
							Declare @Cflag char(1)
							declare @ww char(20)
							
							
							
							set @FY=(select Top (1) Convert(datetime,[MCEXTRADES_TradeTime],120) From #tmpTrans_MCEXTRADES )
								SET @DTDIFF=CAST(MONTH(@FY) AS INT)
								IF(@DTDIFF>=1 AND @DTDIFF<=3)
								BEGIN
									SET @SETT_FY=NULL
									SET @SETT_FY=  CAST((CAST(YEAR(@FY) AS INT)-1) AS VARCHAR(50) )+'-'+CAST(YEAR(@FY) AS VARCHAR(50))
								END
								IF(@DTDIFF>=4 AND @DTDIFF<=12)
								BEGIN
									SET @SETT_FY=NULL
									SET @SETT_FY=  CAST(YEAR(@FY) AS VARCHAR(50))+'-'+CAST((CAST(YEAR(@FY) AS INT)+1) AS VARCHAR(50) )
								END

							----------------------------------------------------------------------------------------------------
							UPDATE #tmpTrans_MCEXTRADES
							SET [MCEXTRADES_ProductSeriesId]=Commodity_ProductSeriesID
							from Master_Commodity where 
							Commodity_Identifier=REPLACE('FUTCOM',CHAR(13),'') 
							AND Commodity_ExchangeSegmentID=7 
							AND Commodity_EffectiveDate=SUBSTRING(CONVERT(varchar(12),CONVERT(DATETIME,[MCEXTRADES_ExpiryDate],121),120),0,11) 	
							AND Commodity_TickerSymbol=REPLACE([MCEXTRADES_ContractCode],CHAR(13),'')
							-------------------------------------------------------------------------------------------------------

							-----------------------------------Update temp table for Unit Price Quantity---------------------------
							Update #tmpTrans_MCEXTRADES 
							SET [MCEXTRADES_UNITQuantity]=[MCEXTRADES_TradeQuantity]*Commodity_ConvNumerator/Commodity_ConDenominator
							from Master_Commodity,#tmpTrans_MCEXTRADES   
							Where Commodity_ProductSeriesID=[MCEXTRADES_ProductSeriesId]

							-------------------------------------------------------------------------------------------------------

							--------------------------------------Customer ID--------------------------------------------------------

							UPDATE #tmpTrans_MCEXTRADES set [MCEXTRADES_CustomerID]=crg_cntID
								from tbl_master_contactExchange
								where crg_tcode=Ltrim(Rtrim([MCEXTRADES_Accounts]))AND crg_exchange='MCX - COMM'
							---------------------------------------------------------------------------------------------------------
							--------- Update the brokerID in case the terminalD are mapped to a broker -------------------
							Update #tmpTrans_MCEXTRADES Set [MCEXTRADES_BrokerID]=TradingTerminal_BrokerID 
							from Master_TradingTerminal
							where TradingTerminal_CompanyID=@COMPANY_ID
							and TradingTerminal_ExchangeSegmentID=@SegmentId
							and ltrim(rtrim(TradingTerminal_TerminalID))=ltrim(rtrim([MCEXTRADES_TerminalID]))
			If (cast(@FY as datetime)>=@LckTradeDate and cast(@FY as datetime)<=@ExpireDate)
			begin					
							----------------------------------------------------------------------------------------------------------
							--Delete all unidentified records of this day for this segment---
							Delete From Trans_ComExchangeTrades
							Where ComExchangeTrades_Segment=@SegmentId AND
							ComExchangeTrades_CompanyID=@COMPANY_ID And	
							convert(varchar(10),ComExchangeTrades_TradeDate,120)=convert(varchar(10),convert(datetime,@FY,120),120) And
							(ComExchangeTrades_Customerid is NULL or ComExchangeTrades_Productseriesid is NULL) and
							ComExchangeTrades_CustTransactionID is NULL
							-------------------------------------------------------------------------------


			CREATE TABLE  #tmpTrans_TradeTemp (

				ExchangeTradesID int,
				Tradedate datetime,
				TradeNumber varchar(100) null,
				OrderNumber varchar(100) null,
				CustomerId varchar(100) null,
				BranchId int,
                CompanyID varchar(100) null,
				Segment varchar(100)null
				)


				insert into #tmpTrans_TradeTemp
				(
					ExchangeTradesID,
					Tradedate ,
					TradeNumber ,
					OrderNumber ,
					CustomerId ,
					BranchId,
					CompanyID ,
					Segment 
				)

				Select 
				ComExchangeTrades_ID,
				ComExchangeTrades_TradeDate,
				ComExchangeTrades_TradeNumber,
				ComExchangeTrades_OrderNumber,
				ComExchangeTrades_CustomerID,
				ComExchangeTrades_BranchID,
				ComExchangeTrades_CompanyID,
				ComExchangeTrades_Segment

				from
				Trans_ComExchangeTrades,#tmpTrans_MCEXTRADES
				where
				ComExchangeTrades_CompanyID=@COMPANY_ID AND ComExchangeTrades_Segment=@SegmentId
				AND convert(varchar(10),ComExchangeTrades_TradeDate,105)=convert(varchar(10),cast(@FY as datetime),105 )
				AND LTRIM(RTRIM(REPLACE(ComExchangeTrades_TradeNumber,CHAR(13),'')))=LTRIM(RTRIM(REPLACE([MCEXTRADES_TradeNumber],CHAR(13),''))) 


---------------------------------------------------------------------------------------------------------------------------------------
		insert into Trans_ComExchangeTrades
           (ComExchangeTrades_FinYear,ComExchangeTrades_CompanyID,ComExchangeTrades_Segment,ComExchangeTrades_BranchID,ComExchangeTrades_SettlementNumber,
			ComExchangeTrades_SettlementType,ComExchangeTrades_ProductSeriesID,ComExchangeTrades_TradeDate,ComExchangeTrades_TradeNumber,
			ComExchangeTrades_TradeStatus,ComExchangeTrades_TradeEntryTime,ComExchangeTrades_TradeModifyTime,ComExchangeTrades_OrderNumber,
			ComExchangeTrades_TransactionType,ComExchangeTrades_CustomerUcc,ComExchangeTrades_ClearingMemberID,ComExchangeTrades_TradingMemberID,
			ComExchangeTrades_CustomerID,ComExchangeTrades_SecurityCode,ComExchangeTrades_SecuritySymbol,ComExchangeTrades_SecurityExpiry,
			ComExchangeTrades_BookType,ComExchangeTrades_MarketType,ComExchangeTrades_ProCli,ComExchangeTrades_TerminalId,
			ComExchangeTrades_CTCLID,ComExchangeTrades_BuySellFlag,ComExchangeTrades_Quantitylots,ComExchangeTrades_UnitPrice,
			ComExchangeTrades_UnitPriceQuantity,ComExchangeTrades_MarketValue,ComExchangeTrades_Remarks,ComExchangeTrades_ExchangeBranchID,
			ComExchangeTrades_ReferenceNumber,ComExchangeTrades_SpreadPrice,ComExchangeTrades_CreateUser,ComExchangeTrades_CreateDatetime,
			ComExchangeTrades_CounterPartyID,ComExchangeTrades_LastUpdateDate)

		select 
			@SETT_FY,
			@COMPANY_ID,
			@SegmentId,
			(select cnt_branchid from tbl_master_contact where cnt_internalId=isnull((Select CASE 
			WHEN  ([TradingTerminal_AllTradeID] is not null and LEN(REPLACE(isnull([TradingTerminal_AllTradeID],''),CHAR(13),''))>0) then TradingTerminal_AllTradeID
			when  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND (TradingTerminal_ProTradeID is null OR LEN(REPLACE(TradingTerminal_ProTradeID,CHAR(13),''))=0) AND (TradingTerminal_CliTradeID is null OR LEN(REPLACE(TradingTerminal_CliTradeID,CHAR(13),''))=0) then [MCEXTRADES_CustomerID] 
			WHEN  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND A.[MCEXTRADES_AccountType]='2' then TradingTerminal_ProTradeID
			when  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND A.[MCEXTRADES_AccountType]='1' then TradingTerminal_CliTradeID
			else [MCEXTRADES_CustomerID] end	
			from Master_TradingTerminal where LTRIM(RTRIM(TradingTerminal_TerminalID))=A.[MCEXTRADES_AccountS] AND TradingTerminal_ExchangeSegmentID=@SegmentId),[MCEXTRADES_CustomerID])),
			(Select Top(1) Master_Settlements.Settlements_Number FROM #tmpTrans_MCEXTRADES,Master_Settlements WHERE Master_Settlements.Settlements_ExchangeSegmentID=7 AND Substring(Convert(varchar(20),Convert(datetime,LTRIM(RTRIM(#tmpTrans_MCEXTRADES.[MCEXTRADES_TradeTime])),120),120),1,11) Between Settlements_StartDateTime AND Settlements_EndDateTime And Settlements_TypeSuffix='F'), 
			'F',
			[MCEXTRADES_ProductSeriesId],
			CONVERT(datetime,SUBSTRING(Convert(varchar(20),convert(datetime,[MCEXTRADES_TradeTime],121),105),1,11),105),
			[MCEXTRADES_TradeNumber],
			[MCEXTRADES_TradeStatus],
			convert(varchar(20),[MCEXTRADES_TradeTime],120),
			convert(varchar(20),[MCEXTRADES_LastModifiedTime],120),
			[MCEXTRADES_OrderNumber],
			(SELECT CASE WHEN MCEXTRADES_TradeStatus=11 then 'Orgnl'
			when [MCEXTRADES_TradeStatus]=12 then 'Modf'
			when [MCEXTRADES_TradeStatus]=17 then 'Appr'
			when [MCEXTRADES_TradeStatus]=18 then 'Rejc'
			END),
			[MCEXTRADES_Accounts],
			[MCEXTRADES_ParticipantSettler],
			[MCEXTRADES_TradingMemberID],
			isnull((Select CASE 
			WHEN  ([TradingTerminal_AllTradeID] is not null and LEN(REPLACE(isnull([TradingTerminal_AllTradeID],''),CHAR(13),''))>0) then TradingTerminal_AllTradeID
			when  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND (TradingTerminal_ProTradeID is null OR LEN(REPLACE(TradingTerminal_ProTradeID,CHAR(13),''))=0) AND (TradingTerminal_CliTradeID is null OR LEN(REPLACE(TradingTerminal_CliTradeID,CHAR(13),''))=0) then [MCEXTRADES_CustomerID] 
			WHEN  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND A.[MCEXTRADES_AccountType]='2' then TradingTerminal_ProTradeID
			when  (TradingTerminal_AllTradeID is null OR LEN(REPLACE([TradingTerminal_AllTradeID],CHAR(13),''))=0) AND A.[MCEXTRADES_AccountType]='1' then TradingTerminal_CliTradeID
			else [MCEXTRADES_CustomerID] end	
			from Master_TradingTerminal where LTRIM(RTRIM(TradingTerminal_TerminalID))=A.[MCEXTRADES_Accounts] AND TradingTerminal_ExchangeSegmentID=@SegmentId),[MCEXTRADES_CustomerID]),
			'FUTCOM',
			[MCEXTRADES_ContractCode],
			CAST([MCEXTRADES_ExpiryDate] AS VARCHAR(20)),
			REPLACE([MCEXTRADES_BookType],' ',''),
			REPLACE([MCEXTRADES_MarketType],' ',''),
			[MCEXTRADES_AccountType],
			LTRIM(RTRIM([MCEXTRADES_Accounts])),
			LTRIM(RTRIM([MCEXTRADES_TerminalID])),
			[MCEXTRADES_BuySellIndicator],
			[MCEXTRADES_TradeQuantity],
			[MCEXTRADES_Price],
			[MCEXTRADES_UNITQuantity],
			CAST(Convert(numeric(18, 4),[MCEXTRADES_Price])*Convert(numeric(14, 4),[MCEXTRADES_UNITQuantity]) as decimal(28,4)),

			CAST(REPLACE([MCEXTRADES_UserRemarks],' ','') as varchar(30)),
			[MCEXTRADES_BranchID], 
			null,
			(CASE WHEN [MCEXTRADES_SpreadPrice] is null then 0.0000 when LEN([MCEXTRADES_SpreadPrice])=0 then 0.0000 else Convert(Numeric(9,4),[MCEXTRADES_SpreadPrice]) end),
			'',
			getdate(),
			[MCEXTRADES_BrokerID],
			Case when isnull([MCEXTRADES_BrokerID],'')='' then NULL else @UpdateDate End
          
			from #tmpTrans_MCEXTRADES AS A
			LEFT OUTER JOIN
			tbl_master_contactExchange AS B ON (B.crg_tcode=A.[MCEXTRADES_Accounts] AND B.crg_exchange='MCX - COMM')
            Where not exists(select ExchangeTradesID from #tmpTrans_TradeTemp where convert(varchar(11),Tradedate,105)=convert(varchar(11),cast([MCEXTRADES_TradeTime] as datetime),105 ) and LTRIM(RTRIM(REPLACE(TradeNumber,CHAR(13),'')))=LTRIM(RTRIM(REPLACE([MCEXTRADES_TradeNumber],CHAR(13),''))) 
            and LTRIM(RTRIM(REPLACE(OrderNumber,CHAR(13),'')))=LTRIM(RTRIM(REPLACE([MCEXTRADES_OrderNumber],CHAr(13),''))) 
            AND Segment=@SegmentId AND CompanyID=@COMPANY_ID)			
			AND ([MCEXTRADES_Accounts]is not null or LEN([MCEXTRADES_Accounts])<>0)

-------------------------------------------------Checking For CustomerID Is Null---------------------------------
			SELECT DISTINCT ComExchangeTrades_CustomerUcc FROM Trans_ComExchangeTrades WHERE
			ComExchangeTrades_Segment=@SegmentId AND  convert(varchar(10),ComExchangeTrades_TradeDate,120)=convert(varchar(10),convert(datetime,@FY,120),120)
			AND (ComExchangeTrades_CustomerID IS NULL or len(ComExchangeTrades_CustomerID)=0) and ComExchangeTrades_CompanyID=@COMPANY_ID
-------------------------------------------------Showing the Import Summary --------------------------------------------------------
			select comexchangetrades_settlementnumber as [Sett.No],comexchangetrades_settlementtype as [Sett.Type],
			sum(rowcnt) as Records,
			sum(isnull(buy,0)) as [Buy Obligation],
			sum(isnull(sell,0)) as [Sell Obligation],
			(sum(isnull(sell,0))-sum(isnull(buy,0))) as [Net Obligation]
			 from
			(select comexchangetrades_settlementnumber,comexchangetrades_settlementtype,COUNT(comexchangetrades_settlementtype) as rowcnt,
			case when comexchangetrades_buysellflag=1 then sum(comexchangetrades_marketvalue) else null end buy,
			case when  comexchangetrades_buysellflag=2 then sum(comexchangetrades_marketvalue)  else null end as sell
			from TRANS_COMEXCHANGETRADES WHERE
			COMEXCHANGETRADES_SEGMENT=@SegmentId 
			and ComExchangeTrades_TransactionType='Orgnl'
			AND convert(varchar(10),ComExchangeTrades_TradeDate,120)=convert(varchar(10),convert(datetime,@FY,120),120)
			and ComExchangeTrades_CompanyID=@COMPANY_ID
			group by comexchangetrades_settlementnumber,comexchangetrades_settlementtype,comexchangetrades_buysellflag)as bb
			group by comexchangetrades_settlementnumber,comexchangetrades_settlementtype

-------------------------------------------------Checking For ProductSeriesID Is null-------------------------------------------
			SELECT DISTINCT ComExchangeTrades_SecuritySymbol+'['+ComExchangeTrades_SecurityCode+']'+'['+Convert(varchar(20),ComExchangeTrades_SecurityExpiry,106)+']' AS ComExchangeTrades_SecuritySymbol FROM Trans_ComExchangeTrades WHERE
			ComExchangeTrades_Segment=@SegmentId AND  convert(varchar(10),ComExchangeTrades_TradeDate,120)=convert(varchar(10),convert(datetime,@FY,120),120)
			AND (ComExchangeTrades_ProductSeriesID IS NULL or len(ComExchangeTrades_ProductSeriesID)=0) and ComExchangeTrades_CompanyID=@COMPANY_ID

--------------------------------------------------Select Terminal ID not present in tradingterminal----------------------------------
			SELECT DISTINCT	[MCEXTRADES_TerminalID] as TERMINALID from #tmpTrans_MCEXTRADES WHERE [MCEXTRADES_TerminalID] 
			NOT IN (Select TradingTerminal_TerminalID from Master_tradingTerminal 
			where tradingterminal_ExchangeSegmentID=@SegmentId AND tradingterminal_companyID=@COMPANY_ID)

------------------------------------------------------------------------------------------------------------------------------------------
			Select cast(@FY as datetime) as TradeDate

--------------------------------------------------Select Terminal IDs ----------------------------------
			SELECT DISTINCT	ComExchangeTrades_TerminalID from TRANS_COMEXCHANGETRADES WHERE
			ComExchangeTrades_Segment=@SegmentId AND ComExchangeTrades_TradeDate=cast(@FY as datetime)
			and ComExchangeTrades_CompanyID=@COMPANY_ID
			and ComExchangeTrades_TransactionType='Orgnl'
--------------------------------------------------------------------------------------------------------------
--------------------------------------------------Select UCC----------------------------------
			SELECT DISTINCT	ComExchangeTrades_CustomerUcc from TRANS_COMEXCHANGETRADES WHERE
			ComExchangeTrades_Segment=@SegmentId AND ComExchangeTrades_TradeDate=cast(@FY as datetime)
			and ComExchangeTrades_CompanyID=@COMPANY_ID
			and ComExchangeTrades_TransactionType='Orgnl'

---And Now trades for the Broker ------------
			insert into Trans_ComExchangeTrades
			(ComExchangeTrades_FinYear,ComExchangeTrades_CompanyID,ComExchangeTrades_Segment,ComExchangeTrades_BranchID,ComExchangeTrades_SettlementNumber,
			ComExchangeTrades_SettlementType,ComExchangeTrades_ProductSeriesID,ComExchangeTrades_TradeDate,ComExchangeTrades_TradeNumber,
			ComExchangeTrades_TradeStatus,ComExchangeTrades_TradeEntryTime,ComExchangeTrades_TradeModifyTime,ComExchangeTrades_OrderNumber,
			ComExchangeTrades_TransactionType,ComExchangeTrades_CustomerUcc,ComExchangeTrades_ClearingMemberID,ComExchangeTrades_TradingMemberID,
			ComExchangeTrades_CustomerID,ComExchangeTrades_SecurityCode,ComExchangeTrades_SecuritySymbol,ComExchangeTrades_SecurityExpiry,
			ComExchangeTrades_BookType,ComExchangeTrades_MarketType,ComExchangeTrades_ProCli,ComExchangeTrades_TerminalId,
			ComExchangeTrades_CTCLID,ComExchangeTrades_BuySellFlag,ComExchangeTrades_Quantitylots,ComExchangeTrades_UnitPrice,
			ComExchangeTrades_UnitPriceQuantity,ComExchangeTrades_MarketValue,ComExchangeTrades_Remarks,ComExchangeTrades_ExchangeBranchID,
			ComExchangeTrades_ReferenceNumber,ComExchangeTrades_SpreadPrice,ComExchangeTrades_CreateUser,ComExchangeTrades_CreateDatetime,
			ComExchangeTrades_CounterPartyID,ComExchangeTrades_LastUpdateDate)
			Select ComExchangeTrades_FinYear,ComExchangeTrades_CompanyID,ComExchangeTrades_Segment,ComExchangeTrades_BranchID,ComExchangeTrades_SettlementNumber,
			ComExchangeTrades_SettlementType,ComExchangeTrades_ProductSeriesID,ComExchangeTrades_TradeDate,ComExchangeTrades_TradeNumber,
			ComExchangeTrades_TradeStatus,ComExchangeTrades_TradeEntryTime,ComExchangeTrades_TradeModifyTime,ComExchangeTrades_OrderNumber,
			ComExchangeTrades_TransactionType,ComExchangeTrades_CustomerUcc,ComExchangeTrades_ClearingMemberID,ComExchangeTrades_TradingMemberID,
			ComExchangeTrades_CounterPartyID,ComExchangeTrades_SecurityCode,ComExchangeTrades_SecuritySymbol,ComExchangeTrades_SecurityExpiry,
			ComExchangeTrades_BookType,ComExchangeTrades_MarketType,ComExchangeTrades_ProCli,ComExchangeTrades_TerminalId,
			ComExchangeTrades_CTCLID,
			Case When ComExchangeTrades_BuySellFlag=1 then 2 Else 1 End,
			ComExchangeTrades_Quantitylots,ComExchangeTrades_UnitPrice,
			ComExchangeTrades_UnitPriceQuantity,ComExchangeTrades_MarketValue,ComExchangeTrades_Remarks,ComExchangeTrades_ExchangeBranchID,
			ComExchangeTrades_ReferenceNumber,ComExchangeTrades_SpreadPrice,ComExchangeTrades_CreateUser,GETDATE(),
			ComExchangeTrades_CustomerID,ComExchangeTrades_LastUpdateDate
			From Trans_ComExchangeTrades where
			ComExchangeTrades_CompanyID=@COMPANY_ID
			and ComExchangeTrades_FinYear=@SETT_FY
			and ComExchangeTrades_Segment=@SegmentId
			and ComExchangeTrades_TradeDate=cast(@FY As DateTime)
			and ComExchangeTrades_CreateUser=''
			and ComExchangeTrades_LastUpdateDate=@UpdateDate
			and LEFT(ISNULL(ComExchangeTrades_CounterPartyID,'NOR'),2)='BO'
			
			Set @LockMsg= '' 
		End
		Else
		Begin
			Set @LockMsg= 'The Data is Locked' 
		End
--------------------------------------------------------------------------------------------------------------

	END
END


