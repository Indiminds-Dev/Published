
ALTER procedure [dbo].[Processing_ClientPayout]
@PayoutData ntext,
@Finyear varchar(12),
@CompanyID varchar(15),
@StocksSettlementNumber varchar(12),
@StocksAcId varchar(12),
@TransferDate varchar(35),
@PositionSettlementNumber varchar(12),
@CreateUser varchar(10),
@SegmentID int,
@Remarks varchar(150),
@RecieveAll varchar(10),
@PoolAcc varchar(100)

As
Begin 
Set NoCount On

--------------------------------------------------------Table Creation Begin

			declare @SettTypeS varchar(5),@SettNumberS varchar(15),@AccountType varchar(30)

			set @SettNumberS  =substring(@StocksSettlementNumber,1,7)---------Only Number ---------
			set @SettTypeS =substring(@StocksSettlementNumber,8,1)-------Only Character --------

			declare @SettTypePostion varchar(5),@SettNumberPostion varchar(15)

			set @SettNumberPostion  =substring(@PositionSettlementNumber,1,7)---------Only Number ---------
			set @SettTypePostion =substring(@PositionSettlementNumber,8,1)-------Only Character --------
			select @AccountType = DPAccounts_AccountType from Master_DPAccounts where DPAccounts_ID=@StocksAcId
			
			-------SourceAc Details Fetch
			Declare @SourceDPID varchar(20),@SourceClientID varchar(20),@SourceCMBPID varchar(20),@SegmentidS varchar(20),@RecieveAllAccount varchar(10) 
			Select  @SourceDPID=DpACcounts_DPID
				   ,@SourceClientID=DpACcounts_ClientId
				   ,@SourceCMBPID=DpACcounts_CMBPID
				   ,@SegmentidS=DpACcounts_ExchangeSegmentId
			From Master_DpACcounts Where DpACcounts_Id=@StocksAcId
			
			if(@PoolAcc<>'NA')
			Begin
				Declare @TargetDPID varchar(10),@TargetClientID  varchar(10),@TargetCMBPID varchar(10)
				Select @TargetDPID=dbo.fnSplit(@PoolAcc,'~',2)
				Select @TargetClientID=dbo.fnSplit(@PoolAcc,'~',3)
				Select @TargetCMBPID=dbo.fnSplit(@PoolAcc,'~',5)
				Select @RecieveAllAccount=dbo.fnSplit(@PoolAcc,'~',1)
			End
			
			if(@RecieveAll<>'ALL' )
			Begin
			Declare @i int
			EXEC SP_XML_PREPAREDOCUMENT @i OUTPUT,@PayoutData
			
			Select * Into  #TbPayout From(
			Select * From OPENXML (@i,'/NewDataSet/Table')
			WITH (CustomerID varchar(15),BranchId varchar(20),ProductId varchar(30),ISIN varchar(30),AcId varchar(30),TotalSTocks numeric(28,0),
			Deliverable numeric(28,0),Scrip varchar(150),SettlementNoT varchar(20),SettlementTypeT varchar(10),
			CustomerAcT varchar(20),OwnAcT varchar(20),TargetDPID varchar(20),TargetClientID varchar(20),TargetCMBPID varchar(20),
			TranType varchar(5),SegmentT varchar(20),AcCheck varchar(8),
			NullValue varchar(20) '.') ) as KK
			
			--select * from #TbPayout
			----------Due To Stocks Is less Process Is Not Complete
			Create Table #TbStocks(ScripName varchar(150),IsinNo varchar(30),PrdId varchar(20))
--------------------------------------------------------Table Creation End

			----------Per Product Stocks Check Begin
			
			Insert Into #TbStocks(PrdId)
			Select PrdId From 
			(Select Sum(Isnull(Deliverable,0)) as Stocks,ProductId as PrdId
			From #TbPayout Group By ProductId) as jj,
			(Select Distinct ProductId as PrId,TotalSTocks From #TbPayout) as kk
			Where PrdId=PrId and isnull(TotalSTocks,0)<isnull(Stocks,0)
			
			---------------------------------------------------*******
			if(@AccountType<>'[PLDRCTDEL]')
			Begin
				Update #TbStocks Set ScripName=Scrip,IsinNo=ISIN From #TbPayout Where ProductId=PrdId
				
				Delete From #TbPayout WHere ProductId in (Select PrdId From #TbStocks)
			End
			
			--select * from #TbPayout
			----------Per Product Stocks Check End
			Update #TbPayout Set  BranchId=cnt_branchid From tbl_master_contact Where cnt_internalid=CustomerID

			------------Target Ac Fetch For [Hldbk/Margin] Begin
			Update #TbPayout Set SettlementNoT=Case When rtrim(DpACcounts_AccountType)='[Own]' Then 'Own' When rtrim(DpACcounts_AccountType)='[MRGIN]' Then 'Margin' Else 'Hldbk' End
								,SettlementTypeT=Case When rtrim(DpACcounts_AccountType)='[Own]' Then 'O' When rtrim(DpACcounts_AccountType)='[MRGIN]' Then 'M' Else 'H' End
								,OwnAcT=AcId
								,TargetDPID=DpACcounts_DPID
								,TargetClientID=DpACcounts_ClientId
								,TranType='IA'
								,SegmentT=Case When DpACcounts_ExchangeSegmentId=0 Then null Else DpACcounts_ExchangeSegmentId End
			From Master_DpACcounts Where DpACcounts_Id=AcId 
			and AcCheck in ('Hldbk','Margin')
			------------Target Ac Fetch For [Hldbk/Margin] End

			------------Target Ac Fetch For [Own] Begin
			Update #TbPayout Set SettlementNoT='Own'
								,SettlementTypeT='O'
								,OwnAcT=AcId
								,TargetDPID=DpACcounts_DPID
								,TargetClientID=DpACcounts_ClientId
								,TranType='IA'
								,SegmentT=Case When DpACcounts_ExchangeSegmentId=0 Then null Else DpACcounts_ExchangeSegmentId End
			From Master_DpACcounts Where DpACcounts_Id=AcId and AcCheck in ('Client')
			and rtrim(DpACcounts_AccountType)='[Own]'
			------------Target Ac Fetch For [Own] End

			------------Target Ac Fetch For [Client] Begin
			Update #TbPayout Set CustomerAcT=dpd_id
								,TargetDPID=Dp_DPID
								,TargetClientID=dpd_clientid
								,TranType='CO'
			From tbl_master_contactdpdetails,tbl_master_depositoryparticipants
			Where dpd_CNTID=CustomerID and dpd_dpcode=dp_dpid and dpd_id=AcId and AcCheck='Client'
			------------Target Ac Fetch For [Null] Begin
			Update #TbPayout Set CustomerAcT=dpd_id
								,TargetDPID=Dp_DPID
								,TargetClientID=dpd_clientid
			From tbl_master_contactdpdetails,tbl_master_depositoryparticipants
			Where dpd_CNTID=CustomerID and dpd_dpcode=dp_dpid and TargetDPID is null and TargetClientID is null
			------------Target Ac Fetch For [Client] End
			
			End
			if(@AccountType<>'[PLDRCTDEL]')
			Begin
				----------------------Insert Into Transaction Table-----------------------
				Insert Into Trans_DematTransactions(
				DematTransactions_FinYear,DematTransactions_Date,DematTransactions_CompanyID,
				DematTransactions_SegmentID,
				DematTransactions_BranchID,DematTransactions_CustomerID,
				DematTransactions_ProductSeriesID,DematTransactions_ISIN,DematTransactions_Type,
				DematTransactions_TransferType,DematTransactions_Nature,
				DematTransactions_SettlementNumberS,DematTransactions_SettlementTypeS,DematTransactions_Quantity,
				DematTransactions_OwnAccountS,DematTransactions_OwnAccountT,DematTransactions_CustomerAccountT,
				DematTransactions_SourceDPID,DematTransactions_SourceClientID,DematTransactions_SourceCMBPID,
				DematTransactions_TargetDPID,DematTransactions_TargetClientID,DematTransactions_TargetCMBPID,
				DematTransactions_CreateUser,DematTransactions_CreateDateTime,DematTransactions_GenerationType,
				DematTransactions_SettlementNumberT,DematTransactions_SettlementTypeT
				,DematTransactions_SourceSegmentID,DematTransactions_Remarks)

				Select  @Finyear,Cast(@TransferDate as Datetime),@CompanyID,
						Case When SegmentT is not null and TranType='IA' and isnull(SettlementTypeT,'R') in ('M','H') and SegmentT<>@SegmentidS Then SegmentT Else @SegmentidS End,
						BranchId,CustomerID,ProductID,ISIN,TranType,'NR','P',
						@SettNumberS,@SettTypeS,Deliverable,
						@StocksAcId,OwnAcT,CustomerAcT,
						@SourceDPID,@SourceClientID,@SourceCMBPID,
						TargetDPID,TargetClientID,TargetCMBPID,
						@CreateUser,getdate(),'A',
						SettlementNoT,SettlementTypeT,
						Case When SegmentT is not null and TranType='IA' and isnull(SettlementTypeT,'R') in ('M','H') and SegmentT<>@SegmentidS Then @SegmentidS Else null End,
						Case When @Remarks='NA' Then null Else @Remarks End
				From #TbPayout

				----------DematPosition Updation
				exec sp_Update_DematPositions @CreateUser,@Finyear,@CompanyID,'NA','MU',@SettNumberS,@SettTypeS,'N','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA'

				declare @SettlementTable table
				(
					Id int identity,
					SettlementNumber varchar(30),
					SettlementType varchar(10)
				)
				insert into @SettlementTable (SettlementNumber,SettlementType)
				Select distinct SettlementNoT,SettlementTypeT
				From #TbPayout Where SettlementNoT is not null
				
				declare @k int
				declare @sett_num varchar(30), @sett_type varchar(10)
				set @k=1
				while (@k <= (select max(Id) from @SettlementTable))
				begin
					select @sett_num = SettlementNumber from @SettlementTable where Id = @k

					select @sett_type = SettlementType from @SettlementTable where Id = @k

					exec sp_Update_DematPositions @CreateUser,@Finyear,@CompanyID,'NA','MU',@sett_num,@sett_type,'N','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA'
					
					set @k = @k + 1

				end

				-----------------------------DematStock------------------------------
				exec sp_Update_DematStocks 'NA','NA','NA','N','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA'
				
				---------Stocks Update
				update Trans_DematTransactions set DematTransactions_IsStockUpdated = 1 
				Where DematTransactions_IsStockUpdated is null and DematTransactions_CreateUser=@CreateUser 

				----------------------Insert Into Transaction Table For OffSet Position-----------------------
				if (@PositionSettlementNumber<>@StocksSettlementNumber)
				Begin
							Insert Into Trans_DematTransactions(
							DematTransactions_FinYear,DematTransactions_Date,DematTransactions_CompanyID,
							DematTransactions_SegmentID,
							DematTransactions_BranchID,DematTransactions_CustomerID,
							DematTransactions_ProductSeriesID,DematTransactions_ISIN,DematTransactions_Type,
							DematTransactions_TransferType,DematTransactions_Nature,
							DematTransactions_SettlementNumberS,DematTransactions_SettlementTypeS,DematTransactions_Quantity,
							DematTransactions_CreateUser,DematTransactions_CreateDateTime,DematTransactions_GenerationType,
							DematTransactions_SettlementNumberT,DematTransactions_SettlementTypeT,DematTransactions_Remarks)

							Select  @Finyear,Cast(@TransferDate as Datetime),@CompanyID,
									@SegmentidS,
									BranchId,CustomerID,ProductID,ISIN,'XP','NR','P',
									@SettNumberPostion,@SettTypePostion,Deliverable,
									@CreateUser,getdate(),'A',
									@SettNumberS,@SettTypeS,
									Case When @Remarks='NA' Then 'Position AdJustment' Else @Remarks End 
							From #TbPayout

						----------DematPosition Updation
						exec sp_Update_DematPositions @CreateUser,@Finyear,@CompanyID,@SegmentidS,'MU',@SettNumberPostion,@SettTypePostion,'N','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA'
						exec sp_Update_DematPositions @CreateUser,@Finyear,@CompanyID,@SegmentidS,'MU',@SettNumberS,@SettTypeS,'N','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA'

						-----------------------------DematStock------------------------------
						exec sp_Update_DematStocks 'NA','NA','NA','N','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA','NA'
				
						---------Stocks Update
						update Trans_DematTransactions set DematTransactions_IsStockUpdated = 1 
						Where DematTransactions_IsStockUpdated is null and DematTransactions_CreateUser=@CreateUser 

				End
				
			End
			Else
			Begin
				
				create table #Header(StaticValue int,FileType varchar(10),MemberType char(1),MemberCode varchar(50),SettlementType char(1),
								   SettlementNumber char(7),DeliveryType char(1),BatchNumber varchar(50),TotalRecord int,TotalQuantity int)  
				create table #Detailrecord(StaticValue int,DPId varchar(10),ISIN varchar(15),BenAccountNo varchar(20),Quantity int)
				----------------------Insert Into Transaction Table-----------------------
				Declare @TMCode varchar(50)
				select @TMCode = ltrim(rtrim(exch_TMCode)) from tbl_master_companyExchange where exch_compId=@CompanyID 
				and exch_segmentId='CM' and exch_internalId=@SegmentID
				
				insert into #Header(StaticValue,FileType,MemberType,MemberCode,SettlementType,SettlementNumber,DeliveryType)
				values(10,'CPD','M',@TMCode,@SettTypeS,@SettNumberS,'N')
								
				Delete from Trans_DematTransactionsCPD where DematTransactions_SettlementNumberS=@SettNumberS 
				and DematTransactions_SettlementTypeS=@SettTypeS and DematTransactions_FinYear=@Finyear
				    
			    if(@RecieveAll='ALL' )
			    Begin
					Insert Into Trans_DematTransactionsCPD(
					DematTransactions_FinYear,DematTransactions_Date,DematTransactions_CompanyID,
					DematTransactions_SegmentID,DematTransactions_CustomerID,
					DematTransactions_ProductSeriesID,DematTransactions_ISIN,DematTransactions_Type,
					DematTransactions_TransferType,DematTransactions_Nature,
					DematTransactions_SettlementNumberS,DematTransactions_SettlementTypeS,DematTransactions_Quantity,
					DematTransactions_OwnAccountS,DematTransactions_OwnAccountT,DematTransactions_SourceDPID,
					DematTransactions_SourceClientID,DematTransactions_SourceCMBPID,DematTransactions_TargetDPID,
					DematTransactions_TargetClientID,DematTransactions_TargetCMBPID,DematTransactions_CreateUser,
					DematTransactions_CreateDateTime,DematTransactions_GenerationType,DematTransactions_SettlementNumberT,
					DematTransactions_SettlementTypeT,DematTransactions_Remarks)
					
					Select  @Finyear,Cast(@TransferDate as Datetime),@CompanyID,@SegmentID,'NSE-CM',DematPosition_ProductSeriesID,
					DematPosition_ISIN,'MO','NR','P',@SettNumberS ,@SettTypeS,DematPosition_QtyToReceive,
					@RecieveAllAccount,@RecieveAllAccount,
					@TargetDPID ,@TargetClientID ,@TargetCMBPID,@TargetDPID,@TargetClientID,@TargetCMBPID,
					@CreateUser,getdate(),'A',@SettNumberS ,@SettTypeS,@Remarks
					from Trans_DematPosition where 
					DematPosition_SettlementNumber=@SettNumberS and DematPosition_SettlementType=@SettTypeS 
					and DematPosition_FinYear=@Finyear and DematPosition_CustomerID='NSE-CM'
					and DematPosition_QtyToReceive <>0
					
					
					insert into #Detailrecord(StaticValue,DPId,ISIN,BenAccountNo,Quantity)
					select 20,case when @SourceDPID like 'IN%' then 'NSDL'Else 'CDSL' end as DPId,DematPosition_ISIN as ISIN,@TargetDPID+@TargetClientID as BenAccountNo,
					sum(DematPosition_QtyToReceive-isnull(DematPosition_QtyReceived,0))Quantity
					from Trans_DematPosition where DematPosition_FinYear=@Finyear
					and DematPosition_SettlementNumber=@SettNumberS and DematPosition_SettlementType=@SettTypeS
					and DematPosition_CustomerID='NSE-CM'
					group by DematPosition_ISIN
					having sum(DematPosition_QtyToReceive-isnull(DematPosition_QtyReceived,0)) <>0
					
										 
			    End
			    else
			    Begin
			    
					
					Insert Into Trans_DematTransactionsCPD(
					DematTransactions_FinYear,DematTransactions_Date,DematTransactions_CompanyID,
					DematTransactions_SegmentID,
					DematTransactions_BranchID,DematTransactions_CustomerID,
					DematTransactions_ProductSeriesID,DematTransactions_ISIN,DematTransactions_Type,
					DematTransactions_TransferType,DematTransactions_Nature,
					DematTransactions_SettlementNumberS,DematTransactions_SettlementTypeS,DematTransactions_Quantity,
					DematTransactions_OwnAccountS,DematTransactions_OwnAccountT,DematTransactions_CustomerAccountT,
					DematTransactions_SourceDPID,DematTransactions_SourceClientID,DematTransactions_SourceCMBPID,
					DematTransactions_TargetDPID,DematTransactions_TargetClientID,DematTransactions_TargetCMBPID,
					DematTransactions_CreateUser,DematTransactions_CreateDateTime,DematTransactions_GenerationType,
					DematTransactions_SettlementNumberT,DematTransactions_SettlementTypeT,
					DematTransactions_SourceSegmentID,DematTransactions_Remarks)

					Select  @Finyear,Cast(@TransferDate as Datetime),@CompanyID,
							Case When SegmentT is not null and TranType='IA' and isnull(SettlementTypeT,'R') in ('M','H') and SegmentT<>@SegmentidS Then SegmentT Else @SegmentidS End,
							BranchId,CustomerID,ProductID,ISIN,TranType,'NR','P',
							@SettNumberS,@SettTypeS,Deliverable,
							@StocksAcId,OwnAcT,CustomerAcT,
							@SourceDPID,@SourceClientID,@SourceCMBPID,
							TargetDPID,TargetClientID,TargetCMBPID,
							@CreateUser,getdate(),'A',
							SettlementNoT,SettlementTypeT,
							Case When SegmentT is not null and TranType='IA' and isnull(SettlementTypeT,'R') in ('M','H') and SegmentT<>@SegmentidS Then @SegmentidS Else null End,
							Case When @Remarks='NA' Then null Else @Remarks End
					From #TbPayout
			    
			    
					insert into #Detailrecord(StaticValue,DPId,ISIN,BenAccountNo,Quantity)
					select 20,case when @SourceDPID like 'IN%' then 'NSDL'Else 'CDSL' end ,ISIN,
					case when @SourceDPID like 'IN%' then ltrim(rtrim(TargetDPID))+ltrim(rtrim(TargetClientID)) 
					Else ltrim(rtrim(TargetClientID)) end,Deliverable
					from #TbPayout
				End 
			    
			    declare @TotalQuntty int,@TotalRecord int,@record varchar(50),@FileName varchar(50)
			    
			    set @record=null
				set @record=(select max(ExportFiles_BatchNumber) from Trans_ExportFiles 
					where [ExportFiles_Segment]=@SegmentID and [ExportFiles_Type]='CPD Files'
					and cast(DATEADD(dd, 0, DATEDIFF(dd, 0,[ExportFiles_CreateDateTime])) as datetime)=
					cast(DATEADD(dd, 0, DATEDIFF(dd, 0,getdate())) as datetime))
				if(@record is null)
						begin
							set @record='01'
						end
				else 
						begin
							set @record=@record+1
							if (@record<=9)
								begin
									set @record='0'+@record
								end
							if(@record>9 and @record<=99)
								begin
									set @record=@record
								end
						end
						
			    select @FileName = 'CPD'+@SettTypeS+@SettNumberS+'N.T'+@record
				select @TotalQuntty=SUM(Quantity)from #Detailrecord		    
			    select @TotalRecord=COUNT(*) from  #Detailrecord
			    
			    Update Trans_DematTransactionsCPD set DematTransactions_BatchNumber= @record 
			    where DematTransactions_SettlementNumberS=@SettNumberS and DematTransactions_SettlementTypeS=@SettTypeS 
				and DematTransactions_FinYear=@Finyear
			    
			    insert into Trans_ExportFiles(ExportFiles_Segment,ExportFiles_Type,ExportFiles_Name,ExportFiles_BatchNumber,
											 ExportFiles_Path,ExportFiles_CreateUser,ExportFiles_CreateDateTime)
				select @SegmentID,'CPD Files',@FileName,@record,'ExportFiles/PAYOUT/',@CreateUser,GETDATE()
			    
				update #Header set TotalRecord =@TotalRecord,TotalQuantity=@TotalQuntty,BatchNumber=@record
				select * from #Header
				
				if(@RecieveAll<>'ALL' )
				Begin
					select max(StaticValue)as StaticValue,max(DPId)as DPId,ISIN,BenAccountNo,SUM (quantity) as Quantity
								from #Detailrecord group by ISIN,BenAccountNo
								
					select @FileName
										
				End
				else
				Begin
					select * from #Detailrecord 
					select @FileName
				End

				-------------Drop Table


				drop table #Header
				drop table #Detailrecord
			End
-------------For No Process
			if(@RecieveAll<>'ALL' )
			Begin
				Select ScripName as [Scrip Name],IsinNo as [ISIN] from #TbStocks
				Drop Table #TbStocks
				Drop Table #TbPayout
			End

End
----exec [Processing_ClientPayout] '<NewDataSet>
----  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
----    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true">
----      <xs:complexType>
----        <xs:choice minOccurs="0" maxOccurs="unbounded">
----          <xs:element name="Table">
----            <xs:complexType>
----              <xs:attribute name="CustomerID" type="xs:string" />
----              <xs:attribute name="ProductId" type="xs:string" />
----              <xs:attribute name="ISIN" type="xs:string" />
----              <xs:attribute name="TotalSTocks" type="xs:decimal" />
----              <xs:attribute name="AcId" type="xs:string" />
----              <xs:attribute name="Deliverable" type="xs:decimal" />
----              <xs:attribute name="Scrip" type="xs:string" />
----            </xs:complexType>
----          </xs:element>
----        </xs:choice>
----      </xs:complexType>
----    </xs:element>
----  </xs:schema>
----  <Table CustomerID="CLA0000378" ProductId="237" ISIN="INE008A01015" TotalSTocks="7650" AcId="15" Deliverable="500" Scrip="IDBI EQ" />
----  <Table CustomerID="CLA0000378" ProductId="285" ISIN="INE875A01025" TotalSTocks="1400" AcId="14" Deliverable="200" Scrip="IVRCLINFRA EQ" />
----  <Table CustomerID="CLR0000043" ProductId="753" ISIN="INE397D01024" TotalSTocks="100" AcId="15" Deliverable="100" Scrip="BHARTIARTL EQ" />
----  <Table CustomerID="CLR0000507" ProductId="603" ISIN="INE002A01018" TotalSTocks="385" AcId="14" Deliverable="5" Scrip="RELIANCE EQ" />
----  
----  <Table CustomerID="CLU0000052" ProductId="320" ISIN="INE019A01020" TotalSTocks="260" AcId="15" Deliverable="100" Scrip="JSWSTEEL EQ" />
----</NewDataSet>','2011-2012','COR0000002','2011080N','25','2011-05-11','2011080N','333'




